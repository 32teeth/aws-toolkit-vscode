{
    "version": "2.0",
    "metadata": {
        "apiVersion": "2022-04-27",
        "endpointPrefix": "consolas",
        "jsonVersion": "1.0",
        "protocol": "json",
        "serviceFullName": "AWS Vector Consolas Service and Client Sdks",
        "serviceId": "Consolas",
        "signatureVersion": "v4",
        "signingName": "consolas",
        "targetPrefix": "AWSVectorConsolasRuntimeService",
        "uid": "consolas-2022-04-27"
    },
    "operations": {
        "CreateCodeScan": {
            "name": "CreateCodeScan",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "CreateCodeScanRequest"
            },
            "output": {
                "shape": "CreateCodeScanResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "ValidationException"
                },
                {
                    "shape": "ConflictException"
                }
            ],
            "documentation": "<p>Create a code scan job</p>",
            "idempotent": true
        },
        "CreateUploadUrl": {
            "name": "CreateUploadUrl",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "CreateUploadUrlRequest"
            },
            "output": {
                "shape": "CreateUploadUrlResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ValidationException"
                }
            ],
            "documentation": "<p>Create a presigned s3 write URL for uploading customer repository zip archive</p>",
            "idempotent": true
        },
        "GenerateRecommendations": {
            "name": "GenerateRecommendations",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "GenerateRecommendationsRequest"
            },
            "output": {
                "shape": "GenerateRecommendationsResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ValidationException"
                }
            ],
            "documentation": "<p>Generate recommendations according to the file context and return to the user</p>"
        },
        "GetAccessToken": {
            "name": "GetAccessToken",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "GetAccessTokenRequest"
            },
            "output": {
                "shape": "GetAccessTokenResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ValidationException"
                }
            ],
            "documentation": "<p>API to vend AccessToken in exchange of Identity token to access Consolas Recommendations API.</p>"
        },
        "GetCodeScan": {
            "name": "GetCodeScan",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "GetCodeScanRequest"
            },
            "output": {
                "shape": "GetCodeScanResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ValidationException"
                }
            ],
            "documentation": "<p>Get metadata of a code scan job.</p>"
        },
        "ListCodeScanFindings": {
            "name": "ListCodeScanFindings",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "ListCodeScanFindingsRequest"
            },
            "output": {
                "shape": "ListCodeScanFindingsResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ResourceNotFoundException"
                },
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ValidationException"
                }
            ],
            "documentation": "<p>List CodeScan Findings</p>"
        },
        "ListRecommendations": {
            "name": "ListRecommendations",
            "http": {
                "method": "POST",
                "requestUri": "/"
            },
            "input": {
                "shape": "ListRecommendationsRequest"
            },
            "output": {
                "shape": "ListRecommendationsResponse"
            },
            "errors": [
                {
                    "shape": "InternalServerException"
                },
                {
                    "shape": "AccessDeniedException"
                },
                {
                    "shape": "ThrottlingException"
                },
                {
                    "shape": "ValidationException"
                }
            ],
            "documentation": "<p>List recommendations according to the file context and return to the user, will support pagination</p>"
        }
    },
    "shapes": {
        "AccessDeniedException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "documentation": "<p>This exception is thrown when the user does not have sufficient access to perform this action.</p>",
            "exception": true
        },
        "ArtifactMap": {
            "type": "map",
            "key": {
                "shape": "ArtifactType"
            },
            "value": {
                "shape": "UploadId"
            },
            "documentation": "<p>Specifies the artifact map used for security scan.</p>",
            "max": 64,
            "min": 1
        },
        "ArtifactType": {
            "type": "string",
            "documentation": "<p>Specifies the artifact type used for security scan.</p>",
            "enum": ["SourceCode", "BuiltJars"]
        },
        "CodeScanFindingsSchema": {
            "type": "string",
            "documentation": "<p>Specifies schema of CodeScan findings</p>",
            "enum": ["codescan/findings/1.0"]
        },
        "CodeScanStatus": {
            "type": "string",
            "documentation": "<p>CodeScan job status</p>",
            "enum": ["Completed", "Pending", "Failed"]
        },
        "ConflictException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "documentation": "<p>This exception is thrown when the action to perform could not be completed because the resource is in a conflicting state.</p>",
            "exception": true
        },
        "CreateCodeScanRequest": {
            "type": "structure",
            "required": ["artifacts", "programmingLanguage"],
            "members": {
                "artifacts": {
                    "shape": "ArtifactMap"
                },
                "programmingLanguage": {
                    "shape": "ProgrammingLanguage"
                },
                "clientToken": {
                    "shape": "CreateCodeScanRequestClientTokenString",
                    "idempotencyToken": true
                }
            }
        },
        "CreateCodeScanRequestClientTokenString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "CreateCodeScanResponse": {
            "type": "structure",
            "required": ["jobId", "status"],
            "members": {
                "jobId": {
                    "shape": "CreateCodeScanResponseJobIdString"
                },
                "status": {
                    "shape": "CodeScanStatus"
                },
                "errorMessage": {
                    "shape": "String"
                }
            }
        },
        "CreateCodeScanResponseJobIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "CreateUploadUrlRequest": {
            "type": "structure",
            "required": ["contentMd5", "artifactType"],
            "members": {
                "contentMd5": {
                    "shape": "CreateUploadUrlRequestContentMd5String"
                },
                "artifactType": {
                    "shape": "ArtifactType"
                }
            }
        },
        "CreateUploadUrlRequestContentMd5String": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "CreateUploadUrlResponse": {
            "type": "structure",
            "required": ["uploadId", "uploadUrl"],
            "members": {
                "uploadId": {
                    "shape": "UploadId"
                },
                "uploadUrl": {
                    "shape": "PreSignedUrl"
                }
            }
        },
        "FileContext": {
            "type": "structure",
            "required": ["leftFileContent", "rightFileContent", "filename", "programmingLanguage"],
            "members": {
                "leftFileContent": {
                    "shape": "FileContextLeftFileContentString"
                },
                "rightFileContent": {
                    "shape": "FileContextRightFileContentString"
                },
                "filename": {
                    "shape": "FileContextFilenameString"
                },
                "programmingLanguage": {
                    "shape": "ProgrammingLanguage"
                }
            }
        },
        "FileContextFilenameString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "FileContextLeftFileContentString": {
            "type": "string",
            "max": 10240,
            "min": 0,
            "sensitive": true
        },
        "FileContextRightFileContentString": {
            "type": "string",
            "max": 10240,
            "min": 0,
            "sensitive": true
        },
        "GenerateRecommendationsRequest": {
            "type": "structure",
            "required": ["fileContext"],
            "members": {
                "fileContext": {
                    "shape": "FileContext"
                },
                "maxResults": {
                    "shape": "GenerateRecommendationsRequestMaxResultsInteger"
                }
            }
        },
        "GenerateRecommendationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 10,
            "min": 1
        },
        "GenerateRecommendationsResponse": {
            "type": "structure",
            "members": {
                "recommendations": {
                    "shape": "RecommendationsList"
                }
            }
        },
        "GetAccessTokenRequest": {
            "type": "structure",
            "required": ["identityToken"],
            "members": {
                "identityToken": {
                    "shape": "GetAccessTokenRequestIdentityTokenString"
                }
            }
        },
        "GetAccessTokenRequestIdentityTokenString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "GetAccessTokenResponse": {
            "type": "structure",
            "members": {
                "accessToken": {
                    "shape": "String"
                }
            }
        },
        "GetCodeScanRequest": {
            "type": "structure",
            "required": ["jobId"],
            "members": {
                "jobId": {
                    "shape": "GetCodeScanRequestJobIdString"
                }
            }
        },
        "GetCodeScanRequestJobIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "GetCodeScanResponse": {
            "type": "structure",
            "required": ["status"],
            "members": {
                "status": {
                    "shape": "CodeScanStatus"
                },
                "errorMessage": {
                    "shape": "String"
                }
            }
        },
        "InternalServerException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "documentation": "<p>This exception is thrown when unexpected error occurred during processing of request.</p>",
            "exception": true,
            "fault": true,
            "retryable": {
                "throttling": false
            }
        },
        "ListCodeScanFindingsRequest": {
            "type": "structure",
            "required": ["jobId", "codeScanFindingsSchema"],
            "members": {
                "jobId": {
                    "shape": "ListCodeScanFindingsRequestJobIdString"
                },
                "nextToken": {
                    "shape": "PaginationToken"
                },
                "codeScanFindingsSchema": {
                    "shape": "CodeScanFindingsSchema"
                }
            }
        },
        "ListCodeScanFindingsRequestJobIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "ListCodeScanFindingsResponse": {
            "type": "structure",
            "required": ["codeScanFindings"],
            "members": {
                "nextToken": {
                    "shape": "PaginationToken"
                },
                "codeScanFindings": {
                    "shape": "String"
                }
            }
        },
        "ListRecommendationsRequest": {
            "type": "structure",
            "required": ["fileContext"],
            "members": {
                "fileContext": {
                    "shape": "FileContext"
                },
                "maxResults": {
                    "shape": "ListRecommendationsRequestMaxResultsInteger"
                },
                "nextToken": {
                    "shape": "ListRecommendationsRequestNextTokenString"
                }
            },
            "documentation": "<p>Next Token: { UserIdentifier: { type: &lt;SSO | IAM | ACCT_LESS | SONO&gt; tokenId: <string> }, SessionIdentifier: <UUID-string>, NextRecommendationIndex: <int>, VersionId: <int>, CreationTimeInMillis: <long> } We don't pass NextToken object as it is to MH APIs, instead only fields which are required. The idea is to treat NextToken as ReadOnly to avoid NextToken mutation at multiple places. RTS should be the sole source of NextToken. MH needs userIdentifier, sessionIdentifier and nextRecommendationIndex only, we pass <code>nextRecommendationIndex</code> as it is and the 1st two as a different object all together, requestIdentifier: { userId: hash(UserIdentifier), sessionId: <SessionIdentifier> } In request path, RTS will base64 decode, decrypt and json deserialize <code>nextToken</code>. Then it will extract fields of <code>requestIdentifier</code> and <code>nextRecommendationIndex</code> as only these fileds are required on MH side and receive back recommendations. The idea is to treat NextToken as readonly on MH side to avoid accidental modifications to NextToken</p>"
        },
        "ListRecommendationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 10,
            "min": 1
        },
        "ListRecommendationsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 0,
            "pattern": "(?:[A-Za-z0-9\\+/]{4})*(?:[A-Za-z0-9\\+/]{2}\\=\\=|[A-Za-z0-9\\+/]{3}\\=)?"
        },
        "ListRecommendationsResponse": {
            "type": "structure",
            "members": {
                "recommendations": {
                    "shape": "RecommendationsList"
                },
                "nextToken": {
                    "shape": "String"
                }
            },
            "documentation": "<p>In response path, RTS will JSON serialize, encrypt using KMS and base64 encode NextToken to produce one string and send it to plugin</p>"
        },
        "PaginationToken": {
            "type": "string",
            "documentation": "<p>CodeScan issues pagination token</p>",
            "max": 2048,
            "min": 1,
            "pattern": "\\S+"
        },
        "PreSignedUrl": {
            "type": "string",
            "documentation": "<p>S3 PreSignedURL</p>",
            "max": 2048,
            "min": 1
        },
        "ProgrammingLanguage": {
            "type": "structure",
            "required": ["languageName"],
            "members": {
                "languageName": {
                    "shape": "ProgrammingLanguageLanguageNameString"
                }
            }
        },
        "ProgrammingLanguageLanguageNameString": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "(python|javascript|java)"
        },
        "Recommendation": {
            "type": "structure",
            "required": ["content"],
            "members": {
                "content": {
                    "shape": "RecommendationContentString"
                },
                "references": {
                    "shape": "References"
                }
            }
        },
        "RecommendationContentString": {
            "type": "string",
            "max": 5120,
            "min": 1,
            "sensitive": true
        },
        "RecommendationsList": {
            "type": "list",
            "member": {
                "shape": "Recommendation"
            },
            "max": 10,
            "min": 0
        },
        "Reference": {
            "type": "structure",
            "members": {
                "licenseName": {
                    "shape": "ReferenceLicenseNameString"
                },
                "repository": {
                    "shape": "ReferenceRepositoryString"
                },
                "recommendationContentSpan": {
                    "shape": "Span"
                }
            }
        },
        "ReferenceLicenseNameString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "ReferenceRepositoryString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "References": {
            "type": "list",
            "member": {
                "shape": "Reference"
            },
            "max": 10,
            "min": 0
        },
        "ResourceNotFoundException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "documentation": "<p>This exception is thrown when describing a resource that does not exist.</p>",
            "exception": true
        },
        "Span": {
            "type": "structure",
            "members": {
                "start": {
                    "shape": "SpanStartInteger"
                },
                "end": {
                    "shape": "SpanEndInteger"
                }
            }
        },
        "SpanEndInteger": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "SpanStartInteger": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "String": {
            "type": "string"
        },
        "ThrottlingException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "documentation": "<p>This exception is thrown when request was denied due to request throttling.</p>",
            "exception": true,
            "retryable": {
                "throttling": false
            }
        },
        "UploadId": {
            "type": "string",
            "documentation": "<p>Artifact Upload Id</p>",
            "max": 128,
            "min": 1
        },
        "ValidationException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": {
                    "shape": "String"
                }
            },
            "documentation": "<p>This exception is thrown when the input fails to satisfy the constraints specified by the service.</p>",
            "exception": true
        }
    },
    "documentation": "<p>Provides Consolas suggestion and Security Scan.</p>"
}
