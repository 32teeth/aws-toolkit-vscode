{
    "version": "2.0",
    "metadata": {
        "apiVersion": "2022-09-28",
        "endpointPrefix": "codecatalyst",
        "jsonVersion": "1.1",
        "protocol": "rest-json",
        "serviceFullName": "Amazon CodeCatalyst",
        "serviceId": "CodeCatalyst",
        "signatureVersion": "bearer",
        "signingName": "codecatalyst",
        "uid": "codecatalyst-2022-09-28"
    },
    "operations": {
        "AcceptOrganizationInvitation": {
            "name": "AcceptOrganizationInvitation",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/86",
                "responseCode": 200
            },
            "input": { "shape": "AcceptOrganizationInvitationRequest" },
            "output": { "shape": "AcceptOrganizationInvitationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "AcceptProjectInvitation": {
            "name": "AcceptProjectInvitation",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/90",
                "responseCode": 200
            },
            "input": { "shape": "AcceptProjectInvitationRequest" },
            "output": { "shape": "AcceptProjectInvitationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "AddUserToRole": {
            "name": "AddUserToRole",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/permissions",
                "responseCode": 200
            },
            "input": { "shape": "AddUserToRoleRequest" },
            "output": { "shape": "AddUserToRoleResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "AddUserToRoleMigration": {
            "name": "AddUserToRoleMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/299",
                "responseCode": 200
            },
            "input": { "shape": "AddUserToRoleMigrationInput" },
            "output": { "shape": "AddUserToRoleMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "AssociateAwsAccount": {
            "name": "AssociateAwsAccount",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts",
                "responseCode": 201
            },
            "input": { "shape": "AssociateAwsAccountRequest" },
            "output": { "shape": "AssociateAwsAccountResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "AssociateAwsAccountOnboarding": {
            "name": "AssociateAwsAccountOnboarding",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/awsAccountOnboardings",
                "responseCode": 201
            },
            "input": { "shape": "AssociateAwsAccountOnboardingRequest" },
            "output": { "shape": "AssociateAwsAccountOnboardingResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "AssociateAwsAccountToEnvironment": {
            "name": "AssociateAwsAccountToEnvironment",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts/{awsAccountName}/projects/{projectName}/environments/{environmentName}",
                "responseCode": 200
            },
            "input": { "shape": "AssociateAwsAccountToEnvironmentRequest" },
            "output": { "shape": "AssociateAwsAccountToEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "BatchGetIssue": {
            "name": "BatchGetIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/3",
                "responseCode": 200
            },
            "input": { "shape": "BatchGetIssueInput" },
            "output": { "shape": "BatchGetIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "BatchGetIssueMigration": {
            "name": "BatchGetIssueMigration",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/issues",
                "responseCode": 200
            },
            "input": { "shape": "BatchGetIssueRequestMigration" },
            "output": { "shape": "BatchGetIssueResponseMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "BatchUpdateIssueStoreLabels": {
            "name": "BatchUpdateIssueStoreLabels",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/labels",
                "responseCode": 200
            },
            "input": { "shape": "BatchUpdateIssueStoreLabelsRequest" },
            "output": { "shape": "BatchUpdateIssueStoreLabelsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "BatchUpdateIssueStoreSavedViews": {
            "name": "BatchUpdateIssueStoreSavedViews",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/savedViews",
                "responseCode": 200
            },
            "input": { "shape": "BatchUpdateIssueStoreSavedViewsRequest" },
            "output": { "shape": "BatchUpdateIssueStoreSavedViewsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "BatchUpdateIssueStoreStatuses": {
            "name": "BatchUpdateIssueStoreStatuses",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/statuses",
                "responseCode": 200
            },
            "input": { "shape": "BatchUpdateIssueStoreStatusesRequest" },
            "output": { "shape": "BatchUpdateIssueStoreStatusesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CancelOrganizationInvitation": {
            "name": "CancelOrganizationInvitation",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/invitations/cancel",
                "responseCode": 200
            },
            "input": { "shape": "CancelOrganizationInvitationRequest" },
            "output": { "shape": "CancelOrganizationInvitationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CancelProjectInvitation": {
            "name": "CancelProjectInvitation",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/invitations/cancel",
                "responseCode": 200
            },
            "input": { "shape": "CancelProjectInvitationRequest" },
            "output": { "shape": "CancelProjectInvitationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ConnectAwsAccount": {
            "name": "ConnectAwsAccount",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/56",
                "responseCode": 200
            },
            "input": { "shape": "ConnectAwsAccountRequest" },
            "output": { "shape": "ConnectAwsAccountResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "deprecated": true,
            "deprecatedMessage": "Use AssociateAwsAccount instead.",
            "idempotent": true
        },
        "CreateAccessToken": {
            "name": "CreateAccessToken",
            "http": {
                "method": "POST",
                "requestUri": "/v1/accessTokens",
                "responseCode": 200
            },
            "input": { "shape": "CreateAccessTokenRequest" },
            "output": { "shape": "CreateAccessTokenResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateArtifactRepository": {
            "name": "CreateArtifactRepository",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/23",
                "responseCode": 200
            },
            "input": { "shape": "CreateArtifactRepositoryInput" },
            "output": { "shape": "CreateArtifactRepositoryOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateBar": {
            "name": "CreateBar",
            "http": {
                "method": "POST",
                "requestUri": "/organizations/{organizationName}/bar",
                "responseCode": 200
            },
            "input": { "shape": "CreateBarInput" },
            "output": { "shape": "CreateBarOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateBlueprintUploadUrl": {
            "name": "CreateBlueprintUploadUrl",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/28",
                "responseCode": 200
            },
            "input": { "shape": "CreateBlueprintUploadUrlInput" },
            "output": { "shape": "CreateBlueprintUploadUrlOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateCommentForIssue": {
            "name": "CreateCommentForIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/40",
                "responseCode": 200
            },
            "input": { "shape": "CreateCommentForIssueInput" },
            "output": { "shape": "CreateCommentForIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateComputeFleet": {
            "name": "CreateComputeFleet",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/computeFleets",
                "responseCode": 200
            },
            "input": { "shape": "CreateComputeFleetRequest" },
            "output": { "shape": "CreateComputeFleetResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateComputeFleetMigration": {
            "name": "CreateComputeFleetMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/600",
                "responseCode": 200
            },
            "input": { "shape": "CreateComputeFleetMigrationInput" },
            "output": { "shape": "CreateComputeFleetMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateConnection": {
            "name": "CreateConnection",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/provider/{providerId}/connection/{name}",
                "responseCode": 201
            },
            "input": { "shape": "CreateConnectionRequest" },
            "output": { "shape": "CreateConnectionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateDevEnvironment": {
            "name": "CreateDevEnvironment",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments",
                "responseCode": 201
            },
            "input": { "shape": "CreateDevEnvironmentRequest" },
            "output": { "shape": "CreateDevEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateDummyData": {
            "name": "CreateDummyData",
            "http": {
                "method": "POST",
                "requestUri": "/organizations/{organizationName}/dummyData",
                "responseCode": 200
            },
            "input": { "shape": "CreateDummyDataInput" },
            "output": { "shape": "CreateDummyDataOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateEnvironment": {
            "name": "CreateEnvironment",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments",
                "responseCode": 201
            },
            "input": { "shape": "CreateEnvironmentRequest" },
            "output": { "shape": "CreateEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateExtensionInstallation": {
            "name": "CreateExtensionInstallation",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/extension-installation/{extensionId}",
                "responseCode": 201
            },
            "input": { "shape": "CreateExtensionInstallationRequest" },
            "output": { "shape": "CreateExtensionInstallationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateExternalArtifactRepository": {
            "name": "CreateExternalArtifactRepository",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/21",
                "responseCode": 200
            },
            "input": { "shape": "CreateExternalArtifactRepositoryInput" },
            "output": { "shape": "CreateArtifactRepositoryOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateIssue": {
            "name": "CreateIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/4",
                "responseCode": 200
            },
            "input": { "shape": "CreateIssueInput" },
            "output": { "shape": "CreateIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateIssueCommentReaction": {
            "name": "CreateIssueCommentReaction",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issues/{issueId}/comments/{commentId}/reactions",
                "responseCode": 200
            },
            "input": { "shape": "CreateIssueCommentReactionRequest" },
            "output": { "shape": "CreateIssueCommentReactionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateIssueMigration": {
            "name": "CreateIssueMigration",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/issues",
                "responseCode": 201
            },
            "input": { "shape": "CreateIssueRequestMigration" },
            "output": { "shape": "CreateIssueResponseMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateIssueStoreLabel": {
            "name": "CreateIssueStoreLabel",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/labels",
                "responseCode": 201
            },
            "input": { "shape": "CreateIssueStoreLabelRequest" },
            "output": { "shape": "CreateIssueStoreLabelResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateIssueStoreSavedView": {
            "name": "CreateIssueStoreSavedView",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/savedViews",
                "responseCode": 201
            },
            "input": { "shape": "CreateIssueStoreSavedViewRequest" },
            "output": { "shape": "CreateIssueStoreSavedViewResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateIssueStoreStatus": {
            "name": "CreateIssueStoreStatus",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/statuses",
                "responseCode": 201
            },
            "input": { "shape": "CreateIssueStoreStatusRequest" },
            "output": { "shape": "CreateIssueStoreStatusResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateLink": {
            "name": "CreateLink",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/297",
                "responseCode": 200
            },
            "input": { "shape": "CreateLinkRequest" },
            "output": { "shape": "CreateLinkResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateNotificationChannel": {
            "name": "CreateNotificationChannel",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/notificationChannels",
                "responseCode": 200
            },
            "input": { "shape": "CreateNotificationChannelRequest" },
            "output": { "shape": "CreateNotificationChannelResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateNotificationClient": {
            "name": "CreateNotificationClient",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/notificationClients",
                "responseCode": 200
            },
            "input": { "shape": "CreateNotificationClientRequest" },
            "output": { "shape": "CreateNotificationClientResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateOnboarding": {
            "name": "CreateOnboarding",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/115",
                "responseCode": 200
            },
            "input": { "shape": "CreateOnboardingInput" },
            "output": { "shape": "OnboardingOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateOrganization": {
            "name": "CreateOrganization",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations",
                "responseCode": 200
            },
            "input": { "shape": "CreateOrganizationRequest" },
            "output": { "shape": "CreateOrganizationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateProject": {
            "name": "CreateProject",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects",
                "responseCode": 200
            },
            "input": { "shape": "CreateProjectRequest" },
            "output": { "shape": "CreateProjectResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreatePullRequest": {
            "name": "CreatePullRequest",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/pullRequests",
                "responseCode": 201
            },
            "input": { "shape": "CreatePullRequestRequest" },
            "output": { "shape": "CreatePullRequestResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreatePullRequestComment": {
            "name": "CreatePullRequestComment",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/44",
                "responseCode": 200
            },
            "input": { "shape": "CreatePullRequestCommentInput" },
            "output": { "shape": "CreatePullRequestCommentOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreatePullRequestCommentReaction": {
            "name": "CreatePullRequestCommentReaction",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/pullRequests/{pullRequestId}/comments/{commentId}/reactions",
                "responseCode": 200
            },
            "input": { "shape": "CreatePullRequestCommentReactionRequest" },
            "output": { "shape": "CreatePullRequestCommentReactionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateSecret": {
            "name": "CreateSecret",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/secrets",
                "responseCode": 200
            },
            "input": { "shape": "CreateSecretRequest" },
            "output": { "shape": "CreateSecretResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateSecretMigration": {
            "name": "CreateSecretMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/221",
                "responseCode": 200
            },
            "input": { "shape": "CreateSecretMigrationInput" },
            "output": { "shape": "CreateSecretMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateSession": {
            "name": "CreateSession",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/168",
                "responseCode": 200
            },
            "input": { "shape": "CreateSessionRequest" },
            "output": { "shape": "CreateSessionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateSourceBranch": {
            "name": "CreateSourceBranch",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/172",
                "responseCode": 200
            },
            "input": { "shape": "CreateSourceBranchInput" },
            "output": { "shape": "CreateSourceBranchOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateSourceCommit": {
            "name": "CreateSourceCommit",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/176",
                "responseCode": 200
            },
            "input": { "shape": "CreateSourceCommitInput" },
            "output": { "shape": "CreateSourceCommitOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateSourcePullRequest": {
            "name": "CreateSourcePullRequest",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/182",
                "responseCode": 200
            },
            "input": { "shape": "CreateSourcePullRequestInput" },
            "output": { "shape": "CreateSourcePullRequestOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "CreateSourcePullRequestToJiraIssueLink": {
            "name": "CreateSourcePullRequestToJiraIssueLink",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/296",
                "responseCode": 200
            },
            "input": { "shape": "CreateSourcePullRequestToJiraIssueLinkInput" },
            "output": { "shape": "CreateSourcePullRequestToJiraIssueLinkOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateSourceReferencePolicy": {
            "name": "CreateSourceReferencePolicy",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/repositories/{sourceRepositoryName}/referencePolicies",
                "responseCode": 200
            },
            "input": { "shape": "CreateSourceReferencePolicyRequest" },
            "output": { "shape": "CreateSourceReferencePolicyResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateSourceRepository": {
            "name": "CreateSourceRepository",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{name}",
                "responseCode": 201
            },
            "input": { "shape": "CreateSourceRepositoryRequest" },
            "output": { "shape": "CreateSourceRepositoryResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateSourceRepositoryBranch": {
            "name": "CreateSourceRepositoryBranch",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/branches/{name}",
                "responseCode": 201
            },
            "input": { "shape": "CreateSourceRepositoryBranchRequest" },
            "output": { "shape": "CreateSourceRepositoryBranchResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateSourceRepositoryMigration": {
            "name": "CreateSourceRepositoryMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/192/migration",
                "responseCode": 200
            },
            "input": { "shape": "CreateSourceRepositoryInputMigration" },
            "output": { "shape": "CreateSourceRepositoryOutputMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "CreateUserDetails": {
            "name": "CreateUserDetails",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/298",
                "responseCode": 200
            },
            "input": { "shape": "CreateUserDetailsRequest" },
            "output": { "shape": "CreateUserDetailsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DeleteAccessToken": {
            "name": "DeleteAccessToken",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/accessTokens/{id}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteAccessTokenRequest" },
            "output": { "shape": "DeleteAccessTokenResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteArtifactPackageVersions": {
            "name": "DeleteArtifactPackageVersions",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/13",
                "responseCode": 200
            },
            "input": { "shape": "DeleteArtifactPackageVersionsInput" },
            "output": { "shape": "ArtifactPackageVersionsBatchActionOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteArtifactRepository": {
            "name": "DeleteArtifactRepository",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/24",
                "responseCode": 200
            },
            "input": { "shape": "DeleteArtifactRepositoryInput" },
            "output": { "shape": "DeleteArtifactRepositoryOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteAwsAccount": {
            "name": "DeleteAwsAccount",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/241",
                "responseCode": 200
            },
            "input": { "shape": "DeleteAwsAccountRequest" },
            "output": { "shape": "DeleteAwsAccountResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "deprecated": true,
            "deprecatedMessage": "Use DisassociateAwsAccount instead.",
            "idempotent": true
        },
        "DeleteCommentContentForIssue": {
            "name": "DeleteCommentContentForIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/41",
                "responseCode": 200
            },
            "input": { "shape": "DeleteCommentContentForIssueInput" },
            "output": { "shape": "DeleteCommentContentForIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteComputeFleet": {
            "name": "DeleteComputeFleet",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/computeFleets/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteComputeFleetRequest" },
            "output": { "shape": "DeleteComputeFleetResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteComputeFleetMigration": {
            "name": "DeleteComputeFleetMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/601",
                "responseCode": 200
            },
            "input": { "shape": "DeleteComputeFleetMigrationInput" },
            "output": { "shape": "DeleteComputeFleetMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteConnection": {
            "name": "DeleteConnection",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/provider/{providerId}/connection/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteConnectionRequest" },
            "output": { "shape": "DeleteConnectionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteDevEnvironment": {
            "name": "DeleteDevEnvironment",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments/{id}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteDevEnvironmentRequest" },
            "output": { "shape": "DeleteDevEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteDummyData": {
            "name": "DeleteDummyData",
            "http": {
                "method": "DELETE",
                "requestUri": "/organizations/{organizationName}/dummyData/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteDummyDataInput" },
            "output": { "shape": "DeleteDummyDataOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteEnvironment": {
            "name": "DeleteEnvironment",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteEnvironmentRequest" },
            "output": { "shape": "DeleteEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteExtensionInstallation": {
            "name": "DeleteExtensionInstallation",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/extension-installation/{extensionId}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteExtensionInstallationRequest" },
            "output": { "shape": "DeleteExtensionInstallationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteIssueCommentReaction": {
            "name": "DeleteIssueCommentReaction",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issues/{issueId}/comments/{commentId}/reactions/{reactionId}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteIssueCommentReactionRequest" },
            "output": { "shape": "DeleteIssueCommentReactionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DeleteIssueStoreSavedView": {
            "name": "DeleteIssueStoreSavedView",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/savedViews/{id}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteIssueStoreSavedViewRequest" },
            "output": { "shape": "DeleteIssueStoreSavedViewResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteLink": {
            "name": "DeleteLink",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/243",
                "responseCode": 200
            },
            "input": { "shape": "DeleteLinkRequest" },
            "output": { "shape": "DeleteLinkResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteNotificationChannel": {
            "name": "DeleteNotificationChannel",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/notificationChannels/{id}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteNotificationChannelRequest" },
            "output": { "shape": "DeleteNotificationChannelResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteNotificationClient": {
            "name": "DeleteNotificationClient",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/notificationClients/{id}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteNotificationClientRequest" },
            "output": { "shape": "DeleteNotificationClientResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteOrganization": {
            "name": "DeleteOrganization",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/108",
                "responseCode": 200
            },
            "input": { "shape": "DeleteOrganizationRequest" },
            "output": { "shape": "DeleteOrganizationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteProject": {
            "name": "DeleteProject",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/134",
                "responseCode": 200
            },
            "input": { "shape": "DeleteProjectRequest" },
            "output": { "shape": "DeleteProjectResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeletePullRequestCommentContent": {
            "name": "DeletePullRequestCommentContent",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/45",
                "responseCode": 200
            },
            "input": { "shape": "DeletePullRequestCommentContentInput" },
            "output": { "shape": "DeletePullRequestCommentContentOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeletePullRequestCommentReaction": {
            "name": "DeletePullRequestCommentReaction",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/pullRequests/{pullRequestId}/comments/{commentId}/reactions/{reactionId}",
                "responseCode": 200
            },
            "input": { "shape": "DeletePullRequestCommentReactionRequest" },
            "output": { "shape": "DeletePullRequestCommentReactionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DeleteSecret": {
            "name": "DeleteSecret",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/secrets/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteSecretRequest" },
            "output": { "shape": "DeleteSecretResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteSecretMigration": {
            "name": "DeleteSecretMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/222",
                "responseCode": 200
            },
            "input": { "shape": "DeleteSecretMigrationInput" },
            "output": { "shape": "DeleteSecretMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteSourceBranch": {
            "name": "DeleteSourceBranch",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/173",
                "responseCode": 200
            },
            "input": { "shape": "DeleteSourceBranchInput" },
            "output": { "shape": "DeleteSourceBranchOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteSourcePullRequestToJiraIssueLink": {
            "name": "DeleteSourcePullRequestToJiraIssueLink",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/244",
                "responseCode": 200
            },
            "input": { "shape": "DeleteSourcePullRequestToJiraIssueLinkInput" },
            "output": { "shape": "DeleteSourcePullRequestToJiraIssueLinkOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteSourceReferencePolicy": {
            "name": "DeleteSourceReferencePolicy",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/repositories/{sourceRepositoryName}/referencePolicies",
                "responseCode": 200
            },
            "input": { "shape": "DeleteSourceReferencePolicyRequest" },
            "output": { "shape": "DeleteSourceReferencePolicyResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteSourceRepository": {
            "name": "DeleteSourceRepository",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DeleteSourceRepositoryRequest" },
            "output": { "shape": "DeleteSourceRepositoryResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DeleteSourceRepositoryMigration": {
            "name": "DeleteSourceRepositoryMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/193/migration",
                "responseCode": 200
            },
            "input": { "shape": "DeleteSourceRepositoryInputMigration" },
            "output": { "shape": "DeleteSourceRepositoryOutputMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DescribeOrganizationMembers": {
            "name": "DescribeOrganizationMembers",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/109",
                "responseCode": 200
            },
            "input": { "shape": "DescribeOrganizationMembersInput" },
            "output": { "shape": "DescribeOrganizationMembersOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DescribeOrganizationMembersMigration": {
            "name": "DescribeOrganizationMembersMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/246",
                "responseCode": 200
            },
            "input": { "shape": "DescribeOrganizationMembersMigrationInput" },
            "output": { "shape": "DescribeOrganizationMembersMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DescribeOrganizationUsageReport": {
            "name": "DescribeOrganizationUsageReport",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/120",
                "responseCode": 200
            },
            "input": { "shape": "DescribeOrganizationUsageReportRequest" },
            "output": { "shape": "DescribeOrganizationUsageReportResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DescribeProjectMembers": {
            "name": "DescribeProjectMembers",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/135",
                "responseCode": 200
            },
            "input": { "shape": "DescribeProjectMembersInput" },
            "output": { "shape": "DescribeProjectMembersOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DescribeProjectMembersMigration": {
            "name": "DescribeProjectMembersMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/247",
                "responseCode": 200
            },
            "input": { "shape": "DescribeProjectMembersMigrationInput" },
            "output": { "shape": "DescribeProjectMembersMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DescribeSourceRepositoryEndpoints": {
            "name": "DescribeSourceRepositoryEndpoints",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/198",
                "responseCode": 200
            },
            "input": { "shape": "DescribeSourceRepositoryEndpointsInput" },
            "output": { "shape": "DescribeSourceRepositoryEndpointsOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DescribeSubscription": {
            "name": "DescribeSubscription",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/subscription",
                "responseCode": 200
            },
            "input": { "shape": "DescribeSubscriptionRequest" },
            "output": { "shape": "DescribeSubscriptionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "DisassociateAwsAccount": {
            "name": "DisassociateAwsAccount",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DisassociateAwsAccountRequest" },
            "output": { "shape": "DisassociateAwsAccountResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DisassociateAwsAccountFromEnvironment": {
            "name": "DisassociateAwsAccountFromEnvironment",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts/{awsAccountName}/projects/{projectName}/environments/{environmentName}",
                "responseCode": 200
            },
            "input": { "shape": "DisassociateAwsAccountFromEnvironmentRequest" },
            "output": { "shape": "DisassociateAwsAccountFromEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DisassociateAwsAccountOnboarding": {
            "name": "DisassociateAwsAccountOnboarding",
            "http": {
                "method": "DELETE",
                "requestUri": "/v1/organizations/{organizationName}/awsAccountOnboardings/{name}",
                "responseCode": 200
            },
            "input": { "shape": "DisassociateAwsAccountOnboardingRequest" },
            "output": { "shape": "DisassociateAwsAccountOnboardingResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "DisposeArtifactPackageVersions": {
            "name": "DisposeArtifactPackageVersions",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/14",
                "responseCode": 200
            },
            "input": { "shape": "DisposeArtifactPackageVersionsInput" },
            "output": { "shape": "ArtifactPackageVersionsBatchActionOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetAction": {
            "name": "GetAction",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/actions/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetActionRequest" },
            "output": { "shape": "GetActionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetActionRun": {
            "name": "GetActionRun",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns/{workflowRunId}/actionRuns/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetActionRunRequest" },
            "output": { "shape": "GetActionRunResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetActionRunArtifactMetadata": {
            "name": "GetActionRunArtifactMetadata",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns/{workflowRunId}/actionRuns/{actionRunId}/artifacts/{name}/metadata",
                "responseCode": 200
            },
            "input": { "shape": "GetActionRunArtifactMetadataRequest" },
            "output": { "shape": "GetActionRunArtifactMetadataResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetActionRunLogEntries": {
            "name": "GetActionRunLogEntries",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns/{workflowRunId}/actionRuns/{id}/logEntries",
                "responseCode": 200
            },
            "input": { "shape": "GetActionRunLogEntriesRequest" },
            "output": { "shape": "GetActionRunLogEntriesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetActionRunLogsDownloadableUrl": {
            "name": "GetActionRunLogsDownloadableUrl",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowName}/runs/{actionRunId}/logsDownloads",
                "responseCode": 200
            },
            "input": { "shape": "GetActionRunLogsDownloadableUrlRequest" },
            "output": { "shape": "GetActionRunLogsDownloadableUrlResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetActionVersion": {
            "name": "GetActionVersion",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/actions/{actionId}/versions/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetActionVersionRequest" },
            "output": { "shape": "GetActionVersionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetArtifactPackage": {
            "name": "GetArtifactPackage",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/10",
                "responseCode": 200
            },
            "input": { "shape": "GetArtifactPackageInput" },
            "output": { "shape": "GetArtifactPackageOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetArtifactPackageVersion": {
            "name": "GetArtifactPackageVersion",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/15",
                "responseCode": 200
            },
            "input": { "shape": "GetArtifactPackageVersionInput" },
            "output": { "shape": "GetArtifactPackageVersionOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetArtifactPackageVersionReadme": {
            "name": "GetArtifactPackageVersionReadme",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/16",
                "responseCode": 200
            },
            "input": { "shape": "GetArtifactPackageVersionReadmeInput" },
            "output": { "shape": "GetArtifactPackageVersionReadmeOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetArtifactRepository": {
            "name": "GetArtifactRepository",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/25",
                "responseCode": 200
            },
            "input": { "shape": "GetArtifactRepositoryInput" },
            "output": { "shape": "ArtifactRepositorySummary" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetArtifactRepositoryEndpoint": {
            "name": "GetArtifactRepositoryEndpoint",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/22",
                "responseCode": 200
            },
            "input": { "shape": "GetArtifactRepositoryEndpointInput" },
            "output": { "shape": "GetArtifactRepositoryEndpointOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetAuthenticationRedirect": {
            "name": "GetAuthenticationRedirect",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/169",
                "responseCode": 200
            },
            "input": { "shape": "GetAuthenticationRedirectRequest" },
            "output": { "shape": "GetAuthenticationRedirectResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetAwsAccount": {
            "name": "GetAwsAccount",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetAwsAccountRequest" },
            "output": { "shape": "GetAwsAccountResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetAwsAccountOnboarding": {
            "name": "GetAwsAccountOnboarding",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccountOnboardings/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetAwsAccountOnboardingRequest" },
            "output": { "shape": "GetAwsAccountOnboardingResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetAwsAccountRole": {
            "name": "GetAwsAccountRole",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts/{awsAccountName}/roles/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetAwsAccountRoleRequest" },
            "output": { "shape": "GetAwsAccountRoleResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetAwsAccountToEnvironmentAssociation": {
            "name": "GetAwsAccountToEnvironmentAssociation",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts/{awsAccountName}/projects/{projectName}/environments/{environmentName}",
                "responseCode": 200
            },
            "input": { "shape": "GetAwsAccountToEnvironmentAssociationRequest" },
            "output": { "shape": "GetAwsAccountToEnvironmentAssociationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetBar": {
            "name": "GetBar",
            "http": {
                "method": "GET",
                "requestUri": "/organizations/{organizationName}/bar/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetBarInput" },
            "output": { "shape": "GetBarOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetBlueprint": {
            "name": "GetBlueprint",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/30",
                "responseCode": 200
            },
            "input": { "shape": "GetBlueprintRequest" },
            "output": { "shape": "GetBlueprintResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetBlueprintPreview": {
            "name": "GetBlueprintPreview",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/31",
                "responseCode": 200
            },
            "input": { "shape": "GetBlueprintPreviewRequest" },
            "output": { "shape": "GetBlueprintPreviewResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetBlueprintPreviewFile": {
            "name": "GetBlueprintPreviewFile",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/32",
                "responseCode": 200
            },
            "input": { "shape": "GetBlueprintPreviewFileRequest" },
            "output": { "shape": "GetBlueprintPreviewFileResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetBlueprintPreviewFolder": {
            "name": "GetBlueprintPreviewFolder",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/33",
                "responseCode": 200
            },
            "input": { "shape": "GetBlueprintPreviewFolderRequest" },
            "output": { "shape": "GetBlueprintPreviewFolderResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetBuildLogsMigration": {
            "name": "GetBuildLogsMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/702",
                "responseCode": 200
            },
            "input": { "shape": "GetBuildLogsMigrationInput" },
            "output": { "shape": "GetBuildLogsMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetCatalogAction": {
            "name": "GetCatalogAction",
            "http": {
                "method": "GET",
                "requestUri": "/v1/catalog-actions/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetCatalogActionRequest" },
            "output": { "shape": "GetCatalogActionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetCatalogActionVersion": {
            "name": "GetCatalogActionVersion",
            "http": {
                "method": "GET",
                "requestUri": "/v1/catalog-actions/{actionId}/versions/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetCatalogActionVersionRequest" },
            "output": { "shape": "GetCatalogActionVersionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetCodeCoverageReport": {
            "name": "GetCodeCoverageReport",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/codeCoverageReports/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetCodeCoverageReportRequest" },
            "output": { "shape": "GetCodeCoverageReportResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetCodeCoverageResult": {
            "name": "GetCodeCoverageResult",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/codeCoverageResults/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetCodeCoverageResultRequest" },
            "output": { "shape": "GetCodeCoverageResultResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetComputeFleet": {
            "name": "GetComputeFleet",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/computeFleets/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetComputeFleetRequest" },
            "output": { "shape": "GetComputeFleetResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetComputeFleetMigration": {
            "name": "GetComputeFleetMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/602",
                "responseCode": 200
            },
            "input": { "shape": "GetComputeFleetMigrationInput" },
            "output": { "shape": "ComputeFleetSummaryMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetConnection": {
            "name": "GetConnection",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/provider/{providerId}/connection/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetConnectionRequest" },
            "output": { "shape": "GetConnectionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetDevEnvironment": {
            "name": "GetDevEnvironment",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetDevEnvironmentRequest" },
            "output": { "shape": "GetDevEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetDummyData": {
            "name": "GetDummyData",
            "http": {
                "method": "GET",
                "requestUri": "/organizations/{organizationName}/dummyData/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetDummyDataInput" },
            "output": { "shape": "GetDummyDataOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetDummyDataLambda": {
            "name": "GetDummyDataLambda",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/253",
                "responseCode": 200
            },
            "input": { "shape": "GetDummyDataLambdaInput" },
            "output": { "shape": "GetDummyDataLambdaOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetDummyDataService": {
            "name": "GetDummyDataService",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/254",
                "responseCode": 200
            },
            "input": { "shape": "GetDummyDataServiceInput" },
            "output": { "shape": "GetDummyDataServiceOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetEnvironment": {
            "name": "GetEnvironment",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetEnvironmentRequest" },
            "output": { "shape": "GetEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetEnvironmentDeployment": {
            "name": "GetEnvironmentDeployment",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments/{environmentName}/environment-deployments/{deploymentId}",
                "responseCode": 200
            },
            "input": { "shape": "GetEnvironmentDeploymentRequest" },
            "output": { "shape": "GetEnvironmentDeploymentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetEnvironmentResourceMetadata": {
            "name": "GetEnvironmentResourceMetadata",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments/{environmentName}/roles/{roleArn}/services/{serviceName}/actions/{actionName}/metadata",
                "responseCode": 200
            },
            "input": { "shape": "GetEnvironmentResourceMetadataRequest" },
            "output": { "shape": "GetEnvironmentResourceMetadataResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetExtensionInstallation": {
            "name": "GetExtensionInstallation",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/extension-installation/{extensionId}",
                "responseCode": 200
            },
            "input": { "shape": "GetExtensionInstallationRequest" },
            "output": { "shape": "GetExtensionInstallationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetExtensionIssueScope": {
            "name": "GetExtensionIssueScope",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/256",
                "responseCode": 200
            },
            "input": { "shape": "GetExtensionIssueScopeInput" },
            "output": { "shape": "ExtensionIssueScopeSummary" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetIncident": {
            "name": "GetIncident",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/incidents/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetIncidentRequest" },
            "output": { "shape": "GetIncidentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetIssue": {
            "name": "GetIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/5",
                "responseCode": 200
            },
            "input": { "shape": "GetIssueInput" },
            "output": { "shape": "GetIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetIssueMigration": {
            "name": "GetIssueMigration",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/issues/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetIssueRequestMigration" },
            "output": { "shape": "GetIssueResponseMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetIssueStore": {
            "name": "GetIssueStore",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/8",
                "responseCode": 200
            },
            "input": { "shape": "GetIssueStoreInput" },
            "output": { "shape": "GetIssueStoreOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetIssueStoreMigration": {
            "name": "GetIssueStoreMigration",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}",
                "responseCode": 200
            },
            "input": { "shape": "GetIssueStoreRequestMigration" },
            "output": { "shape": "GetIssueStoreResponseMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetLargeDummyData": {
            "name": "GetLargeDummyData",
            "http": {
                "method": "GET",
                "requestUri": "/organizations/{organizationName}/largeDummyData/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetDummyDataInput" },
            "output": { "shape": "GetDummyDataOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetNotificationChannel": {
            "name": "GetNotificationChannel",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/notificationChannels/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetNotificationChannelRequest" },
            "output": { "shape": "GetNotificationChannelResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetNotificationClient": {
            "name": "GetNotificationClient",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/notificationClients/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetNotificationClientRequest" },
            "output": { "shape": "GetNotificationClientResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetOnboarding": {
            "name": "GetOnboarding",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/116",
                "responseCode": 200
            },
            "input": { "shape": "GetOnboardingInput" },
            "output": { "shape": "OnboardingOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetOrganization": {
            "name": "GetOrganization",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetOrganizationRequest" },
            "output": { "shape": "GetOrganizationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetOrganizationActivityFeed": {
            "name": "GetOrganizationActivityFeed",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/111",
                "responseCode": 200
            },
            "input": { "shape": "GetOrganizationActivityFeedRequest" },
            "output": { "shape": "GetOrganizationActivityFeedResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetOrganizationInvitation": {
            "name": "GetOrganizationInvitation",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/87",
                "responseCode": 200
            },
            "input": { "shape": "GetOrganizationInvitationRequest" },
            "output": { "shape": "GetOrganizationInvitationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetPerson": {
            "name": "GetPerson",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/130",
                "responseCode": 200
            },
            "input": { "shape": "GetPersonRequest" },
            "output": { "shape": "GetPersonResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "deprecated": true,
            "deprecatedMessage": "This operation will be removed. Use GetUserDetails instead."
        },
        "GetPersonByUserName": {
            "name": "GetPersonByUserName",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/131",
                "responseCode": 200
            },
            "input": { "shape": "GetPersonByUserNameRequest" },
            "output": { "shape": "GetPersonResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "deprecated": true,
            "deprecatedMessage": "This operation will be removed. Use GetUserDetails instead."
        },
        "GetProject": {
            "name": "GetProject",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetProjectRequest" },
            "output": { "shape": "GetProjectResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetProjectActivityFeed": {
            "name": "GetProjectActivityFeed",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/150",
                "responseCode": 200
            },
            "input": { "shape": "GetProjectActivityFeedRequest" },
            "output": { "shape": "GetProjectActivityFeedResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetProjectInvitationById": {
            "name": "GetProjectInvitationById",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/91",
                "responseCode": 200
            },
            "input": { "shape": "GetProjectInvitationByIdRequest" },
            "output": { "shape": "GetProjectInvitationByIdResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetProjectMetrics": {
            "name": "GetProjectMetrics",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/151",
                "responseCode": 200
            },
            "input": { "shape": "GetProjectMetricsRequest" },
            "output": { "shape": "GetProjectMetricsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetProjectNotificationSettings": {
            "name": "GetProjectNotificationSettings",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/notifications/settings",
                "responseCode": 200
            },
            "input": { "shape": "GetProjectNotificationSettingsRequest" },
            "output": { "shape": "GetProjectNotificationSettingsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetProjectStatus": {
            "name": "GetProjectStatus",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/status",
                "responseCode": 200
            },
            "input": { "shape": "GetProjectStatusInput" },
            "output": { "shape": "GetProjectStatusOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetPullRequestRequirementStatus": {
            "name": "GetPullRequestRequirementStatus",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/184",
                "responseCode": 200
            },
            "input": { "shape": "GetPullRequestRequirementStatusInput" },
            "output": { "shape": "GetPullRequestRequirementStatusOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSecret": {
            "name": "GetSecret",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/secrets/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetSecretRequest" },
            "output": { "shape": "GetSecretResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSecretMigration": {
            "name": "GetSecretMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/223",
                "responseCode": 200
            },
            "input": { "shape": "GetSecretMigrationInput" },
            "output": { "shape": "SecretMigrationMetadata" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSlackCredentials": {
            "name": "GetSlackCredentials",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/slackCredentials",
                "responseCode": 200
            },
            "input": { "shape": "GetSlackCredentialsRequest" },
            "output": { "shape": "GetSlackCredentialsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSoftwareCompositionAnalysisFinding": {
            "name": "GetSoftwareCompositionAnalysisFinding",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/softwareCompositionAnalysisFindings/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetSoftwareCompositionAnalysisFindingRequest" },
            "output": { "shape": "GetSoftwareCompositionAnalysisFindingResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSoftwareCompositionAnalysisReport": {
            "name": "GetSoftwareCompositionAnalysisReport",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/softwareCompositionAnalysisReports/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetSoftwareCompositionAnalysisReportRequest" },
            "output": { "shape": "GetSoftwareCompositionAnalysisReportResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSoftwareTestingReport": {
            "name": "GetSoftwareTestingReport",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/211",
                "responseCode": 200
            },
            "input": { "shape": "GetSoftwareTestingReportRequest" },
            "output": { "shape": "GetSoftwareTestingReportResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourceBranch": {
            "name": "GetSourceBranch",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/174",
                "responseCode": 200
            },
            "input": { "shape": "GetSourceBranchInput" },
            "output": { "shape": "SourceBranchSummary" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourceCommit": {
            "name": "GetSourceCommit",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/177",
                "responseCode": 200
            },
            "input": { "shape": "GetSourceCommitInput" },
            "output": { "shape": "SourceCommitSummary" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourceFile": {
            "name": "GetSourceFile",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/179",
                "responseCode": 200
            },
            "input": { "shape": "GetSourceFileInput" },
            "output": { "shape": "SourceFileSummary" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourceFolder": {
            "name": "GetSourceFolder",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/180",
                "responseCode": 200
            },
            "input": { "shape": "GetSourceFolderInput" },
            "output": { "shape": "SourceFolderSummary" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourcePullRequest": {
            "name": "GetSourcePullRequest",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/183",
                "responseCode": 200
            },
            "input": { "shape": "GetSourcePullRequestInput" },
            "output": { "shape": "SourcePullRequestSummary" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourceRepository": {
            "name": "GetSourceRepository",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{name}",
                "responseCode": 200
            },
            "input": { "shape": "GetSourceRepositoryRequest" },
            "output": { "shape": "GetSourceRepositoryResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourceRepositoryCloneUrls": {
            "name": "GetSourceRepositoryCloneUrls",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/cloneUrls",
                "responseCode": 200
            },
            "input": { "shape": "GetSourceRepositoryCloneUrlsRequest" },
            "output": { "shape": "GetSourceRepositoryCloneUrlsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetSourceRepositoryMigration": {
            "name": "GetSourceRepositoryMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/194/migration",
                "responseCode": 200
            },
            "input": { "shape": "GetSourceRepositoryInputMigration" },
            "output": { "shape": "SourceRepositorySummaryMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetStaticAnalysisFinding": {
            "name": "GetStaticAnalysisFinding",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/261",
                "responseCode": 200
            },
            "input": { "shape": "GetStaticAnalysisFindingRequest" },
            "output": { "shape": "GetStaticAnalysisFindingResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetStaticAnalysisReport": {
            "name": "GetStaticAnalysisReport",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/262",
                "responseCode": 200
            },
            "input": { "shape": "GetStaticAnalysisReportRequest" },
            "output": { "shape": "GetStaticAnalysisReportResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetTestCaseResult": {
            "name": "GetTestCaseResult",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/testCaseResults/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetTestCaseResultRequest" },
            "output": { "shape": "GetTestCaseResultResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetTestReport": {
            "name": "GetTestReport",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/testReports/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetTestReportRequest" },
            "output": { "shape": "GetTestReportResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetTestReportStatus": {
            "name": "GetTestReportStatus",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/204",
                "responseCode": 200
            },
            "input": { "shape": "GetTestReportStatusRequest" },
            "output": { "shape": "GetTestReportStatusResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetUserDetails": {
            "name": "GetUserDetails",
            "http": {
                "method": "GET",
                "requestUri": "/userDetails",
                "responseCode": 200
            },
            "input": { "shape": "GetUserDetailsRequest" },
            "output": { "shape": "GetUserDetailsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetUserNotificationSettings": {
            "name": "GetUserNotificationSettings",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/notifications/settings/me",
                "responseCode": 200
            },
            "input": { "shape": "GetUserNotificationSettingsRequest" },
            "output": { "shape": "GetUserNotificationSettingsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetWorkflow": {
            "name": "GetWorkflow",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetWorkflowRequest" },
            "output": { "shape": "GetWorkflowResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "GetWorkflowRun": {
            "name": "GetWorkflowRun",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns/{id}",
                "responseCode": 200
            },
            "input": { "shape": "GetWorkflowRunRequest" },
            "output": { "shape": "GetWorkflowRunResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "LinkAccountToEnvironment": {
            "name": "LinkAccountToEnvironment",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/59",
                "responseCode": 200
            },
            "input": { "shape": "LinkAccountToEnvironmentRequest" },
            "output": { "shape": "LinkAccountToEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "deprecated": true,
            "deprecatedMessage": "Use AssociateAwsAccountToEnvironment instead.",
            "idempotent": true
        },
        "LinkExtensionIssueScope": {
            "name": "LinkExtensionIssueScope",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/268",
                "responseCode": 200
            },
            "input": { "shape": "LinkExtensionIssueScopeInput" },
            "output": { "shape": "LinkExtensionIssueScopeOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "LinkSourceRepository": {
            "name": "LinkSourceRepository",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/195",
                "responseCode": 200
            },
            "input": { "shape": "LinkSourceRepositoryInput" },
            "output": { "shape": "LinkSourceRepositoryOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "ListAccessTokens": {
            "name": "ListAccessTokens",
            "http": {
                "method": "GET",
                "requestUri": "/v1/accessTokens",
                "responseCode": 200
            },
            "input": { "shape": "ListAccessTokensRequest" },
            "output": { "shape": "ListAccessTokensResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListActionLog": {
            "name": "ListActionLog",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/actionLogs",
                "responseCode": 200
            },
            "input": { "shape": "ListActionLogRequest" },
            "output": { "shape": "ListActionLogResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListActionRuns": {
            "name": "ListActionRuns",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns/{workflowRunId}/actionRuns",
                "responseCode": 200
            },
            "input": { "shape": "ListActionRunsRequest" },
            "output": { "shape": "ListActionRunsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListActionVersions": {
            "name": "ListActionVersions",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/actions/{actionId}/versions",
                "responseCode": 200
            },
            "input": { "shape": "ListActionVersionsRequest" },
            "output": { "shape": "ListActionVersionsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListActions": {
            "name": "ListActions",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/actions",
                "responseCode": 200
            },
            "input": { "shape": "ListActionsRequest" },
            "output": { "shape": "ListActionsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListActiveOrganizationInvitations": {
            "name": "ListActiveOrganizationInvitations",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/88",
                "responseCode": 200
            },
            "input": { "shape": "ListActiveOrganizationInvitationsRequest" },
            "output": { "shape": "ListActiveOrganizationInvitationsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListActiveProjectInvitations": {
            "name": "ListActiveProjectInvitations",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/92",
                "responseCode": 200
            },
            "input": { "shape": "ListActiveProjectInvitationsRequest" },
            "output": { "shape": "ListActiveProjectInvitationsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListArtifactPackageVersionAssets": {
            "name": "ListArtifactPackageVersionAssets",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/18",
                "responseCode": 200
            },
            "input": { "shape": "ListArtifactPackageVersionAssetsInput" },
            "output": { "shape": "ListArtifactPackageVersionAssetsOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListArtifactPackageVersionDependencies": {
            "name": "ListArtifactPackageVersionDependencies",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/19",
                "responseCode": 200
            },
            "input": { "shape": "ListArtifactPackageVersionDependenciesInput" },
            "output": { "shape": "ListArtifactPackageVersionDependenciesOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListArtifactPackageVersions": {
            "name": "ListArtifactPackageVersions",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/17",
                "responseCode": 200
            },
            "input": { "shape": "ListArtifactPackageVersionsInput" },
            "output": { "shape": "ListArtifactPackageVersionsOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListArtifactPackages": {
            "name": "ListArtifactPackages",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/11",
                "responseCode": 200
            },
            "input": { "shape": "ListArtifactPackagesInput" },
            "output": { "shape": "ListArtifactPackagesOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListArtifactRepositories": {
            "name": "ListArtifactRepositories",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/26",
                "responseCode": 200
            },
            "input": { "shape": "ListArtifactRepositoriesInput" },
            "output": { "shape": "ListArtifactRepositoriesOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListAwsAccountRoles": {
            "name": "ListAwsAccountRoles",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts/{awsAccountName}/roles",
                "responseCode": 200
            },
            "input": { "shape": "ListAwsAccountRolesRequest" },
            "output": { "shape": "ListAwsAccountRolesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListAwsAccountToEnvironmentAssociations": {
            "name": "ListAwsAccountToEnvironmentAssociations",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccountToEnvironmentAssociations",
                "responseCode": 200
            },
            "input": { "shape": "ListAwsAccountToEnvironmentAssociationsRequest" },
            "output": { "shape": "ListAwsAccountToEnvironmentAssociationsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListAwsAccounts": {
            "name": "ListAwsAccounts",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccounts",
                "responseCode": 200
            },
            "input": { "shape": "ListAwsAccountsRequest" },
            "output": { "shape": "ListAwsAccountsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListAwsAccountsOnboarding": {
            "name": "ListAwsAccountsOnboarding",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/awsAccountOnboardings",
                "responseCode": 200
            },
            "input": { "shape": "ListAwsAccountsOnboardingRequest" },
            "output": { "shape": "ListAwsAccountsOnboardingResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListBlueprints": {
            "name": "ListBlueprints",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/34",
                "responseCode": 200
            },
            "input": { "shape": "ListBlueprintsRequest" },
            "output": { "shape": "ListBlueprintsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListCatalogActionVersions": {
            "name": "ListCatalogActionVersions",
            "http": {
                "method": "GET",
                "requestUri": "/v1/catalog-actions/{actionId}/versions",
                "responseCode": 200
            },
            "input": { "shape": "ListCatalogActionVersionsRequest" },
            "output": { "shape": "ListCatalogActionVersionsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListCatalogActions": {
            "name": "ListCatalogActions",
            "http": {
                "method": "GET",
                "requestUri": "/v1/catalog-actions",
                "responseCode": 200
            },
            "input": { "shape": "ListCatalogActionsRequest" },
            "output": { "shape": "ListCatalogActionsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListCodeCoverageReports": {
            "name": "ListCodeCoverageReports",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/codeCoverageReports",
                "responseCode": 200
            },
            "input": { "shape": "ListCodeCoverageReportsRequest" },
            "output": { "shape": "ListCodeCoverageReportsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListCodeCoverageResults": {
            "name": "ListCodeCoverageResults",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/codeCoverageResults",
                "responseCode": 200
            },
            "input": { "shape": "ListCodeCoverageResultsRequest" },
            "output": { "shape": "ListCodeCoverageResultsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListCodeCoverageResultsStatistics": {
            "name": "ListCodeCoverageResultsStatistics",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/codeCoverageResultsStatistics",
                "responseCode": 200
            },
            "input": { "shape": "ListCodeCoverageResultsStatisticsRequest" },
            "output": { "shape": "ListCodeCoverageResultsStatisticsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListCommentsForIssue": {
            "name": "ListCommentsForIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/42",
                "responseCode": 200
            },
            "input": { "shape": "ListCommentsForIssueInput" },
            "output": { "shape": "ListCommentsForIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListComputeFleets": {
            "name": "ListComputeFleets",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/computeFleets",
                "responseCode": 200
            },
            "input": { "shape": "ListComputeFleetsRequest" },
            "output": { "shape": "ListComputeFleetsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListComputeFleetsMigration": {
            "name": "ListComputeFleetsMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/603",
                "responseCode": 200
            },
            "input": { "shape": "ListComputeFleetsMigrationInput" },
            "output": { "shape": "ListComputeFleetsMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListConnections": {
            "name": "ListConnections",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/provider/{providerId}/connection/",
                "responseCode": 200
            },
            "input": { "shape": "ListConnectionsRequest" },
            "output": { "shape": "ListConnectionsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListDevEnvironments": {
            "name": "ListDevEnvironments",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments/",
                "responseCode": 200
            },
            "input": { "shape": "ListDevEnvironmentsRequest" },
            "output": { "shape": "ListDevEnvironmentsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListDummyData": {
            "name": "ListDummyData",
            "http": {
                "method": "GET",
                "requestUri": "/organizations/{organizationName}/dummyData",
                "responseCode": 200
            },
            "input": { "shape": "ListDummyDataInput" },
            "output": { "shape": "ListDummyDataOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListEnvironmentDeploymentTargets": {
            "name": "ListEnvironmentDeploymentTargets",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments/{environmentName}/deploymentTargets",
                "responseCode": 200
            },
            "input": { "shape": "ListEnvironmentDeploymentTargetsRequest" },
            "output": { "shape": "ListEnvironmentDeploymentTargetsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListEnvironmentDeployments": {
            "name": "ListEnvironmentDeployments",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments/{environmentName}/environment-deployments",
                "responseCode": 200
            },
            "input": { "shape": "ListEnvironmentDeploymentsRequest" },
            "output": { "shape": "ListEnvironmentDeploymentsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListEnvironments": {
            "name": "ListEnvironments",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments",
                "responseCode": 200
            },
            "input": { "shape": "ListEnvironmentsRequest" },
            "output": { "shape": "ListEnvironmentsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListEventLogs": {
            "name": "ListEventLogs",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/eventLogs",
                "responseCode": 200
            },
            "input": { "shape": "ListEventLogsRequest" },
            "output": { "shape": "ListEventLogsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListExtensionInstallations": {
            "name": "ListExtensionInstallations",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/extension-installation/",
                "responseCode": 200
            },
            "input": { "shape": "ListExtensionInstallationsRequest" },
            "output": { "shape": "ListExtensionInstallationsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListExtensionIssueScopes": {
            "name": "ListExtensionIssueScopes",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/275",
                "responseCode": 200
            },
            "input": { "shape": "ListExtensionIssueScopesRequest" },
            "output": { "shape": "ListExtensionIssueScopesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListIncidents": {
            "name": "ListIncidents",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/incidents",
                "responseCode": 200
            },
            "input": { "shape": "ListIncidentsRequest" },
            "output": { "shape": "ListIncidentsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListIssueStoreLabels": {
            "name": "ListIssueStoreLabels",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/labels",
                "responseCode": 200
            },
            "input": { "shape": "ListIssueStoreLabelsRequest" },
            "output": { "shape": "ListIssueStoreLabelsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListIssueStoreSavedViews": {
            "name": "ListIssueStoreSavedViews",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/savedViews",
                "responseCode": 200
            },
            "input": { "shape": "ListIssueStoreSavedViewsRequest" },
            "output": { "shape": "ListIssueStoreSavedViewsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListIssueStoreStatuses": {
            "name": "ListIssueStoreStatuses",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/statuses",
                "responseCode": 200
            },
            "input": { "shape": "ListIssueStoreStatusesRequest" },
            "output": { "shape": "ListIssueStoreStatusesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListIssues": {
            "name": "ListIssues",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/6",
                "responseCode": 200
            },
            "input": { "shape": "ListIssuesInput" },
            "output": { "shape": "ListIssuesOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListIssuesMigration": {
            "name": "ListIssuesMigration",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/internalListIssues",
                "responseCode": 200
            },
            "input": { "shape": "ListIssuesRequestMigration" },
            "output": { "shape": "ListIssuesResponseMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListLinkableIssueScopes": {
            "name": "ListLinkableIssueScopes",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/connection/{connectionName}/linkable-issue-scopes",
                "responseCode": 200
            },
            "input": { "shape": "ListLinkableIssueScopesInput" },
            "output": { "shape": "ListLinkableIssueScopesOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListLinkableSourceRepositories": {
            "name": "ListLinkableSourceRepositories",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/181",
                "responseCode": 200
            },
            "input": { "shape": "ListLinkableSourceRepositoriesInput" },
            "output": { "shape": "ListLinkableSourceRepositoriesOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListLinks": {
            "name": "ListLinks",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/277",
                "responseCode": 200
            },
            "input": { "shape": "ListLinksRequest" },
            "output": { "shape": "ListLinksResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListNotificationChannels": {
            "name": "ListNotificationChannels",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/notificationChannels",
                "responseCode": 200
            },
            "input": { "shape": "ListNotificationChannelsRequest" },
            "output": { "shape": "ListNotificationChannelsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListNotificationClients": {
            "name": "ListNotificationClients",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/notificationClients",
                "responseCode": 200
            },
            "input": { "shape": "ListNotificationClientsRequest" },
            "output": { "shape": "ListNotificationClientsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListOnboarding": {
            "name": "ListOnboarding",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/117",
                "responseCode": 200
            },
            "input": { "shape": "ListOnboardingInput" },
            "output": { "shape": "ListOnboardingOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListOrganizationUsers": {
            "name": "ListOrganizationUsers",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{name}/users",
                "responseCode": 200
            },
            "input": { "shape": "ListOrganizationUsersRequest" },
            "output": { "shape": "ListOrganizationUsersResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListOrganizations": {
            "name": "ListOrganizations",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations",
                "responseCode": 200
            },
            "input": { "shape": "ListOrganizationsRequest" },
            "output": { "shape": "ListOrganizationsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListPinnedProjects": {
            "name": "ListPinnedProjects",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/pinnedProjects",
                "responseCode": 200
            },
            "input": { "shape": "ListPinnedProjectsRequest" },
            "output": { "shape": "ListPinnedProjectsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListPreviousProjects": {
            "name": "ListPreviousProjects",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/previousProjects",
                "responseCode": 200
            },
            "input": { "shape": "ListPreviousProjectsRequest" },
            "output": { "shape": "ListPreviousProjectsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListProjectUsers": {
            "name": "ListProjectUsers",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{name}/users",
                "responseCode": 200
            },
            "input": { "shape": "ListProjectUsersRequest" },
            "output": { "shape": "ListProjectUsersResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListProjects": {
            "name": "ListProjects",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects",
                "responseCode": 200
            },
            "input": { "shape": "ListProjectsRequest" },
            "output": { "shape": "ListProjectsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListPullRequestComments": {
            "name": "ListPullRequestComments",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/46",
                "responseCode": 200
            },
            "input": { "shape": "ListPullRequestCommentsInput" },
            "output": { "shape": "ListPullRequestCommentsOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSecrets": {
            "name": "ListSecrets",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/secrets",
                "responseCode": 200
            },
            "input": { "shape": "ListSecretsRequest" },
            "output": { "shape": "ListSecretsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSecretsMigration": {
            "name": "ListSecretsMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/224",
                "responseCode": 200
            },
            "input": { "shape": "ListSecretsMigrationInput" },
            "output": { "shape": "ListSecretsMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSoftwareCompositionAnalysisFindings": {
            "name": "ListSoftwareCompositionAnalysisFindings",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/softwareCompositionAnalysisFindings",
                "responseCode": 200
            },
            "input": { "shape": "ListSoftwareCompositionAnalysisFindingsRequest" },
            "output": { "shape": "ListSoftwareCompositionAnalysisFindingsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSoftwareCompositionAnalysisFindingsStatistics": {
            "name": "ListSoftwareCompositionAnalysisFindingsStatistics",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/softwareCompositionAnalysisFindingsStatistics",
                "responseCode": 200
            },
            "input": { "shape": "ListSoftwareCompositionAnalysisFindingsStatisticsRequest" },
            "output": { "shape": "ListSoftwareCompositionAnalysisFindingsStatisticsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSoftwareCompositionAnalysisReports": {
            "name": "ListSoftwareCompositionAnalysisReports",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/softwareCompositionAnalysisReports",
                "responseCode": 200
            },
            "input": { "shape": "ListSoftwareCompositionAnalysisReportsRequest" },
            "output": { "shape": "ListSoftwareCompositionAnalysisReportsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSoftwareTestingReports": {
            "name": "ListSoftwareTestingReports",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/212",
                "responseCode": 200
            },
            "input": { "shape": "ListSoftwareTestingReportsRequest" },
            "output": { "shape": "ListSoftwareTestingReportsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceBranches": {
            "name": "ListSourceBranches",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/175",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceBranchesInput" },
            "output": { "shape": "ListSourceBranchesOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceDifferenceMetadata": {
            "name": "ListSourceDifferenceMetadata",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/178",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceDifferenceMetadataInput" },
            "output": { "shape": "ListSourceDifferenceMetadataOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourcePullRequestToJiraIssueLinks": {
            "name": "ListSourcePullRequestToJiraIssueLinks",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/283",
                "responseCode": 200
            },
            "input": { "shape": "ListSourcePullRequestToJiraIssueLinkInput" },
            "output": { "shape": "ListSourcePullRequestToJiraIssueLinkOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourcePullRequests": {
            "name": "ListSourcePullRequests",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/185",
                "responseCode": 200
            },
            "input": { "shape": "ListSourcePullRequestsInput" },
            "output": { "shape": "ListSourcePullRequestsOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceReferencePolicies": {
            "name": "ListSourceReferencePolicies",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/repositories/{sourceRepositoryName}/referencePolicies",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceReferencePoliciesRequest" },
            "output": { "shape": "ListSourceReferencePoliciesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceRepositories": {
            "name": "ListSourceRepositories",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceRepositoriesRequest" },
            "output": { "shape": "ListSourceRepositoriesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceRepositoriesMigration": {
            "name": "ListSourceRepositoriesMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/196/migration",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceRepositoriesInputMigration" },
            "output": { "shape": "ListSourceRepositoriesOutputMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceRepositoryBranches": {
            "name": "ListSourceRepositoryBranches",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/branches",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceRepositoryBranchesRequest" },
            "output": { "shape": "ListSourceRepositoryBranchesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceRepositoryCommitDifferences": {
            "name": "ListSourceRepositoryCommitDifferences",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/commitDifferences",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceRepositoryCommitDifferencesRequest" },
            "output": { "shape": "ListSourceRepositoryCommitDifferencesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceRepositoryCommits": {
            "name": "ListSourceRepositoryCommits",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/commits",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceRepositoryCommitsRequest" },
            "output": { "shape": "ListSourceRepositoryCommitsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListSourceRevisions": {
            "name": "ListSourceRevisions",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/191",
                "responseCode": 200
            },
            "input": { "shape": "ListSourceRevisionsInput" },
            "output": { "shape": "ListSourceRevisionsOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListStaticAnalysisFindingStatistics": {
            "name": "ListStaticAnalysisFindingStatistics",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/285",
                "responseCode": 200
            },
            "input": { "shape": "ListStaticAnalysisFindingsStatisticsRequest" },
            "output": { "shape": "ListStaticAnalysisFindingStatisticsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListStaticAnalysisFindings": {
            "name": "ListStaticAnalysisFindings",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/284",
                "responseCode": 200
            },
            "input": { "shape": "ListStaticAnalysisFindingsRequest" },
            "output": { "shape": "ListStaticAnalysisFindingsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListStaticAnalysisReports": {
            "name": "ListStaticAnalysisReports",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/286",
                "responseCode": 200
            },
            "input": { "shape": "ListStaticAnalysisReportsRequest" },
            "output": { "shape": "ListStaticAnalysisReportsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListTestCaseResults": {
            "name": "ListTestCaseResults",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/testCaseResults",
                "responseCode": 200
            },
            "input": { "shape": "ListTestCaseResultsRequest" },
            "output": { "shape": "ListTestCaseResultsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListTestCaseResultsStatistics": {
            "name": "ListTestCaseResultsStatistics",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/testCaseResultsStatistics",
                "responseCode": 200
            },
            "input": { "shape": "ListTestCaseResultsStatisticsRequest" },
            "output": { "shape": "ListTestCaseResultsStatisticsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListTestReportStatuses": {
            "name": "ListTestReportStatuses",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/205",
                "responseCode": 200
            },
            "input": { "shape": "ListTestReportStatusesRequest" },
            "output": { "shape": "ListTestReportStatusesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListTestReports": {
            "name": "ListTestReports",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/testReports",
                "responseCode": 200
            },
            "input": { "shape": "ListTestReportsRequest" },
            "output": { "shape": "ListTestReportsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListTrackingSummaryForSourceCommits": {
            "name": "ListTrackingSummaryForSourceCommits",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/project/{projectName}",
                "responseCode": 200
            },
            "input": { "shape": "ListTrackingSummaryForSourceCommitsRequest" },
            "output": { "shape": "ListTrackingSummaryForSourceCommitsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListWorkflowRuns": {
            "name": "ListWorkflowRuns",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns",
                "responseCode": 200
            },
            "input": { "shape": "ListWorkflowRunsRequest" },
            "output": { "shape": "ListWorkflowRunsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ListWorkflows": {
            "name": "ListWorkflows",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows",
                "responseCode": 200
            },
            "input": { "shape": "ListWorkflowsRequest" },
            "output": { "shape": "ListWorkflowsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "MergeSourcePullRequestByFastForward": {
            "name": "MergeSourcePullRequestByFastForward",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/186",
                "responseCode": 200
            },
            "input": { "shape": "MergeSourcePullRequestByFastForwardInput" },
            "output": { "shape": "MergeSourcePullRequestByFastForwardOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "MergeSourcePullRequestBySquash": {
            "name": "MergeSourcePullRequestBySquash",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/187",
                "responseCode": 200
            },
            "input": { "shape": "MergeSourcePullRequestBySquashInput" },
            "output": { "shape": "MergeSourcePullRequestBySquashOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "PublishActionVersion": {
            "name": "PublishActionVersion",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/actions/{actionId}/sources/{sourceCommitSha1}",
                "responseCode": 200
            },
            "input": { "shape": "PublishActionVersionRequest" },
            "output": { "shape": "PublishActionVersionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "PutProjectNotificationSettings": {
            "name": "PutProjectNotificationSettings",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/notifications/settings",
                "responseCode": 200
            },
            "input": { "shape": "PutProjectNotificationSettingsRequest" },
            "output": { "shape": "PutProjectNotificationSettingsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "PutUserNotificationSettings": {
            "name": "PutUserNotificationSettings",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/notifications/settings/me",
                "responseCode": 200
            },
            "input": { "shape": "PutUserNotificationSettingsRequest" },
            "output": { "shape": "PutUserNotificationSettingsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "QueryEventLogs": {
            "name": "QueryEventLogs",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/eventLogs",
                "responseCode": 200
            },
            "input": { "shape": "QueryEventLogsRequest" },
            "output": { "shape": "QueryEventLogsResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "RemoveUserFromRole": {
            "name": "RemoveUserFromRole",
            "http": {
                "method": "PATCH",
                "requestUri": "/v1/organizations/{organizationName}/permissions",
                "responseCode": 200
            },
            "input": { "shape": "RemoveUserFromRoleRequest" },
            "output": { "shape": "RemoveUserFromRoleResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "RemoveUserFromRoleMigration": {
            "name": "RemoveUserFromRoleMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/292",
                "responseCode": 200
            },
            "input": { "shape": "RemoveUserFromRoleMigrationInput" },
            "output": { "shape": "RemoveUserFromRoleMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "RetryTestActionTestCases": {
            "name": "RetryTestActionTestCases",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/213",
                "responseCode": 200
            },
            "input": { "shape": "RetryTestActionTestCasesRequest" },
            "output": { "shape": "RetryTestActionTestCasesResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "RevokeSession": {
            "name": "RevokeSession",
            "http": {
                "method": "POST",
                "requestUri": "/session/revoke",
                "responseCode": 200
            },
            "input": { "shape": "RevokeSessionRequest" },
            "output": { "shape": "RevokeSessionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "Search": {
            "name": "Search",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/search",
                "responseCode": 200
            },
            "input": { "shape": "SearchRequest" },
            "output": { "shape": "SearchResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "SendOrganizationInvitation": {
            "name": "SendOrganizationInvitation",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/89",
                "responseCode": 200
            },
            "input": { "shape": "SendOrganizationInvitationRequest" },
            "output": { "shape": "SendOrganizationInvitationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "SendProjectInvitation": {
            "name": "SendProjectInvitation",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/93",
                "responseCode": 200
            },
            "input": { "shape": "SendProjectInvitationRequest" },
            "output": { "shape": "SendProjectInvitationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "SetSubscription": {
            "name": "SetSubscription",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/123",
                "responseCode": 200
            },
            "input": { "shape": "SetSubscriptionRequest" },
            "output": { "shape": "SetSubscriptionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "StartDevEnvironment": {
            "name": "StartDevEnvironment",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments/{id}/start",
                "responseCode": 200
            },
            "input": { "shape": "StartDevEnvironmentRequest" },
            "output": { "shape": "StartDevEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "StartDevEnvironmentSession": {
            "name": "StartDevEnvironmentSession",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments/{id}/session",
                "responseCode": 200
            },
            "input": { "shape": "StartDevEnvironmentSessionRequest" },
            "output": { "shape": "StartDevEnvironmentSessionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "StartWorkflowRun": {
            "name": "StartWorkflowRun",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns",
                "responseCode": 200
            },
            "input": { "shape": "StartWorkflowRunRequest" },
            "output": { "shape": "StartWorkflowRunResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "StopDevEnvironment": {
            "name": "StopDevEnvironment",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments/{id}/stop",
                "responseCode": 200
            },
            "input": { "shape": "StopDevEnvironmentRequest" },
            "output": { "shape": "StopDevEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "SynthesizeBlueprint": {
            "name": "SynthesizeBlueprint",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/35",
                "responseCode": 200
            },
            "input": { "shape": "SynthesizeBlueprintRequest" },
            "output": { "shape": "SynthesizeBlueprintResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UnlinkAccountFromEnvironment": {
            "name": "UnlinkAccountFromEnvironment",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/61",
                "responseCode": 200
            },
            "input": { "shape": "UnlinkAccountFromEnvironmentRequest" },
            "output": { "shape": "UnlinkAccountFromEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "deprecated": true,
            "deprecatedMessage": "Use DisassociateAwsAccountFromEnvironment instead.",
            "idempotent": true
        },
        "UnlinkExtensionIssueScope": {
            "name": "UnlinkExtensionIssueScope",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/294",
                "responseCode": 200
            },
            "input": { "shape": "UnlinkExtensionIssueScopeInput" },
            "output": { "shape": "UnlinkExtensionIssueScopeOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateArtifactPackageOriginConfiguration": {
            "name": "UpdateArtifactPackageOriginConfiguration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/12",
                "responseCode": 200
            },
            "input": { "shape": "UpdateArtifactPackageOriginConfigurationInput" },
            "output": { "shape": "UpdateArtifactPackageOriginConfigurationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateArtifactPackageVersionsStatus": {
            "name": "UpdateArtifactPackageVersionsStatus",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/20",
                "responseCode": 200
            },
            "input": { "shape": "UpdateArtifactPackageVersionsStatusInput" },
            "output": { "shape": "ArtifactPackageVersionsBatchActionOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateArtifactRepository": {
            "name": "UpdateArtifactRepository",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/27",
                "responseCode": 200
            },
            "input": { "shape": "UpdateArtifactRepositoryInput" },
            "output": { "shape": "UpdateArtifactRepositoryOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateCommentContentForIssue": {
            "name": "UpdateCommentContentForIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/43",
                "responseCode": 200
            },
            "input": { "shape": "UpdateCommentContentForIssueInput" },
            "output": { "shape": "UpdateCommentContentForIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateComputeFleet": {
            "name": "UpdateComputeFleet",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/computeFleets/{name}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateComputeFleetRequest" },
            "output": { "shape": "UpdateComputeFleetResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateComputeFleetMigration": {
            "name": "UpdateComputeFleetMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/604",
                "responseCode": 200
            },
            "input": { "shape": "UpdateComputeFleetMigrationInput" },
            "output": { "shape": "UpdateComputeFleetMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateDevEnvironment": {
            "name": "UpdateDevEnvironment",
            "http": {
                "method": "PATCH",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/devEnvironments/{id}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateDevEnvironmentRequest" },
            "output": { "shape": "UpdateDevEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateDummyData": {
            "name": "UpdateDummyData",
            "http": {
                "method": "PUT",
                "requestUri": "/organizations/{organizationName}/dummyData/{name}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateDummyDataInput" },
            "output": { "shape": "UpdateDummyDataOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateEnvironment": {
            "name": "UpdateEnvironment",
            "http": {
                "method": "PATCH",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/environments/{name}",
                "responseCode": 201
            },
            "input": { "shape": "UpdateEnvironmentRequest" },
            "output": { "shape": "UpdateEnvironmentResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateIssue": {
            "name": "UpdateIssue",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/7",
                "responseCode": 200
            },
            "input": { "shape": "UpdateIssueInput" },
            "output": { "shape": "UpdateIssueOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateIssueMigration": {
            "name": "UpdateIssueMigration",
            "http": {
                "method": "PATCH",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}/issues/{id}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateIssueRequestMigration" },
            "output": { "shape": "UpdateIssueResponseMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateIssueStore": {
            "name": "UpdateIssueStore",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/9",
                "responseCode": 200
            },
            "input": { "shape": "UpdateIssueStoreInput" },
            "output": { "shape": "UpdateIssueStoreOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateIssueStoreMigration": {
            "name": "UpdateIssueStoreMigration",
            "http": {
                "method": "PATCH",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/issueStores/{issueStoreName}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateIssueStoreRequestMigration" },
            "output": { "shape": "UpdateIssueStoreResponseMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateNotificationChannel": {
            "name": "UpdateNotificationChannel",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/notificationChannels/{id}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateNotificationChannelRequest" },
            "output": { "shape": "UpdateNotificationChannelResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateOnboarding": {
            "name": "UpdateOnboarding",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/118",
                "responseCode": 200
            },
            "input": { "shape": "UpdateOnboardingInput" },
            "output": { "shape": "OnboardingOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateOrganization": {
            "name": "UpdateOrganization",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{name}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateOrganizationRequest" },
            "output": { "shape": "UpdateOrganizationResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdatePerson": {
            "name": "UpdatePerson",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/132",
                "responseCode": 200
            },
            "input": { "shape": "UpdatePersonInput" },
            "output": { "shape": "UpdatePersonOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "InvalidInputError" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "deprecated": true,
            "deprecatedMessage": "This operation will be removed."
        },
        "UpdatePinnedProject": {
            "name": "UpdatePinnedProject",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/pinnedProjects/{name}",
                "responseCode": 200
            },
            "input": { "shape": "UpdatePinnedProjectRequest" },
            "output": { "shape": "UpdatePinnedProjectResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateProject": {
            "name": "UpdateProject",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{name}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateProjectRequest" },
            "output": { "shape": "UpdateProjectResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdatePullRequestCommentContent": {
            "name": "UpdatePullRequestCommentContent",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/47",
                "responseCode": 200
            },
            "input": { "shape": "UpdatePullRequestCommentContentInput" },
            "output": { "shape": "UpdatePullRequestCommentContentOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateSecret": {
            "name": "UpdateSecret",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/secrets/{name}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSecretRequest" },
            "output": { "shape": "UpdateSecretResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateSecretMigration": {
            "name": "UpdateSecretMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/225",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSecretMigrationInput" },
            "output": { "shape": "UpdateSecretMigrationOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateSourcePullRequest": {
            "name": "UpdateSourcePullRequest",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/188",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSourcePullRequestInput" },
            "output": { "shape": "UpdateSourcePullRequestOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateSourcePullRequestApprovalStatus": {
            "name": "UpdateSourcePullRequestApprovalStatus",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/189",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSourcePullRequestApprovalStatusInput" },
            "output": { "shape": "UpdateSourcePullRequestApprovalStatusOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateSourcePullRequestReviewers": {
            "name": "UpdateSourcePullRequestReviewers",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/190",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSourcePullRequestReviewersInput" },
            "output": { "shape": "UpdateSourcePullRequestReviewersOutput" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "UpdateSourceReferencePolicy": {
            "name": "UpdateSourceReferencePolicy",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/repositories/{sourceRepositoryName}/referencePolicies",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSourceReferencePolicyRequest" },
            "output": { "shape": "UpdateSourceReferencePolicyResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateSourceRepository": {
            "name": "UpdateSourceRepository",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/sourceRepositories/{name}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSourceRepositoryRequest" },
            "output": { "shape": "UpdateSourceRepositoryResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "UpdateSourceRepositoryMigration": {
            "name": "UpdateSourceRepositoryMigration",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/197/migration",
                "responseCode": 200
            },
            "input": { "shape": "UpdateSourceRepositoryInputMigration" },
            "output": { "shape": "UpdateSourceRepositoryOutputMigration" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ValidateOrganizationName": {
            "name": "ValidateOrganizationName",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/128",
                "responseCode": 200
            },
            "input": { "shape": "ValidateOrganizationNameRequest" },
            "output": { "shape": "ValidateOrganizationNameResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "ValidateProjectName": {
            "name": "ValidateProjectName",
            "http": {
                "method": "POST",
                "requestUri": "/TODO/161",
                "responseCode": 200
            },
            "input": { "shape": "ValidateProjectNameRequest" },
            "output": { "shape": "ValidateProjectNameResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "VerifySession": {
            "name": "VerifySession",
            "http": {
                "method": "GET",
                "requestUri": "/session/verify",
                "responseCode": 200
            },
            "output": { "shape": "VerifySessionResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "_GetWorkflowState": {
            "name": "_GetWorkflowState",
            "http": {
                "method": "GET",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowStates",
                "responseCode": 200
            },
            "input": { "shape": "GetWorkflowStateRequest" },
            "output": { "shape": "GetWorkflowStateResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        },
        "_UpdateWorkflowRun": {
            "name": "_UpdateWorkflowRun",
            "http": {
                "method": "PUT",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflows/{workflowId}/workflowRuns/{workflowRunId}",
                "responseCode": 200
            },
            "input": { "shape": "UpdateWorkflowRunRequest" },
            "output": { "shape": "UpdateWorkflowRunResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ],
            "idempotent": true
        },
        "_ValidateWorkflowDraft": {
            "name": "_ValidateWorkflowDraft",
            "http": {
                "method": "POST",
                "requestUri": "/v1/organizations/{organizationName}/projects/{projectName}/workflowDraft",
                "responseCode": 200
            },
            "input": { "shape": "ValidateWorkflowDraftRequest" },
            "output": { "shape": "ValidateWorkflowDraftResponse" },
            "errors": [
                { "shape": "ThrottlingException" },
                { "shape": "ConflictException" },
                { "shape": "ValidationException" },
                { "shape": "ServiceQuotaExceededException" },
                { "shape": "ResourceNotFoundException" },
                { "shape": "AccessDeniedException" }
            ]
        }
    },
    "shapes": {
        "AcceptOrganizationInvitationRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "AcceptOrganizationInvitationRequestIdString" }
            }
        },
        "AcceptOrganizationInvitationRequestIdString": {
            "type": "string",
            "max": 180,
            "min": 32
        },
        "AcceptOrganizationInvitationResponse": {
            "type": "structure",
            "required": [
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "organizationName",
                "status",
                "inviteeRole",
                "id"
            ],
            "members": {
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "organizationName": { "shape": "String" },
                "status": { "shape": "InvitationStatus" },
                "inviteeRole": { "shape": "OrganizationInviteeRole" },
                "id": { "shape": "String" }
            }
        },
        "AcceptProjectInvitationRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "AcceptProjectInvitationRequestIdString" },
                "projectName": { "shape": "String" }
            }
        },
        "AcceptProjectInvitationRequestIdString": {
            "type": "string",
            "max": 180,
            "min": 32
        },
        "AcceptProjectInvitationResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "id",
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "projectName",
                "status",
                "inviteeRole"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "title": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "projectName": { "shape": "String" },
                "status": { "shape": "ProjectInvitationStatus" },
                "inviteeRole": { "shape": "ProjectInviteeRole" }
            }
        },
        "AccessDeniedException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" }
            },
            "error": {
                "httpStatusCode": 403,
                "senderFault": true
            },
            "exception": true
        },
        "AccessTokenId": {
            "type": "string",
            "max": 36,
            "min": 1
        },
        "AccessTokenName": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "AccessTokenSecret": {
            "type": "string",
            "max": 4000,
            "min": 1,
            "sensitive": true
        },
        "AccessTokenSummaries": {
            "type": "list",
            "member": { "shape": "AccessTokenSummary" }
        },
        "AccessTokenSummary": {
            "type": "structure",
            "required": ["id", "name"],
            "members": {
                "id": { "shape": "AccessTokenId" },
                "name": { "shape": "AccessTokenName" },
                "expires": {
                    "shape": "SyntheticTimestamp_date_time",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use expiresTime instead."
                },
                "expiresTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "AccountConnectionInfo": {
            "type": "structure",
            "required": ["roleName", "accountConnectionName"],
            "members": {
                "roleName": { "shape": "NameString" },
                "roleId": { "shape": "Uuid" },
                "accountConnectionName": { "shape": "NameString" },
                "accountConnectionId": { "shape": "Uuid" }
            }
        },
        "AccountConnectionToken": {
            "type": "string",
            "sensitive": true
        },
        "ActionCategory": {
            "type": "string",
            "enum": ["BUILD", "TEST", "UTILITIES", "SECURITY", "DEPLOYMENT", "CODE_QUALITY"]
        },
        "ActionGroupNames": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "ActionLogEntries": {
            "type": "list",
            "member": { "shape": "ActionLogEntry" }
        },
        "ActionLogEntry": {
            "type": "structure",
            "required": [
                "eventId",
                "eventType",
                "eventCategory",
                "eventSource",
                "eventName",
                "eventTime",
                "readonly",
                "awsRequestId",
                "projectId",
                "requestPayload",
                "requestPayloadContentType",
                "responsePayload",
                "responsePayloadContentType"
            ],
            "members": {
                "eventId": { "shape": "String" },
                "eventType": { "shape": "String" },
                "eventCategory": { "shape": "String" },
                "eventSource": { "shape": "String" },
                "eventName": { "shape": "String" },
                "eventTime": { "shape": "String" },
                "protocol": { "shape": "String" },
                "readonly": { "shape": "Boolean" },
                "awsRequestId": { "shape": "String" },
                "projectId": { "shape": "String" },
                "requestPayload": { "shape": "String" },
                "requestPayloadContentType": { "shape": "String" },
                "responsePayload": { "shape": "String" },
                "responsePayloadContentType": { "shape": "String" },
                "errorCode": { "shape": "String" },
                "sourceIpAddress": { "shape": "SourceIpAddress" },
                "userInformation": { "shape": "ActionLogUserInformation" },
                "resourceTypes": { "shape": "StringList" }
            }
        },
        "ActionLogUserInformation": {
            "type": "structure",
            "members": {
                "username": { "shape": "String" },
                "userId": { "shape": "String" },
                "tenantIdentity": { "shape": "String" },
                "personalAccessToken": { "shape": "String" }
            }
        },
        "ActionNames": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "ActionRunAccountConnection": {
            "type": "structure",
            "required": ["roleName", "accountConnectionName"],
            "members": {
                "roleName": { "shape": "ActionRunAccountConnectionRoleNameString" },
                "accountConnectionName": { "shape": "ActionRunAccountConnectionAccountConnectionNameString" }
            }
        },
        "ActionRunAccountConnectionAccountConnectionNameString": {
            "type": "string",
            "max": 2500,
            "min": 1
        },
        "ActionRunAccountConnectionRoleNameString": {
            "type": "string",
            "max": 2500,
            "min": 1
        },
        "ActionRunActionRunMessage": {
            "type": "structure",
            "required": ["statusCode", "requestId", "messageLevel", "templateVariables", "errorTypes"],
            "members": {
                "message": { "shape": "String" },
                "statusCode": { "shape": "String" },
                "requestId": { "shape": "String" },
                "messageLevel": { "shape": "String" },
                "templateVariables": { "shape": "ActionRunMessageTemplateVariables" },
                "errorTypes": { "shape": "ErrorTypes" }
            }
        },
        "ActionRunArtifact": {
            "type": "structure",
            "required": ["actionRunId", "name"],
            "members": {
                "actionRunId": { "shape": "String" },
                "name": { "shape": "String" }
            }
        },
        "ActionRunArtifacts": {
            "type": "list",
            "member": { "shape": "ActionRunArtifact" }
        },
        "ActionRunCache": {
            "type": "structure",
            "members": {
                "cacheFiles": { "shape": "ActionRunCacheCacheFilesList" }
            }
        },
        "ActionRunCacheCacheFilesList": {
            "type": "list",
            "member": { "shape": "ActionRunCacheFile" },
            "max": 5,
            "min": 0
        },
        "ActionRunCacheFile": {
            "type": "structure",
            "members": {
                "keyName": { "shape": "String" },
                "path": { "shape": "String" },
                "restoreKeys": { "shape": "ActionRunCacheFileRestoreKeysList" }
            }
        },
        "ActionRunCacheFileRestoreKeysList": {
            "type": "list",
            "member": { "shape": "String" },
            "max": 5,
            "min": 0
        },
        "ActionRunComputeDetails": {
            "type": "structure",
            "required": ["computeFleetOS", "computeFleetType"],
            "members": {
                "computeFleetOS": { "shape": "ActionRunComputeFleetOS" },
                "computeFleetType": { "shape": "ActionRunComputeFleetType" },
                "computeFleetName": { "shape": "String" }
            }
        },
        "ActionRunComputeFleetOS": {
            "type": "string",
            "enum": ["LINUX_CONTAINER", "LINUX_LAMBDA", "LINUX_GPU_CONTAINER", "ARM_CONTAINER"]
        },
        "ActionRunComputeFleetType": {
            "type": "string",
            "enum": ["ON_DEMAND", "PROVISIONED"]
        },
        "ActionRunConnectionDetails": {
            "type": "structure",
            "members": {
                "environmentName": { "shape": "ActionRunConnectionDetailsEnvironmentNameString" },
                "connections": { "shape": "ActionRunConnectionDetailsConnectionsList" }
            }
        },
        "ActionRunConnectionDetailsConnectionsList": {
            "type": "list",
            "member": { "shape": "ActionRunAccountConnection" },
            "max": 10,
            "min": 1
        },
        "ActionRunConnectionDetailsEnvironmentNameString": {
            "type": "string",
            "max": 2500,
            "min": 1
        },
        "ActionRunDownloadableUrlInfo": {
            "type": "structure",
            "members": {
                "downloadUrl": { "shape": "ActionRunDownloadableUrlInfoDownloadUrlString" },
                "expiresTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "ActionRunDownloadableUrlInfoDownloadUrlString": {
            "type": "string",
            "max": 2048,
            "min": 1,
            "pattern": "[0-9a-zA-Z-._~:/?#\\[\\]@!$&'()*+,;=]{4,1024}"
        },
        "ActionRunEnvironment": {
            "type": "structure",
            "members": {
                "timeoutInMinutes": { "shape": "Integer" },
                "variables": { "shape": "ActionRunEnvironmentVariables" },
                "inputVariables": { "shape": "ActionRunEnvironmentVariables" },
                "outputVariables": { "shape": "ActionRunEnvironmentVariables" },
                "containerImage": { "shape": "String" },
                "containerRegistry": { "shape": "String" }
            }
        },
        "ActionRunEnvironmentVariable": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "value": { "shape": "String" }
            }
        },
        "ActionRunEnvironmentVariables": {
            "type": "list",
            "member": { "shape": "ActionRunEnvironmentVariable" }
        },
        "ActionRunFiles": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "ActionRunLogEvent": {
            "type": "structure",
            "members": {
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "message": { "shape": "String" }
            }
        },
        "ActionRunLogEventList": {
            "type": "list",
            "member": { "shape": "ActionRunLogEvent" }
        },
        "ActionRunMessageTemplateVariable": {
            "type": "structure",
            "required": ["name", "value"],
            "members": {
                "name": { "shape": "String" },
                "value": { "shape": "String" }
            }
        },
        "ActionRunMessageTemplateVariables": {
            "type": "list",
            "member": { "shape": "ActionRunMessageTemplateVariable" }
        },
        "ActionRunMessages": {
            "type": "list",
            "member": { "shape": "ActionRunActionRunMessage" }
        },
        "ActionRunPaths": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "ActionRunPhaseContext": {
            "type": "structure",
            "members": {
                "message": { "shape": "String" },
                "messageType": { "shape": "ActionRunPhaseContextCode" }
            }
        },
        "ActionRunPhaseContextCode": {
            "type": "string",
            "enum": ["FAULT", "CLIENT_ERROR", "INFO"]
        },
        "ActionRunPhaseContextList": {
            "type": "list",
            "member": { "shape": "ActionRunPhaseContext" }
        },
        "ActionRunPhaseMetadata": {
            "type": "structure",
            "members": {
                "name": { "shape": "ActionRunPhaseName" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "durationInSeconds": { "shape": "Integer" },
                "status": { "shape": "ActionRunPhaseStatus" },
                "contexts": { "shape": "ActionRunPhaseContextList" },
                "steps": { "shape": "ActionRunSteps" }
            }
        },
        "ActionRunPhaseMetadataList": {
            "type": "list",
            "member": { "shape": "ActionRunPhaseMetadata" }
        },
        "ActionRunPhaseName": {
            "type": "string",
            "enum": ["QUEUED", "PROVISIONING", "WAIT_FOR_DEPLOYMENT", "DOWNLOAD_SOURCE", "BUILD", "UPLOAD_ARTIFACTS"]
        },
        "ActionRunPhaseStatus": {
            "type": "string",
            "enum": ["SUBMITTED", "IN_PROGRESS", "STOPPED", "TIMED_OUT", "SUCCEEDED", "FAILED", "FAULT"]
        },
        "ActionRunReport": {
            "type": "structure",
            "members": {
                "format": { "shape": "ActionRunReportFormat" },
                "name": { "shape": "String" },
                "includedFiles": { "shape": "ActionRunFiles" },
                "includedPaths": { "shape": "ActionRunPaths" },
                "successCriteria": { "shape": "ActionRunSuccessCriteria" }
            }
        },
        "ActionRunReportFormat": {
            "type": "string",
            "enum": [
                "CUCUMBERJSON",
                "JUNITXML",
                "NUNIT3XML",
                "NUNITXML",
                "TESTNGXML",
                "VISUALSTUDIOTRX",
                "COBERTURAXML",
                "CLOVERXML",
                "SIMPLECOV",
                "JACOCOXML",
                "SARIFSCA",
                "ESLINTJSON",
                "PYLINTJSON"
            ]
        },
        "ActionRunReports": {
            "type": "list",
            "member": { "shape": "ActionRunReport" }
        },
        "ActionRunStatus": {
            "type": "string",
            "enum": ["SUBMITTED", "IN_PROGRESS", "STOPPED", "TIMED_OUT", "SUCCEEDED", "FAILED", "FAULT"]
        },
        "ActionRunStep": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "status": { "shape": "ActionRunStepStatus" }
            }
        },
        "ActionRunStepStatus": {
            "type": "string",
            "enum": ["SUCCEEDED", "FAILED", "IN_PROGRESS", "PENDING"]
        },
        "ActionRunSteps": {
            "type": "list",
            "member": { "shape": "ActionRunStep" }
        },
        "ActionRunSuccessCriteria": {
            "type": "structure",
            "members": {
                "lineCoverage": { "shape": "Double" },
                "branchCoverage": { "shape": "Double" },
                "passRate": { "shape": "Double" }
            }
        },
        "ActionRunSummary": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "workflowId": { "shape": "String" },
                "workflowRunId": { "shape": "String" },
                "actionName": { "shape": "String" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "_status": { "shape": "String" },
                "_summary": { "shape": "ActionRunSummaryData" },
                "_inputArtifacts": { "shape": "ActionRunArtifacts" },
                "_outputArtifacts": { "shape": "ActionRunArtifacts" },
                "_outputVariables": { "shape": "ActionRunVariables" }
            }
        },
        "ActionRunSummaryData": {
            "type": "structure",
            "required": ["summaryType", "summaryMessage"],
            "members": {
                "summaryType": { "shape": "ActionRunSummaryDataType" },
                "summaryMessage": { "shape": "ActionRunSummaryDataMessage" }
            }
        },
        "ActionRunSummaryDataMessage": {
            "type": "structure",
            "required": ["text", "level", "label"],
            "members": {
                "text": { "shape": "String" },
                "level": { "shape": "ActionRunSummaryDataMessageLevel" },
                "label": { "shape": "String" }
            }
        },
        "ActionRunSummaryDataMessageLevel": {
            "type": "string",
            "enum": ["SUCCESS", "ERROR", "WARNING", "INFO"]
        },
        "ActionRunSummaryDataType": {
            "type": "string",
            "enum": ["SUMMARY_MESSAGE"]
        },
        "ActionRunVariable": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "value": { "shape": "String" }
            }
        },
        "ActionRunVariables": {
            "type": "list",
            "member": { "shape": "ActionRunVariable" }
        },
        "ActionSummaries": {
            "type": "list",
            "member": { "shape": "ActionSummary" }
        },
        "ActionSummary": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "status"],
            "members": {
                "id": { "shape": "NameString" },
                "name": { "shape": "ActionSummaryNameString" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "logo": { "shape": "ActionSummaryLogoString" },
                "description": { "shape": "ActionSummaryDescriptionString" },
                "categories": { "shape": "ActionSummaryCategoriesList" },
                "status": { "shape": "Status" },
                "support": { "shape": "String" },
                "sourceRepositoryName": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "ActionSummaryCategoriesList": {
            "type": "list",
            "member": { "shape": "ActionCategory" },
            "max": 10,
            "min": 0
        },
        "ActionSummaryDescriptionString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "ActionSummaryLogoString": {
            "type": "string",
            "max": 4096,
            "min": 0
        },
        "ActionSummaryNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "ActionVersionSchemaInterface": {
            "type": "structure",
            "required": ["name", "version"],
            "members": {
                "name": { "shape": "ActionVersionSchemaInterfaceNameString" },
                "version": { "shape": "ActionVersionSchemaInterfaceVersionString" }
            }
        },
        "ActionVersionSchemaInterfaceNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "ActionVersionSchemaInterfaceVersionString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "ActionVersionSchemaOutputArtifact": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "ActionVersionSchemaOutputArtifactNameString" },
                "description": { "shape": "ActionVersionSchemaOutputArtifactDescriptionString" }
            }
        },
        "ActionVersionSchemaOutputArtifactDescriptionString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "ActionVersionSchemaOutputArtifactNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "ActionVersionSchemaOutputVariable": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "ActionVersionSchemaOutputVariableNameString" },
                "description": { "shape": "ActionVersionSchemaOutputVariableDescriptionString" }
            }
        },
        "ActionVersionSchemaOutputVariableDescriptionString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "ActionVersionSchemaOutputVariableNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "ActionVersionSchemaPredefinedInterface": {
            "type": "structure",
            "required": ["schemaInterface", "configuration"],
            "members": {
                "schemaInterface": { "shape": "ActionVersionSchemaInterface" },
                "configuration": { "shape": "ActionVersionSchemaPredefinedInterfaceConfigurationString" }
            }
        },
        "ActionVersionSchemaPredefinedInterfaceConfigurationString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "ActionVersionStatusMessage": { "type": "string" },
        "ActionVersionStatusMessages": {
            "type": "list",
            "member": { "shape": "ActionVersionStatusMessage" }
        },
        "ActionVersionWorkflowSchema": {
            "type": "structure",
            "members": {
                "baseSchema": { "shape": "ActionVersionWorkflowSchemaBaseSchemaString" },
                "optionalInterfaces": { "shape": "ActionVersionWorkflowSchemaOptionalInterfacesList" },
                "requiredInterfaces": { "shape": "ActionVersionWorkflowSchemaRequiredInterfacesList" },
                "predefinedInterfaces": { "shape": "ActionVersionWorkflowSchemaPredefinedInterfacesList" },
                "outputVariables": { "shape": "ActionVersionWorkflowSchemaOutputVariablesList" },
                "outputArtifacts": { "shape": "ActionVersionWorkflowSchemaOutputArtifactsList" }
            }
        },
        "ActionVersionWorkflowSchemaBaseSchemaString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "ActionVersionWorkflowSchemaOptionalInterfacesList": {
            "type": "list",
            "member": { "shape": "ActionVersionSchemaInterface" },
            "max": 50,
            "min": 0
        },
        "ActionVersionWorkflowSchemaOutputArtifactsList": {
            "type": "list",
            "member": { "shape": "ActionVersionSchemaOutputArtifact" },
            "max": 50,
            "min": 0
        },
        "ActionVersionWorkflowSchemaOutputVariablesList": {
            "type": "list",
            "member": { "shape": "ActionVersionSchemaOutputVariable" },
            "max": 50,
            "min": 0
        },
        "ActionVersionWorkflowSchemaPredefinedInterfacesList": {
            "type": "list",
            "member": { "shape": "ActionVersionSchemaPredefinedInterface" },
            "max": 50,
            "min": 0
        },
        "ActionVersionWorkflowSchemaRequiredInterfacesList": {
            "type": "list",
            "member": { "shape": "ActionVersionSchemaInterface" },
            "max": 50,
            "min": 0
        },
        "ActionVersionsSortBy": {
            "type": "string",
            "enum": ["VERSION_ID", "LAST_UPDATED_TIME"]
        },
        "ActionVersionsSortOrder": {
            "type": "string",
            "enum": ["ASCENDING", "DESCENDING"]
        },
        "ActionVersionsSummaries": {
            "type": "list",
            "member": { "shape": "ActionVersionsSummary" }
        },
        "ActionVersionsSummary": {
            "type": "structure",
            "required": ["organizationName", "projectName", "actionId", "status", "statusMessages"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "actionId": { "shape": "String" },
                "id": { "shape": "ActionVersionsSummaryIdString" },
                "sourceCommitSha1": { "shape": "ActionVersionsSummarySourceCommitSha1String" },
                "status": { "shape": "Status" },
                "statusMessages": { "shape": "ActionVersionStatusMessages" },
                "schema": { "shape": "ActionVersionWorkflowSchema" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "ActionVersionsSummaryIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "ActionVersionsSummarySourceCommitSha1String": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "ActivityFeedEventType": {
            "type": "string",
            "enum": [
                "PROJECT_INSERT",
                "PROJECT_MODIFY",
                "PROJECT_JOINED",
                "PROJECT_LEFT",
                "PROJECT_DELETE",
                "REPOSITORY_INSERT",
                "ISSUE_INSERT",
                "ISSUE_REASSIGNED",
                "ISSUE_STATUS_CHANGED",
                "PULLREQUEST_INSERT",
                "WORKFLOW-RUN_SUCCEEDED",
                "WORKFLOW-RUN_FAILED",
                "SOURCE-BRANCH_INSERT",
                "SOURCE-PULL-REQUEST_INSERT",
                "SOURCE-PULL-REQUEST_STATUS_MERGED",
                "COMMENT-PULL-REQUEST_INSERT",
                "COMMENT-ISSUE_INSERT"
            ]
        },
        "ActivityFeedItemStatus": {
            "type": "string",
            "enum": ["NEUTRAL", "SUCCESS", "FAILURE", "UNDETERMINED"]
        },
        "ActivityFeedParticipantType": {
            "type": "string",
            "enum": ["USER", "TEAM"]
        },
        "ActivityFeedSortBy": {
            "type": "string",
            "enum": ["MOST_RECENT"]
        },
        "AddUserToRoleMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "userId", "roleId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "userId": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "AddUserToRoleMigrationOutput": {
            "type": "structure",
            "members": {
                "friendlyArn": { "shape": "String" }
            }
        },
        "AddUserToRoleRequest": {
            "type": "structure",
            "required": ["organizationName", "id", "roleId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "AddUserToRoleRequestIdString" },
                "roleId": { "shape": "AddUserToRoleRequestRoleIdString" }
            }
        },
        "AddUserToRoleRequestIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "AddUserToRoleRequestRoleIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "AddUserToRoleResponse": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" }
            }
        },
        "AdditionalProperties": {
            "type": "list",
            "member": { "shape": "AdditionalProperty" }
        },
        "AdditionalProperty": {
            "type": "structure",
            "required": ["name", "value"],
            "members": {
                "name": { "shape": "String" },
                "value": { "shape": "String" }
            }
        },
        "AnalysisCounter": {
            "type": "structure",
            "required": ["name", "count"],
            "members": {
                "name": { "shape": "String" },
                "count": { "shape": "Integer" }
            }
        },
        "AnalysisCounters": {
            "type": "list",
            "member": { "shape": "AnalysisCounter" }
        },
        "AnalysisFindingCategory": {
            "type": "string",
            "enum": ["Security"]
        },
        "AnalysisFindingEstimate": {
            "type": "structure",
            "members": {
                "effortUnit": { "shape": "AnalysisFindingEstimateEffortUnitString" },
                "effortValue": { "shape": "AnalysisFindingEstimateEffortValueString" },
                "debtUnit": { "shape": "AnalysisFindingEstimateDebtUnitString" },
                "debtValue": { "shape": "AnalysisFindingEstimateDebtValueString" }
            }
        },
        "AnalysisFindingEstimateDebtUnitString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "AnalysisFindingEstimateDebtValueString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "AnalysisFindingEstimateEffortUnitString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "AnalysisFindingEstimateEffortValueString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "AnalysisFindingLocation": {
            "type": "structure",
            "members": {
                "physicalLocation": { "shape": "AnalysisFindingPhysicalLocation" },
                "logicalLocation": { "shape": "AnalysisFindingLogicalLocation" }
            }
        },
        "AnalysisFindingLocations": {
            "type": "list",
            "member": { "shape": "AnalysisFindingLocation" }
        },
        "AnalysisFindingLogicalLocation": {
            "type": "structure",
            "required": ["fullyQualifiedName"],
            "members": {
                "fullyQualifiedName": { "shape": "String" }
            }
        },
        "AnalysisFindingMessage": {
            "type": "structure",
            "required": ["content", "truncated"],
            "members": {
                "content": { "shape": "AnalysisFindingMessageContentString" },
                "truncated": { "shape": "Boolean" }
            }
        },
        "AnalysisFindingMessageContentString": {
            "type": "string",
            "max": 3000,
            "min": 0
        },
        "AnalysisFindingPhysicalLocation": {
            "type": "structure",
            "required": ["path"],
            "members": {
                "path": { "shape": "String" },
                "startCoordinate": { "shape": "AnalysisFindingSourceCoordinate" },
                "endCoordinate": { "shape": "AnalysisFindingSourceCoordinate" }
            }
        },
        "AnalysisFindingRange": {
            "type": "structure",
            "required": ["to", "from"],
            "members": {
                "to": { "shape": "Integer" },
                "from": { "shape": "Integer" }
            }
        },
        "AnalysisFindingRecommendation": {
            "type": "structure",
            "members": {
                "fix": { "shape": "AnalysisFindingRange" },
                "fixType": { "shape": "AnalysisFindingRecommendationFixTypeString" },
                "message": { "shape": "AnalysisFindingMessage" }
            }
        },
        "AnalysisFindingRecommendationFixTypeString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "AnalysisFindingRule": {
            "type": "structure",
            "members": {
                "ruleId": { "shape": "AnalysisFindingRuleRuleIdString" },
                "displayName": { "shape": "AnalysisFindingRuleDisplayNameString" },
                "description": { "shape": "AnalysisFindingMessage" },
                "helpUrl": { "shape": "AnalysisFindingRuleHelpUrlString" }
            }
        },
        "AnalysisFindingRuleDisplayNameString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "AnalysisFindingRuleHelpUrlString": {
            "type": "string",
            "max": 3000,
            "min": 0
        },
        "AnalysisFindingRuleRuleIdString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "AnalysisFindingScore": { "type": "float" },
        "AnalysisFindingSeverity": {
            "type": "structure",
            "required": ["originalSeverity", "mappedSeverity", "mappedSeverityValue"],
            "members": {
                "originalSeverity": { "shape": "AnalysisFindingSeverityOriginalSeverityString" },
                "mappedSeverity": { "shape": "AnalysisFindingSeverityMappedSeverityString" },
                "mappedSeverityValue": { "shape": "Integer" }
            }
        },
        "AnalysisFindingSeverityMappedSeverityString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "AnalysisFindingSeverityOriginalSeverityString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "AnalysisFindingSourceCoordinate": {
            "type": "structure",
            "required": ["lineNumber"],
            "members": {
                "lineNumber": { "shape": "Integer" },
                "columnNumber": { "shape": "Integer" }
            }
        },
        "AnalysisFindingTag": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "AnalysisFindingTags": {
            "type": "list",
            "member": { "shape": "AnalysisFindingTag" },
            "max": 1024,
            "min": 0
        },
        "AnswerInformation": {
            "type": "structure",
            "members": {
                "answerId": { "shape": "String" },
                "userInput": { "shape": "String" }
            }
        },
        "AnswerSection": {
            "type": "list",
            "member": { "shape": "AnswerInformation" }
        },
        "ArtifactNameString": {
            "type": "string",
            "pattern": "[a-zA-Z0-9_-]+"
        },
        "ArtifactPackageAllowPublish": {
            "type": "string",
            "enum": ["ALLOW", "BLOCK"]
        },
        "ArtifactPackageAllowUpstream": {
            "type": "string",
            "enum": ["ALLOW", "BLOCK", "BLOCK_INGESTION"]
        },
        "ArtifactPackageFormatString": {
            "type": "string",
            "max": 255,
            "min": 1,
            "pattern": ".*[^!#/\\s]+.*"
        },
        "ArtifactPackageNameString": {
            "type": "string",
            "max": 255,
            "min": 1,
            "pattern": ".*[^!#/\\s]+.*"
        },
        "ArtifactPackageNamespaceString": {
            "type": "string",
            "max": 255,
            "min": 1,
            "pattern": ".*[^!#/\\s]+.*"
        },
        "ArtifactPackageOriginConfiguration": {
            "type": "structure",
            "members": {
                "restrictions": { "shape": "ArtifactPackageOriginRestrictions" }
            }
        },
        "ArtifactPackageOriginRestrictions": {
            "type": "structure",
            "members": {
                "publish": { "shape": "ArtifactPackageAllowPublish" },
                "upstream": { "shape": "ArtifactPackageAllowUpstream" }
            }
        },
        "ArtifactPackageSummary": {
            "type": "structure",
            "members": {
                "name": { "shape": "ArtifactPackageNameString" },
                "lastUpdatedTime": { "shape": "String" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "format": { "shape": "ArtifactPackageFormatString" }
            }
        },
        "ArtifactPackageSummaryList": {
            "type": "list",
            "member": { "shape": "ArtifactPackageSummary" }
        },
        "ArtifactPackageVersionAsset": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "size": { "shape": "Long" },
                "hashes": { "shape": "ArtifactPackageVersionAssetHashes" }
            }
        },
        "ArtifactPackageVersionAssetHashes": {
            "type": "map",
            "key": { "shape": "String" },
            "value": { "shape": "String" }
        },
        "ArtifactPackageVersionAssets": {
            "type": "list",
            "member": { "shape": "ArtifactPackageVersionAsset" }
        },
        "ArtifactPackageVersionBatchActionSummary": {
            "type": "structure",
            "members": {
                "revision": { "shape": "ArtifactPackageVersionRevisionString" },
                "status": { "shape": "ArtifactPackageVersionStatusString" }
            }
        },
        "ArtifactPackageVersionDependencies": {
            "type": "list",
            "member": { "shape": "ArtifactPackageVersionDependency" }
        },
        "ArtifactPackageVersionDependency": {
            "type": "structure",
            "members": {
                "type": { "shape": "ArtifactPackageVersionDependencyType" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "versionRequirement": { "shape": "ArtifactPackageVersionRequirement" }
            }
        },
        "ArtifactPackageVersionDependencyType": {
            "type": "string",
            "max": 255,
            "min": 1,
            "pattern": "[^\\s!#/]+"
        },
        "ArtifactPackageVersionEntryPoint": {
            "type": "structure",
            "members": {
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "projectName": { "shape": "NameString" },
                "externalConnectionName": { "shape": "ExternalConnectionNameString" }
            }
        },
        "ArtifactPackageVersionLicense": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "url": { "shape": "String" }
            }
        },
        "ArtifactPackageVersionLicenseList": {
            "type": "list",
            "member": { "shape": "ArtifactPackageVersionLicense" }
        },
        "ArtifactPackageVersionOrigin": {
            "type": "structure",
            "members": {
                "entryPoint": { "shape": "ArtifactPackageVersionEntryPoint" },
                "originType": { "shape": "ArtifactPackageVersionOriginType" }
            }
        },
        "ArtifactPackageVersionOriginType": {
            "type": "string",
            "enum": ["INTERNAL", "EXTERNAL", "UNKNOWN"]
        },
        "ArtifactPackageVersionReadmeString": { "type": "string" },
        "ArtifactPackageVersionRequirement": {
            "type": "string",
            "pattern": "[^\\s!#/]+"
        },
        "ArtifactPackageVersionRevisionMap": {
            "type": "map",
            "key": { "shape": "ArtifactPackageVersionValueString" },
            "value": { "shape": "ArtifactPackageVersionRevisionString" }
        },
        "ArtifactPackageVersionRevisionString": {
            "type": "string",
            "max": 50,
            "min": 1,
            "pattern": "[^\\s!#/]+"
        },
        "ArtifactPackageVersionStatusString": {
            "type": "string",
            "pattern": "(Published|Unfinished|Unlisted|Archived|Disposed|Deleted)"
        },
        "ArtifactPackageVersionSummary": {
            "type": "structure",
            "members": {
                "version": { "shape": "ArtifactPackageVersionValueString" },
                "revision": { "shape": "ArtifactPackageVersionRevisionString" },
                "status": { "shape": "ArtifactPackageVersionStatusString" },
                "origin": { "shape": "ArtifactPackageVersionOrigin" }
            }
        },
        "ArtifactPackageVersionSummaryList": {
            "type": "list",
            "member": { "shape": "ArtifactPackageVersionSummary" }
        },
        "ArtifactPackageVersionValueString": {
            "type": "string",
            "max": 255,
            "min": 1,
            "pattern": "[^\\s!#/]+"
        },
        "ArtifactPackageVersionValuesList": {
            "type": "list",
            "member": { "shape": "ArtifactPackageVersionValueString" }
        },
        "ArtifactPackageVersionsBatchActionError": {
            "type": "structure",
            "members": {
                "errorCode": { "shape": "String" },
                "errorMessage": { "shape": "String" }
            }
        },
        "ArtifactPackageVersionsBatchActionOutput": {
            "type": "structure",
            "members": {
                "successfulVersions": { "shape": "ArtifactPackageVersionsSuccessfulBatchActionMap" },
                "failedVersions": { "shape": "ArtifactPackageVersionsFailedBatchActionMap" }
            }
        },
        "ArtifactPackageVersionsFailedBatchActionMap": {
            "type": "map",
            "key": { "shape": "ArtifactPackageVersionValueString" },
            "value": { "shape": "ArtifactPackageVersionsBatchActionError" }
        },
        "ArtifactPackageVersionsSuccessfulBatchActionMap": {
            "type": "map",
            "key": { "shape": "ArtifactPackageVersionValueString" },
            "value": { "shape": "ArtifactPackageVersionBatchActionSummary" }
        },
        "ArtifactRepositoryDescriptionString": {
            "type": "string",
            "max": 1000,
            "min": 0
        },
        "ArtifactRepositoryEndpointUrl": { "type": "string" },
        "ArtifactRepositoryNameString": {
            "type": "string",
            "max": 100,
            "min": 2,
            "pattern": "[A-Za-z0-9][A-Za-z0-9-_.]{1,99}"
        },
        "ArtifactRepositorySummary": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "ArtifactRepositoryNameString" },
                "description": { "shape": "ArtifactRepositoryDescriptionString" },
                "lastUpdatedTime": { "shape": "String" },
                "upstreams": { "shape": "UpstreamArtifactRepositoryList" },
                "externalConnection": { "shape": "ExternalConnectionNameString" },
                "repositoryType": { "shape": "RepositoryTypeNameString" }
            }
        },
        "ArtifactRepositorySummaryList": {
            "type": "list",
            "member": { "shape": "ArtifactRepositorySummary" }
        },
        "AssigneeId": {
            "type": "string",
            "pattern": "[0-9a-f]{10}-[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
        },
        "AssociateAwsAccountOnboardingRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "regionName", "awsAccountId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": { "shape": "NameString" },
                "regionName": { "shape": "RegionString" },
                "awsAccountId": { "shape": "AssociateAwsAccountOnboardingRequestAwsAccountIdString" },
                "description": { "shape": "AssociateAwsAccountOnboardingRequestDescriptionString" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" }
            }
        },
        "AssociateAwsAccountOnboardingRequestAwsAccountIdString": {
            "type": "string",
            "max": 12,
            "min": 12,
            "pattern": "[0-9]+"
        },
        "AssociateAwsAccountOnboardingRequestDescriptionString": {
            "type": "string",
            "max": 512,
            "min": 0
        },
        "AssociateAwsAccountOnboardingResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "name",
                "regionName",
                "awsAccountId",
                "status",
                "requesterId",
                "accountConnectionToken"
            ],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" },
                "regionName": { "shape": "RegionString" },
                "awsAccountId": { "shape": "String" },
                "status": { "shape": "AwsAccountStatus" },
                "description": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "requesterId": { "shape": "String" },
                "accountConnectionToken": { "shape": "AccountConnectionToken" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" }
            }
        },
        "AssociateAwsAccountRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "awsAccountId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": { "shape": "NameString" },
                "awsAccountId": { "shape": "AssociateAwsAccountRequestAwsAccountIdString" },
                "description": { "shape": "AssociateAwsAccountRequestDescriptionString" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" }
            }
        },
        "AssociateAwsAccountRequestAwsAccountIdString": {
            "type": "string",
            "max": 12,
            "min": 12,
            "pattern": "[0-9]+"
        },
        "AssociateAwsAccountRequestDescriptionString": {
            "type": "string",
            "max": 512,
            "min": 0
        },
        "AssociateAwsAccountResponse": {
            "type": "structure",
            "required": ["organizationName", "name", "awsAccountId", "status", "requesterId", "accountConnectionToken"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" },
                "awsAccountId": { "shape": "String" },
                "status": { "shape": "AwsAccountStatus" },
                "description": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "requesterId": { "shape": "String" },
                "accountConnectionToken": { "shape": "AccountConnectionToken" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" }
            }
        },
        "AssociateAwsAccountToEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "projectName", "environmentName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "awsAccountName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "awsAccountName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "environmentName"
                }
            }
        },
        "AssociateAwsAccountToEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "projectName", "environmentName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "awsAccountName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" }
            }
        },
        "Author": {
            "type": "structure",
            "members": {
                "datetime": { "shape": "SyntheticTimestamp_date_time" },
                "email": { "shape": "String" },
                "name": { "shape": "String" }
            }
        },
        "AwsAccount": {
            "type": "structure",
            "required": ["organizationName", "name", "awsAccountId", "status", "requesterId"],
            "members": {
                "organizationName": { "shape": "String" },
                "awsAccountName": { "shape": "String" },
                "name": { "shape": "String" },
                "awsAccountId": { "shape": "String" },
                "status": { "shape": "AwsAccountStatus" },
                "description": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "requesterId": { "shape": "String" },
                "accountConnectionToken": { "shape": "AccountConnectionToken" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" },
                "connectionId": { "shape": "String" }
            }
        },
        "AwsAccountList": {
            "type": "list",
            "member": { "shape": "AwsAccount" }
        },
        "AwsAccountOnboarding": {
            "type": "structure",
            "required": ["organizationName", "name", "awsAccountId", "regionName", "status", "requesterId"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" },
                "awsAccountId": { "shape": "String" },
                "regionName": { "shape": "RegionString" },
                "status": { "shape": "AwsAccountStatus" },
                "description": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "requesterId": { "shape": "String" },
                "accountConnectionToken": { "shape": "AccountConnectionToken" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" },
                "connectionId": { "shape": "String" }
            }
        },
        "AwsAccountOnboardingList": {
            "type": "list",
            "member": { "shape": "AwsAccountOnboarding" }
        },
        "AwsAccountRole": {
            "type": "structure",
            "required": ["organizationName", "name", "roleArn", "awsAccountName", "awsAccountId"],
            "members": {
                "organizationName": { "shape": "String" },
                "roleName": { "shape": "String" },
                "name": { "shape": "String" },
                "roleArn": { "shape": "String" },
                "awsAccountName": { "shape": "String" },
                "awsAccountId": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "AwsAccountRoleList": {
            "type": "list",
            "member": { "shape": "AwsAccountRole" }
        },
        "AwsAccountStatus": {
            "type": "string",
            "enum": ["pending", "connected", "deleted"]
        },
        "AwsAccountToEnvironmentAssociationList": {
            "type": "list",
            "member": { "shape": "AwsAccountToEnvironmentAssociationSummary" }
        },
        "AwsAccountToEnvironmentAssociationSummary": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "projectName", "environmentName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "awsAccountName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" }
            }
        },
        "BatchGetIssueErrorListMigration": {
            "type": "list",
            "member": { "shape": "BatchGetIssueErrorMigration" }
        },
        "BatchGetIssueErrorMigration": {
            "type": "structure",
            "required": ["id", "code", "message"],
            "members": {
                "id": { "shape": "String" },
                "code": { "shape": "String" },
                "message": { "shape": "String" }
            }
        },
        "BatchGetIssueInput": {
            "type": "structure",
            "required": ["identifiers", "organizationName", "projectName", "issueStoreName"],
            "members": {
                "identifiers": { "shape": "BatchGetIssueInputIdentifiersList" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" }
            }
        },
        "BatchGetIssueInputIdentifiersList": {
            "type": "list",
            "member": { "shape": "String" },
            "max": 50,
            "min": 1
        },
        "BatchGetIssueOutput": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "BatchGetIssueOutputItemsList" }
            }
        },
        "BatchGetIssueOutputItemsList": {
            "type": "list",
            "member": { "shape": "IssueObject" },
            "max": 50,
            "min": 1
        },
        "BatchGetIssueRequestMigration": {
            "type": "structure",
            "required": ["ids", "organizationName", "projectName", "issueStoreName"],
            "members": {
                "ids": {
                    "shape": "BatchGetIssueRequestMigrationIdsList",
                    "location": "querystring",
                    "locationName": "ids"
                },
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "IssueStoreNameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                }
            }
        },
        "BatchGetIssueRequestMigrationIdsList": {
            "type": "list",
            "member": { "shape": "IssueId" },
            "max": 50,
            "min": 1
        },
        "BatchGetIssueResponseMigration": {
            "type": "structure",
            "required": ["errors", "items"],
            "members": {
                "errors": { "shape": "BatchGetIssueErrorListMigration" },
                "items": { "shape": "BatchGetIssueResponseMigrationItemsList" }
            }
        },
        "BatchGetIssueResponseMigrationItemsList": {
            "type": "list",
            "member": { "shape": "IssueObjectMigration" },
            "max": 50,
            "min": 1
        },
        "BatchUpdateIssueStoreLabelsError": {
            "type": "structure",
            "required": ["id", "code", "message"],
            "members": {
                "id": { "shape": "Uuid" },
                "code": { "shape": "String" },
                "message": { "shape": "String" }
            }
        },
        "BatchUpdateIssueStoreLabelsErrorList": {
            "type": "list",
            "member": { "shape": "BatchUpdateIssueStoreLabelsError" }
        },
        "BatchUpdateIssueStoreLabelsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "items"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "items": { "shape": "BatchUpdateIssueStoreLabelsRequestItemsList" }
            }
        },
        "BatchUpdateIssueStoreLabelsRequestItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreLabelObject" },
            "max": 200,
            "min": 1
        },
        "BatchUpdateIssueStoreLabelsResponse": {
            "type": "structure",
            "required": ["errors"],
            "members": {
                "errors": { "shape": "BatchUpdateIssueStoreLabelsErrorList" },
                "items": { "shape": "BatchUpdateIssueStoreLabelsResponseItemsList" }
            }
        },
        "BatchUpdateIssueStoreLabelsResponseItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreLabelObject" },
            "max": 200,
            "min": 0
        },
        "BatchUpdateIssueStoreSavedViewsError": {
            "type": "structure",
            "required": ["id", "code", "message"],
            "members": {
                "id": { "shape": "Uuid" },
                "code": { "shape": "String" },
                "message": { "shape": "String" }
            }
        },
        "BatchUpdateIssueStoreSavedViewsErrorList": {
            "type": "list",
            "member": { "shape": "BatchUpdateIssueStoreSavedViewsError" }
        },
        "BatchUpdateIssueStoreSavedViewsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "items"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "items": { "shape": "BatchUpdateIssueStoreSavedViewsRequestItemsList" }
            }
        },
        "BatchUpdateIssueStoreSavedViewsRequestItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreSavedViewObject" },
            "max": 50,
            "min": 1
        },
        "BatchUpdateIssueStoreSavedViewsResponse": {
            "type": "structure",
            "required": ["errors"],
            "members": {
                "errors": { "shape": "BatchUpdateIssueStoreSavedViewsErrorList" },
                "items": { "shape": "BatchUpdateIssueStoreSavedViewsResponseItemsList" }
            }
        },
        "BatchUpdateIssueStoreSavedViewsResponseItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreSavedViewObject" },
            "max": 50,
            "min": 0
        },
        "BatchUpdateIssueStoreStatusesError": {
            "type": "structure",
            "required": ["id", "code", "message"],
            "members": {
                "id": { "shape": "Uuid" },
                "code": { "shape": "String" },
                "message": { "shape": "String" }
            }
        },
        "BatchUpdateIssueStoreStatusesErrorList": {
            "type": "list",
            "member": { "shape": "BatchUpdateIssueStoreStatusesError" }
        },
        "BatchUpdateIssueStoreStatusesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "items"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "items": { "shape": "BatchUpdateIssueStoreStatusesRequestItemsList" }
            }
        },
        "BatchUpdateIssueStoreStatusesRequestItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreStatusMigration" },
            "max": 50,
            "min": 1
        },
        "BatchUpdateIssueStoreStatusesResponse": {
            "type": "structure",
            "required": ["errors"],
            "members": {
                "errors": { "shape": "BatchUpdateIssueStoreStatusesErrorList" },
                "items": { "shape": "BatchUpdateIssueStoreStatusesResponseItemsList" }
            }
        },
        "BatchUpdateIssueStoreStatusesResponseItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreStatusMigration" },
            "max": 50,
            "min": 0
        },
        "BlueprintSummaries": {
            "type": "list",
            "member": { "shape": "BlueprintSummary" }
        },
        "BlueprintSummary": {
            "type": "structure",
            "required": ["name", "publisher", "publishDate", "packageUri", "author", "displayName"],
            "members": {
                "name": { "shape": "NameString" },
                "publisher": { "shape": "NameString" },
                "versionId": { "shape": "String" },
                "publishDate": { "shape": "SyntheticTimestamp_date_time" },
                "packageUri": { "shape": "String" },
                "author": { "shape": "String" },
                "displayName": { "shape": "String" },
                "license": { "shape": "String" },
                "description": { "shape": "String" },
                "keywords": { "shape": "StringList" }
            }
        },
        "Boolean": {
            "type": "boolean",
            "box": true
        },
        "BranchCoverageResult": {
            "type": "structure",
            "required": ["coveredCount", "missedCount"],
            "members": {
                "percentageCovered": { "shape": "Percentage" },
                "coveredCount": { "shape": "Integer" },
                "missedCount": { "shape": "Integer" }
            }
        },
        "BranchCoverageSuccessCriteriaResult": {
            "type": "structure",
            "members": {
                "isPassing": { "shape": "Boolean" },
                "branchCoverageCriteria": { "shape": "Percentage" },
                "branchCoverageValue": { "shape": "Percentage" }
            }
        },
        "BuildLogEventsMigration": {
            "type": "list",
            "member": { "shape": "BuildLogMigration" }
        },
        "BuildLogMigration": {
            "type": "structure",
            "members": {
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "message": { "shape": "String" }
            }
        },
        "CancelOrganizationInvitationRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "id": { "shape": "CancelOrganizationInvitationRequestIdString" }
            }
        },
        "CancelOrganizationInvitationRequestIdString": {
            "type": "string",
            "max": 180,
            "min": 32
        },
        "CancelOrganizationInvitationResponse": {
            "type": "structure",
            "required": ["organizationName", "id", "lastUpdatedTime", "inviteeEmailAddress", "status"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "status": { "shape": "InvitationStatus" }
            }
        },
        "CancelProjectInvitationRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": { "shape": "CancelProjectInvitationRequestIdString" }
            }
        },
        "CancelProjectInvitationRequestIdString": {
            "type": "string",
            "max": 180,
            "min": 32
        },
        "CancelProjectInvitationResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "lastUpdatedTime", "inviteeEmailAddress", "status"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "status": { "shape": "InvitationStatus" }
            }
        },
        "CatalogActionCategory": {
            "type": "string",
            "enum": ["BUILD", "TEST", "UTILITIES", "SECURITY", "DEPLOYMENT", "CODE_QUALITY"]
        },
        "CatalogActionSummaries": {
            "type": "list",
            "member": { "shape": "CatalogActionSummary" }
        },
        "CatalogActionSummary": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "CatalogActionSummaryNameString" },
                "description": { "shape": "CatalogActionSummaryDescriptionString" },
                "logo": { "shape": "CatalogActionSummaryLogoString" },
                "categories": { "shape": "CatalogActionSummaryCategoriesList" },
                "author": { "shape": "CatalogActionSummaryAuthorString" },
                "support": { "shape": "String" }
            }
        },
        "CatalogActionSummaryAuthorString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "CatalogActionSummaryCategoriesList": {
            "type": "list",
            "member": { "shape": "CatalogActionCategory" },
            "max": 10,
            "min": 0
        },
        "CatalogActionSummaryDescriptionString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "CatalogActionSummaryLogoString": {
            "type": "string",
            "max": 4096,
            "min": 0
        },
        "CatalogActionSummaryNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "CatalogActionVersionSchemaInterface": {
            "type": "structure",
            "required": ["name", "version"],
            "members": {
                "name": { "shape": "CatalogActionVersionSchemaInterfaceNameString" },
                "version": { "shape": "CatalogActionVersionSchemaInterfaceVersionString" }
            }
        },
        "CatalogActionVersionSchemaInterfaceNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "CatalogActionVersionSchemaInterfaceVersionString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "CatalogActionVersionSchemaOutputArtifact": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "CatalogActionVersionSchemaOutputArtifactNameString" },
                "description": { "shape": "CatalogActionVersionSchemaOutputArtifactDescriptionString" }
            }
        },
        "CatalogActionVersionSchemaOutputArtifactDescriptionString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "CatalogActionVersionSchemaOutputArtifactNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "CatalogActionVersionSchemaOutputVariable": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "CatalogActionVersionSchemaOutputVariableNameString" },
                "description": { "shape": "CatalogActionVersionSchemaOutputVariableDescriptionString" }
            }
        },
        "CatalogActionVersionSchemaOutputVariableDescriptionString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "CatalogActionVersionSchemaOutputVariableNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "CatalogActionVersionSchemaPredefinedInterface": {
            "type": "structure",
            "required": ["schemaInterface", "configuration"],
            "members": {
                "schemaInterface": { "shape": "CatalogActionVersionSchemaInterface" },
                "configuration": { "shape": "CatalogActionVersionSchemaPredefinedInterfaceConfigurationString" }
            }
        },
        "CatalogActionVersionSchemaPredefinedInterfaceConfigurationString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "CatalogActionVersionWorkflowSchema": {
            "type": "structure",
            "members": {
                "baseSchema": { "shape": "CatalogActionVersionWorkflowSchemaBaseSchemaString" },
                "optionalInterfaces": { "shape": "CatalogActionVersionWorkflowSchemaOptionalInterfacesList" },
                "requiredInterfaces": { "shape": "CatalogActionVersionWorkflowSchemaRequiredInterfacesList" },
                "predefinedInterfaces": { "shape": "CatalogActionVersionWorkflowSchemaPredefinedInterfacesList" },
                "outputVariables": { "shape": "CatalogActionVersionWorkflowSchemaOutputVariablesList" },
                "outputArtifacts": { "shape": "CatalogActionVersionWorkflowSchemaOutputArtifactsList" }
            }
        },
        "CatalogActionVersionWorkflowSchemaBaseSchemaString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "CatalogActionVersionWorkflowSchemaOptionalInterfacesList": {
            "type": "list",
            "member": { "shape": "CatalogActionVersionSchemaInterface" },
            "max": 50,
            "min": 0
        },
        "CatalogActionVersionWorkflowSchemaOutputArtifactsList": {
            "type": "list",
            "member": { "shape": "CatalogActionVersionSchemaOutputArtifact" },
            "max": 50,
            "min": 0
        },
        "CatalogActionVersionWorkflowSchemaOutputVariablesList": {
            "type": "list",
            "member": { "shape": "CatalogActionVersionSchemaOutputVariable" },
            "max": 50,
            "min": 0
        },
        "CatalogActionVersionWorkflowSchemaPredefinedInterfacesList": {
            "type": "list",
            "member": { "shape": "CatalogActionVersionSchemaPredefinedInterface" },
            "max": 50,
            "min": 0
        },
        "CatalogActionVersionWorkflowSchemaRequiredInterfacesList": {
            "type": "list",
            "member": { "shape": "CatalogActionVersionSchemaInterface" },
            "max": 50,
            "min": 0
        },
        "CatalogActionVersionsSortBy": {
            "type": "string",
            "enum": ["VERSION_ID"]
        },
        "CatalogActionVersionsSortOrder": {
            "type": "string",
            "enum": ["ASCENDING", "DESCENDING"]
        },
        "CatalogActionVersionsSummaries": {
            "type": "list",
            "member": { "shape": "CatalogActionVersionsSummary" }
        },
        "CatalogActionVersionsSummary": {
            "type": "structure",
            "required": ["actionId"],
            "members": {
                "actionId": { "shape": "String" },
                "id": { "shape": "CatalogActionVersionsSummaryIdString" },
                "schema": { "shape": "CatalogActionVersionWorkflowSchema" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "CatalogActionVersionsSummaryIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "Categories": {
            "type": "list",
            "member": { "shape": "Category" }
        },
        "Category": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "mappedSeverityCounts": { "shape": "AnalysisCounters" },
                "originalSeverityCounts": { "shape": "AnalysisCounters" }
            }
        },
        "CfnStackDeploymentTargetInfo": {
            "type": "structure",
            "members": {
                "stackId": { "shape": "String" },
                "stackName": { "shape": "String" },
                "region": { "shape": "String" }
            }
        },
        "ClientToken": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "CodeCoverageReportSummaries": {
            "type": "list",
            "member": { "shape": "CodeCoverageReportSummary" }
        },
        "CodeCoverageReportSummary": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "actionRunId",
                "repositoryName",
                "lineCoverage"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "actionRunId": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "lineCoverage": { "shape": "LineCoverageResult" },
                "lineCoverageSuccessCriteriaResult": { "shape": "LineCoverageSuccessCriteriaResult" },
                "branchCoverage": { "shape": "BranchCoverageResult" },
                "branchCoverageSuccessCriteriaResult": { "shape": "BranchCoverageSuccessCriteriaResult" }
            }
        },
        "CodeCoverageResultsFilter": {
            "type": "structure",
            "required": ["value", "key"],
            "members": {
                "value": { "shape": "String" },
                "key": { "shape": "CodeCoverageResultsFilterKey" },
                "comparisonOperator": { "shape": "CodeCoverageResultsFilterComparisonOperator" }
            }
        },
        "CodeCoverageResultsFilterComparisonOperator": {
            "type": "string",
            "enum": ["LT", "GT", "NOT_CONTAINS", "CONTAINS", "NE", "EQ", "BEGINS_WITH"]
        },
        "CodeCoverageResultsFilterKey": {
            "type": "string",
            "enum": [
                "missedBranchesCount",
                "branchCoveragePercentage",
                "missedLinesCount",
                "lineCoveragePercentage",
                "name"
            ]
        },
        "CodeCoverageResultsFilterOperation": {
            "type": "string",
            "enum": ["OR", "AND"]
        },
        "CodeCoverageResultsFilters": {
            "type": "structure",
            "members": {
                "filters": { "shape": "CodeCoverageResultsFiltersList" },
                "operation": { "shape": "CodeCoverageResultsFilterOperation" }
            }
        },
        "CodeCoverageResultsFiltersList": {
            "type": "list",
            "member": { "shape": "CodeCoverageResultsFilter" }
        },
        "CodeCoverageResultsOrderByDirection": {
            "type": "string",
            "enum": ["DESCENDING", "ASCENDING"]
        },
        "CodeCoverageResultsOrderByField": {
            "type": "structure",
            "required": ["fieldName", "direction"],
            "members": {
                "fieldName": { "shape": "CodeCoverageResultsOrderByFieldName" },
                "direction": { "shape": "CodeCoverageResultsOrderByDirection" }
            }
        },
        "CodeCoverageResultsOrderByFieldName": {
            "type": "string",
            "enum": [
                "branchCoveragePercentage",
                "coveredBranchesCount",
                "lineCoveragePercentage",
                "coveredLinesCount",
                "name"
            ]
        },
        "CodeCoverageResultsOrderByFields": {
            "type": "list",
            "member": { "shape": "CodeCoverageResultsOrderByField" },
            "max": 3,
            "min": 0
        },
        "CodeCoverageSummaryList": {
            "type": "list",
            "member": { "shape": "TrackingSummaryCodeCoverageSummary" }
        },
        "CommentAdditionalAttributes": {
            "type": "map",
            "key": { "shape": "String" },
            "value": { "shape": "String" }
        },
        "CommentContentString": {
            "type": "string",
            "max": 30720,
            "min": 0
        },
        "CommentContentType": {
            "type": "string",
            "enum": ["text/markdown"]
        },
        "CommentForIssueOutput": {
            "type": "structure",
            "required": [
                "issueId",
                "threadId",
                "creatorId",
                "commentId",
                "creationTime",
                "lastUpdatedTime",
                "content",
                "contentType",
                "deleted"
            ],
            "members": {
                "issueId": { "shape": "String" },
                "threadId": { "shape": "String" },
                "commentRepliedToId": { "shape": "String" },
                "creatorId": { "shape": "String" },
                "commentId": { "shape": "String" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "content": { "shape": "String" },
                "contentType": { "shape": "CommentContentType" },
                "deleted": { "shape": "Boolean" },
                "reactions": { "shape": "CommentReactionsMap" }
            }
        },
        "CommentReaction": { "type": "string" },
        "CommentReactionsMap": {
            "type": "map",
            "key": { "shape": "CommentReaction" },
            "value": { "shape": "CommentReactorsList" }
        },
        "CommentReactorsList": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "CommentsForIssueList": {
            "type": "list",
            "member": { "shape": "CommentForIssueOutput" }
        },
        "CommentsOrderForIssue": {
            "type": "string",
            "enum": ["CREATION_TIME_ASCENDING", "CREATION_TIME_DESCENDING"]
        },
        "ComputeFleetArchitecture": {
            "type": "string",
            "enum": ["AMD64"]
        },
        "ComputeFleetExecutionModel": {
            "type": "string",
            "enum": ["CONTAINER", "NON_CONTAINER"]
        },
        "ComputeFleetNameString": {
            "type": "string",
            "max": 54,
            "min": 2,
            "pattern": ".*[A-Za-z0-9][A-Za-z0-9\\-_]{1,53}.*"
        },
        "ComputeFleetOS": {
            "type": "string",
            "enum": ["LINUX", "WINDOWS"]
        },
        "ComputeFleetScalingMode": {
            "type": "string",
            "enum": ["AUTO", "DISABLED"]
        },
        "ComputeFleetSettings": {
            "type": "structure",
            "required": ["architecture", "executionModel", "os", "size"],
            "members": {
                "architecture": { "shape": "ComputeFleetArchitecture" },
                "executionModel": { "shape": "ComputeFleetExecutionModel" },
                "os": { "shape": "ComputeFleetOS" },
                "size": { "shape": "ComputeFleetSize" }
            }
        },
        "ComputeFleetSettingsMigration": {
            "type": "structure",
            "members": {
                "architecture": { "shape": "FleetArchitectureMigration" },
                "os": { "shape": "FleetOSMigration" },
                "executionModel": { "shape": "FleetExecutionModelMigration" },
                "vcpu": { "shape": "Integer" },
                "memory": { "shape": "Integer" },
                "disk": { "shape": "Integer" }
            }
        },
        "ComputeFleetSize": {
            "type": "string",
            "enum": ["LARGE", "XLARGE", "2XLARGE"]
        },
        "ComputeFleetStatus": {
            "type": "string",
            "enum": ["CREATING", "UPDATING", "DELETING", "CREATE_FAILED", "ACTIVE", "INACTIVE", "UNKNOWN"]
        },
        "ComputeFleetSummaries": {
            "type": "list",
            "member": { "shape": "ComputeFleetSummary" }
        },
        "ComputeFleetSummariesMigration": {
            "type": "list",
            "member": { "shape": "ComputeFleetSummaryMigration" }
        },
        "ComputeFleetSummary": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ComputeFleetNameString" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "settings": { "shape": "ComputeFleetSettings" },
                "baseCapacity": { "shape": "Integer" },
                "scalingMode": { "shape": "ComputeFleetScalingMode" },
                "status": { "shape": "ComputeFleetStatus" }
            }
        },
        "ComputeFleetSummaryMigration": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "computeSettings": { "shape": "ComputeFleetSettingsMigration" },
                "resolvedInstanceType": { "shape": "String" },
                "desiredCapacity": { "shape": "Integer" },
                "overflowBehavior": { "shape": "FleetOverflowBehaviorMigration" },
                "status": { "shape": "String" },
                "statusContext": { "shape": "FleetStatusContextMigration" },
                "id": { "shape": "String" }
            }
        },
        "ConflictException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "resourceId": { "shape": "ResourceMap" },
                "resourceType": { "shape": "ResourceType" }
            },
            "error": {
                "httpStatusCode": 409,
                "senderFault": true
            },
            "exception": true
        },
        "ConnectAwsAccountRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "awsAccountId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "awsAccountName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "awsAccountId": { "shape": "ConnectAwsAccountRequestAwsAccountIdString" },
                "description": { "shape": "ConnectAwsAccountRequestDescriptionString" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" }
            }
        },
        "ConnectAwsAccountRequestAwsAccountIdString": {
            "type": "string",
            "max": 12,
            "min": 12,
            "pattern": "[0-9]+"
        },
        "ConnectAwsAccountRequestDescriptionString": {
            "type": "string",
            "max": 512,
            "min": 0
        },
        "ConnectAwsAccountResponse": {
            "type": "structure",
            "required": ["organizationName", "name", "awsAccountId", "status", "requesterId", "accountConnectionToken"],
            "members": {
                "organizationName": { "shape": "String" },
                "awsAccountName": { "shape": "String" },
                "name": { "shape": "String" },
                "awsAccountId": { "shape": "String" },
                "status": { "shape": "AwsAccountStatus" },
                "description": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "requesterId": { "shape": "String" },
                "accountConnectionToken": { "shape": "AccountConnectionToken" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" }
            }
        },
        "ConnectionFeature": {
            "type": "structure",
            "required": ["type"],
            "members": {
                "type": { "shape": "ConnectionFeatureType" },
                "details": { "shape": "String" }
            }
        },
        "ConnectionFeatureType": {
            "type": "string",
            "enum": ["ALLOW_BILLING"]
        },
        "ConnectionFeatures": {
            "type": "list",
            "member": { "shape": "ConnectionFeature" }
        },
        "ConnectionInstallationToken": {
            "type": "string",
            "min": 1,
            "sensitive": true
        },
        "ConnectionStatus": {
            "type": "string",
            "enum": ["pending", "connected", "disconnected"]
        },
        "ConnectionSummaries": {
            "type": "list",
            "member": { "shape": "ConnectionSummary" }
        },
        "ConnectionSummary": {
            "type": "structure",
            "required": [
                "organizationName",
                "name",
                "creatorId",
                "providerId",
                "providerData",
                "status",
                "lastUpdatedTime"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "creatorId": { "shape": "String" },
                "providerId": { "shape": "ProviderIdString" },
                "providerData": { "shape": "ProviderData" },
                "status": { "shape": "ConnectionStatus" },
                "statusMessage": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "ContributorIds": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "CoverageLineDetail": {
            "type": "structure",
            "required": ["lineNumber", "coverage", "isBranch"],
            "members": {
                "lineNumber": { "shape": "Integer" },
                "coverage": { "shape": "CoverageStatus" },
                "isBranch": { "shape": "IsBranch" }
            }
        },
        "CoverageLineDetails": {
            "type": "list",
            "member": { "shape": "CoverageLineDetail" }
        },
        "CoverageResult": {
            "type": "structure",
            "required": ["coveredCount", "missedCount"],
            "members": {
                "percentageCovered": { "shape": "Percentage" },
                "coveredCount": { "shape": "Integer" },
                "missedCount": { "shape": "Integer" }
            }
        },
        "CoverageStatus": {
            "type": "string",
            "enum": ["COVERED", "PARTIAL", "NOT_COVERED"]
        },
        "CreateAccessTokenRequest": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "AccessTokenName" },
                "expiresTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "CreateAccessTokenResponse": {
            "type": "structure",
            "required": ["secret"],
            "members": {
                "secret": { "shape": "AccessTokenSecret" },
                "name": { "shape": "AccessTokenName" },
                "expiresTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "CreateArtifactRepositoryInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ArtifactRepositoryNameString" },
                "description": { "shape": "ArtifactRepositoryDescriptionString" },
                "upstreams": { "shape": "UpstreamArtifactRepositoryList" }
            }
        },
        "CreateArtifactRepositoryOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "CreateBarInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": { "shape": "NameString" }
            }
        },
        "CreateBarOutput": {
            "type": "structure",
            "members": {
                "versionId": { "shape": "String" }
            }
        },
        "CreateBlueprintUploadUrlInput": {
            "type": "structure",
            "required": ["organizationName", "publisher", "name", "packageSignature", "versionId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "publisher": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "packageSignature": { "shape": "String" },
                "versionId": { "shape": "CreateBlueprintUploadUrlInputVersionIdString" }
            }
        },
        "CreateBlueprintUploadUrlInputVersionIdString": {
            "type": "string",
            "max": 100,
            "min": 3,
            "pattern": "([\\dvx*]+(?:[-.](?:[\\dx*]+|preview))*)"
        },
        "CreateBlueprintUploadUrlOutput": {
            "type": "structure",
            "members": {
                "uploadUrl": { "shape": "String" },
                "publishingJobId": { "shape": "String" }
            }
        },
        "CreateCommentForIssueInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueId", "content", "contentType"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueId": { "shape": "String" },
                "commentRepliedToId": { "shape": "String" },
                "content": { "shape": "CreateCommentForIssueInputContentString" },
                "contentType": { "shape": "CommentContentType" }
            }
        },
        "CreateCommentForIssueInputContentString": {
            "type": "string",
            "max": 30720,
            "min": 1
        },
        "CreateCommentForIssueOutput": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "version": { "shape": "String" }
            }
        },
        "CreateComputeFleetMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "desiredCapacity"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "computeSettings": { "shape": "ComputeFleetSettingsMigration" },
                "desiredCapacity": { "shape": "CreateComputeFleetMigrationInputDesiredCapacityInteger" },
                "overflowBehavior": { "shape": "FleetOverflowBehaviorMigration" }
            }
        },
        "CreateComputeFleetMigrationInputDesiredCapacityInteger": {
            "type": "integer",
            "box": true,
            "max": 20,
            "min": 0
        },
        "CreateComputeFleetMigrationOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" },
                "id": { "shape": "String" }
            }
        },
        "CreateComputeFleetRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "settings", "baseCapacity"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": { "shape": "ComputeFleetNameString" },
                "settings": { "shape": "ComputeFleetSettings" },
                "baseCapacity": { "shape": "CreateComputeFleetRequestBaseCapacityInteger" },
                "scalingMode": { "shape": "ComputeFleetScalingMode" }
            }
        },
        "CreateComputeFleetRequestBaseCapacityInteger": {
            "type": "integer",
            "box": true,
            "max": 20,
            "min": 0
        },
        "CreateComputeFleetResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "settings", "baseCapacity"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ComputeFleetNameString" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "settings": { "shape": "ComputeFleetSettings" },
                "baseCapacity": { "shape": "Integer" },
                "scalingMode": { "shape": "ComputeFleetScalingMode" },
                "status": { "shape": "ComputeFleetStatus" }
            }
        },
        "CreateConnectionRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "providerId", "code"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "providerId": {
                    "shape": "ProviderIdString",
                    "location": "uri",
                    "locationName": "providerId"
                },
                "code": { "shape": "ConnectionInstallationToken" }
            }
        },
        "CreateConnectionResponse": {
            "type": "structure",
            "members": {
                "providerId": { "shape": "ProviderIdString" },
                "name": { "shape": "NameString" }
            }
        },
        "CreateDevEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "instanceType", "persistentStorage"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "repositories": { "shape": "RepositoriesInput" },
                "clientToken": { "shape": "ClientToken" },
                "alias": { "shape": "CreateDevEnvironmentRequestAliasString" },
                "ides": { "shape": "IdeConfigurationList" },
                "instanceType": { "shape": "InstanceType" },
                "inactivityTimeoutMinutes": { "shape": "InactivityTimeoutMinutes" },
                "persistentStorage": { "shape": "PersistentStorageConfiguration" }
            }
        },
        "CreateDevEnvironmentRequestAliasString": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "CreateDevEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "Uuid" }
            }
        },
        "CreateDummyDataInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": { "shape": "NameString" },
                "someHeaderProp": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "x-some-header-prop"
                },
                "somePrefixHeaders": {
                    "shape": "StringMap",
                    "location": "headers",
                    "locationName": "X-Foo-"
                }
            }
        },
        "CreateDummyDataOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "version": { "shape": "String" },
                "someHeaderProp": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "x-some-header-prop"
                },
                "somePrefixHeaders": {
                    "shape": "StringMap",
                    "location": "headers",
                    "locationName": "X-Foo-"
                },
                "responseCode": {
                    "shape": "Integer",
                    "location": "statusCode"
                }
            }
        },
        "CreateEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": { "shape": "NameString" },
                "description": { "shape": "CreateEnvironmentRequestDescriptionString" },
                "environmentType": { "shape": "EnvironmentType" }
            }
        },
        "CreateEnvironmentRequestDescriptionString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "CreateEnvironmentResponse": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "description": { "shape": "String" },
                "environmentType": { "shape": "EnvironmentType" }
            }
        },
        "CreateExtensionInstallationRequest": {
            "type": "structure",
            "required": ["organizationName", "extensionId", "extensionVersion"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "extensionId": {
                    "shape": "ExtensionIdString",
                    "location": "uri",
                    "locationName": "extensionId"
                },
                "extensionVersion": {
                    "shape": "ExtensionVersionString",
                    "location": "querystring",
                    "locationName": "extensionVersion"
                }
            }
        },
        "CreateExtensionInstallationResponse": {
            "type": "structure",
            "members": {
                "temp": { "shape": "String" }
            }
        },
        "CreateExternalArtifactRepositoryInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "externalConnection"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ArtifactRepositoryNameString" },
                "description": { "shape": "ArtifactRepositoryDescriptionString" },
                "externalConnection": { "shape": "ExternalConnectionNameString" }
            }
        },
        "CreateIssueCommentReactionRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueId", "commentId", "reactionValue"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "issueId"
                },
                "commentId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "commentId"
                },
                "reactionValue": { "shape": "CreateIssueCommentReactionRequestReactionValueString" }
            }
        },
        "CreateIssueCommentReactionRequestReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "CreateIssueCommentReactionResponse": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueId": { "shape": "NameString" },
                "commentId": { "shape": "String" },
                "reactionValue": { "shape": "CreateIssueCommentReactionResponseReactionValueString" },
                "id": { "shape": "String" }
            }
        },
        "CreateIssueCommentReactionResponseReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "CreateIssueInput": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "issueStoreName",
                "title",
                "statusId",
                "description",
                "archived"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" },
                "title": { "shape": "CreateIssueInputTitleString" },
                "statusId": { "shape": "String" },
                "description": { "shape": "CreateIssueInputDescriptionString" },
                "archived": { "shape": "Boolean" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIds" },
                "priority": { "shape": "IssuePriority" },
                "labelIds": { "shape": "IssueLabelIds" },
                "estimate": { "shape": "Estimate" },
                "customFields": { "shape": "CreateIssueInputCustomFieldsList" }
            }
        },
        "CreateIssueInputCustomFieldsList": {
            "type": "list",
            "member": { "shape": "IssueCustomField" },
            "max": 50,
            "min": 0
        },
        "CreateIssueInputDescriptionString": {
            "type": "string",
            "max": 200000,
            "min": 0
        },
        "CreateIssueInputTitleString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "CreateIssueOutput": {
            "type": "structure",
            "members": {
                "changeStatus": { "shape": "String" },
                "identifier": { "shape": "String" },
                "shortId": { "shape": "String" }
            }
        },
        "CreateIssueRequestMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "title", "statusId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "IssueStoreNameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "title": { "shape": "CreateIssueRequestMigrationTitleString" },
                "statusId": { "shape": "Uuid" },
                "description": { "shape": "CreateIssueRequestMigrationDescriptionString" },
                "archived": { "shape": "Boolean" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIdListMigration" },
                "priority": { "shape": "IssuePriorityMigration" },
                "labelIds": { "shape": "IssueLabelIdListMigration" },
                "estimate": { "shape": "EstimateMigration" },
                "customFields": { "shape": "IssueCustomFieldsMigration" }
            }
        },
        "CreateIssueRequestMigrationDescriptionString": {
            "type": "string",
            "max": 32767,
            "min": 0
        },
        "CreateIssueRequestMigrationTitleString": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "CreateIssueResponseMigration": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "issueStoreName",
                "title",
                "versionId",
                "statusId",
                "description",
                "issueStoreId",
                "archived",
                "createdTime",
                "createdBy"
            ],
            "members": {
                "id": { "shape": "IssueId" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "IssueStoreNameString" },
                "title": { "shape": "String" },
                "versionId": { "shape": "Integer" },
                "statusId": { "shape": "String" },
                "description": { "shape": "String" },
                "issueStoreId": { "shape": "String" },
                "archived": { "shape": "Boolean" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "createdBy": { "shape": "String" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "updatedBy": { "shape": "String" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIdListMigration" },
                "priority": { "shape": "IssuePriorityMigration" },
                "labelIds": { "shape": "IssueLabelIdListMigration" },
                "estimate": { "shape": "EstimateMigration" },
                "customFields": { "shape": "IssueCustomFieldsMigration" }
            }
        },
        "CreateIssueStoreLabelRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "name": { "shape": "CreateIssueStoreLabelRequestNameString" },
                "labelColor": { "shape": "IssueStoreLabelColor" }
            }
        },
        "CreateIssueStoreLabelRequestNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "CreateIssueStoreLabelResponse": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "issueStoreName", "name", "labelColor"],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "IssueStoreNameString" },
                "name": { "shape": "NameString" },
                "labelColor": { "shape": "IssueStoreLabelColor" }
            }
        },
        "CreateIssueStoreSavedViewRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "name", "query"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "name": { "shape": "CreateIssueStoreSavedViewRequestNameString" },
                "query": { "shape": "SavedViewQueryString" }
            }
        },
        "CreateIssueStoreSavedViewRequestNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "CreateIssueStoreSavedViewResponse": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "issueStoreName", "name", "query"],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "IssueStoreNameString" },
                "name": { "shape": "NameString" },
                "query": { "shape": "SavedViewQueryString" }
            }
        },
        "CreateIssueStoreStatusRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "name", "highLevelStatus"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "name": { "shape": "CreateIssueStoreStatusRequestNameString" },
                "highLevelStatus": { "shape": "IssueStoreHighLevelStatusMigration" },
                "order": { "shape": "Integer" },
                "active": { "shape": "Boolean" }
            }
        },
        "CreateIssueStoreStatusRequestNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "CreateIssueStoreStatusResponse": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "issueStoreName",
                "name",
                "highLevelStatus",
                "order",
                "active"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "IssueStoreNameString" },
                "name": { "shape": "String" },
                "highLevelStatus": { "shape": "IssueStoreHighLevelStatusMigration" },
                "order": { "shape": "Integer" },
                "active": { "shape": "Boolean" }
            }
        },
        "CreateLinkRequest": {
            "type": "structure",
            "required": ["organizationName", "source", "destination", "linkType"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "source": { "shape": "LinkComponent" },
                "destination": { "shape": "LinkComponent" },
                "linkType": { "shape": "LinkType" }
            }
        },
        "CreateLinkResponse": {
            "type": "structure",
            "required": ["linkId"],
            "members": {
                "linkId": { "shape": "LinkId" }
            }
        },
        "CreateNotificationChannelRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "details"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "alias": { "shape": "NameString" },
                "details": { "shape": "NotificationChannelDetails" }
            }
        },
        "CreateNotificationChannelResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "version": { "shape": "String" }
            }
        },
        "CreateNotificationClientDetails": {
            "type": "structure",
            "members": {
                "slack": { "shape": "CreateNotificationClientSlackDetails" }
            }
        },
        "CreateNotificationClientRequest": {
            "type": "structure",
            "required": ["organizationName", "details"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "details": { "shape": "CreateNotificationClientDetails" }
            }
        },
        "CreateNotificationClientResponse": {
            "type": "structure",
            "required": ["organizationName", "id", "type", "details"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "NameString" },
                "type": { "shape": "NotificationClientType" },
                "details": { "shape": "NotificationClientDetails" }
            }
        },
        "CreateNotificationClientSlackDetails": {
            "type": "structure",
            "required": ["oauthParameters"],
            "members": {
                "oauthParameters": { "shape": "OAuthParameters" }
            }
        },
        "CreateOnboardingInput": {
            "type": "structure",
            "required": ["organizationName", "submitted", "dismissed", "nextQuestion", "sections", "title"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "onboardingId": { "shape": "String" },
                "submitted": { "shape": "Boolean" },
                "dismissed": { "shape": "Boolean" },
                "nextQuestion": { "shape": "NextQuestionString" },
                "sections": { "shape": "QuestionSection" },
                "title": { "shape": "String" }
            }
        },
        "CreateOrganizationRequest": {
            "type": "structure",
            "required": ["name", "regionName", "displayName"],
            "members": {
                "name": { "shape": "NameString" },
                "regionName": { "shape": "RegionString" },
                "displayName": { "shape": "CreateOrganizationRequestDisplayNameString" },
                "description": { "shape": "CreateOrganizationRequestDescriptionString" }
            }
        },
        "CreateOrganizationRequestDescriptionString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "CreateOrganizationRequestDisplayNameString": {
            "type": "string",
            "max": 200,
            "min": 1
        },
        "CreateOrganizationResponse": {
            "type": "structure",
            "members": {
                "name": { "shape": "NameString" },
                "regionName": { "shape": "RegionString" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" },
                "versionId": { "shape": "String" },
                "id": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "field no longer in Rococo recommended schema"
                }
            }
        },
        "CreateProjectRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "displayName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": { "shape": "NameString" },
                "displayName": { "shape": "ProjectDisplayName" },
                "description": { "shape": "ProjectDescription" },
                "templateArn": { "shape": "CreateProjectRequestTemplateArnString" }
            }
        },
        "CreateProjectRequestTemplateArnString": {
            "type": "string",
            "min": 1
        },
        "CreateProjectResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" },
                "versionId": { "shape": "String" },
                "id": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "field no longer in Rococo recommended schema"
                }
            }
        },
        "CreatePullRequestCommentInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "pullRequestId", "content", "contentType"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "pullRequestId": { "shape": "String" },
                "commentRepliedToId": { "shape": "String" },
                "content": { "shape": "CreatePullRequestCommentInputContentString" },
                "contentType": { "shape": "CommentContentType" },
                "additionalAttributes": { "shape": "CommentAdditionalAttributes" }
            }
        },
        "CreatePullRequestCommentInputContentString": {
            "type": "string",
            "max": 30720,
            "min": 1
        },
        "CreatePullRequestCommentOutput": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "version": { "shape": "String" }
            }
        },
        "CreatePullRequestCommentReactionRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "pullRequestId", "commentId", "reactionValue"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "pullRequestId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "pullRequestId"
                },
                "commentId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "commentId"
                },
                "reactionValue": { "shape": "CreatePullRequestCommentReactionRequestReactionValueString" }
            }
        },
        "CreatePullRequestCommentReactionRequestReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "CreatePullRequestCommentReactionResponse": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "pullRequestId": { "shape": "NameString" },
                "commentId": { "shape": "String" },
                "reactionValue": { "shape": "CreatePullRequestCommentReactionResponseReactionValueString" },
                "id": { "shape": "String" }
            }
        },
        "CreatePullRequestCommentReactionResponseReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "CreatePullRequestRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "title": { "shape": "PullRequestTitle" },
                "description": { "shape": "PullRequestDescriptionString" },
                "coAuthorIds": { "shape": "PullRequestContributorIds" },
                "reviewers": { "shape": "PullRequestReviewersList" },
                "sourceBranchName": { "shape": "SourceRepositoryBranchString" },
                "destinationBranchName": { "shape": "SourceRepositoryBranchString" }
            }
        },
        "CreatePullRequestResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "title": { "shape": "PullRequestTitle" },
                "description": { "shape": "PullRequestDescriptionString" },
                "authorId": { "shape": "PullRequestContributorId" },
                "coAuthorIds": { "shape": "PullRequestContributorIds" },
                "reviewers": { "shape": "PullRequestReviewersList" },
                "sourceBranchName": { "shape": "SourceRepositoryBranchString" },
                "destinationBranchName": { "shape": "SourceRepositoryBranchString" },
                "number": { "shape": "PullRequestNumber" }
            }
        },
        "CreateSecretMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "secretValue"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "description": { "shape": "String" },
                "secretValue": { "shape": "SecretValueString" }
            }
        },
        "CreateSecretMigrationOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" },
                "referenceId": { "shape": "String" }
            }
        },
        "CreateSecretRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "value"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": { "shape": "SecretNameString" },
                "description": { "shape": "SecretDescription" },
                "value": { "shape": "SecretValueString" },
                "environmentSecretOverrides": { "shape": "CreateSecretRequestEnvironmentSecretOverridesList" }
            }
        },
        "CreateSecretRequestEnvironmentSecretOverridesList": {
            "type": "list",
            "member": { "shape": "EnvironmentSecretOverride" },
            "max": 5,
            "min": 0
        },
        "CreateSecretResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "SecretNameString" },
                "description": { "shape": "SecretDescription" },
                "referenceId": { "shape": "String" },
                "environmentSecretOverridesMetadataList": {
                    "shape": "CreateSecretResponseEnvironmentSecretOverridesMetadataListList"
                }
            }
        },
        "CreateSecretResponseEnvironmentSecretOverridesMetadataListList": {
            "type": "list",
            "member": { "shape": "EnvironmentSecretOverrideMetadata" },
            "max": 5,
            "min": 0
        },
        "CreateSessionRequest": {
            "type": "structure",
            "members": {
                "parameters": { "shape": "LoginQueryParametersMap" },
                "callbackRedirectUri": { "shape": "String" }
            }
        },
        "CreateSessionResponse": {
            "type": "structure",
            "members": {
                "redirectLocation": { "shape": "String" },
                "userId": { "shape": "String" }
            }
        },
        "CreateSourceBranchInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "branchName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" },
                "commitSpecifier": { "shape": "String" }
            }
        },
        "CreateSourceBranchOutput": {
            "type": "structure",
            "members": {
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" },
                "commitId": { "shape": "String" }
            }
        },
        "CreateSourceCommitInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "branchName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" },
                "parentCommitId": { "shape": "String" },
                "authorName": { "shape": "String" },
                "email": { "shape": "String" },
                "commitMessage": { "shape": "String" },
                "keepEmptyFolders": { "shape": "Boolean" },
                "putFiles": { "shape": "SourceCommitFilesToPutList" },
                "deleteFiles": { "shape": "SourceCommitFilesToDeleteList" },
                "setFileModes": { "shape": "SourceCommitFileModesToSetList" }
            }
        },
        "CreateSourceCommitOutput": {
            "type": "structure",
            "members": {
                "commitId": { "shape": "String" },
                "treeId": { "shape": "String" },
                "filesAdded": { "shape": "SourceCommitFilesList" },
                "filesUpdated": { "shape": "SourceCommitFilesList" },
                "filesDeleted": { "shape": "SourceCommitFilesList" }
            }
        },
        "CreateSourcePullRequestInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "SourceRepositoryNameString" },
                "title": { "shape": "SourcePullRequestTitle" },
                "description": { "shape": "SourcePullRequestDescription" },
                "authorId": { "shape": "SourcePullRequestContributorId" },
                "coAuthorIds": { "shape": "SourcePullRequestContributorIds" },
                "reviewers": { "shape": "PullRequestReviewers" },
                "sourceBranchReference": { "shape": "SourceRepositoryBranchString" },
                "destinationBranchReference": { "shape": "SourceRepositoryBranchString" }
            }
        },
        "CreateSourcePullRequestOutput": {
            "type": "structure",
            "members": {
                "number": { "shape": "SourcePullRequestNumber" }
            }
        },
        "CreateSourcePullRequestToJiraIssueLinkInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber", "issueId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "issueId": { "shape": "String" }
            }
        },
        "CreateSourcePullRequestToJiraIssueLinkOutput": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "id": { "shape": "String" }
            }
        },
        "CreateSourceReferencePolicyRequest": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "sourceRepositoryName",
                "referenceType",
                "prefixPattern",
                "deniedActions"
            ],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "referenceType": { "shape": "CreateSourceReferencePolicyRequestReferenceTypeString" },
                "prefixPattern": { "shape": "CreateSourceReferencePolicyRequestPrefixPatternString" },
                "deniedActions": { "shape": "DeniedActionsList" },
                "excludedUsers": { "shape": "ExcludedUsersList" }
            }
        },
        "CreateSourceReferencePolicyRequestPrefixPatternString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "CreateSourceReferencePolicyRequestReferenceTypeString": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "CreateSourceReferencePolicyResponse": {
            "type": "structure",
            "members": {
                "referencePolicy": { "shape": "SourceReferencePolicySummary" }
            }
        },
        "CreateSourceRepositoryAutoInitializeInput": {
            "type": "structure",
            "members": {
                "repositoryTemplateType": { "shape": "String" },
                "readmeType": { "shape": "String" },
                "gitIgnoreType": { "shape": "String" }
            }
        },
        "CreateSourceRepositoryAutoInitializeOutput": {
            "type": "structure",
            "members": {
                "repositoryTemplateType": { "shape": "String" },
                "readmeType": { "shape": "String" },
                "gitIgnoreType": { "shape": "String" }
            }
        },
        "CreateSourceRepositoryBranchRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "name": {
                    "shape": "SourceRepositoryBranchString",
                    "location": "uri",
                    "locationName": "name"
                },
                "headCommitId": { "shape": "String" }
            }
        },
        "CreateSourceRepositoryBranchResponse": {
            "type": "structure",
            "members": {
                "ref": { "shape": "SourceRepositoryBranchRefString" },
                "name": { "shape": "SourceRepositoryBranchString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "headCommitId": { "shape": "String" }
            }
        },
        "CreateSourceRepositoryInputMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "SourceRepositoryNameStringMigration" },
                "description": { "shape": "SourceRepositoryDescriptionStringMigration" },
                "defaultBranch": { "shape": "SourceRepositoryBranchStringMigration" },
                "autoInitialize": { "shape": "SourceAutoInitializeInputMigration" }
            }
        },
        "CreateSourceRepositoryOutputMigration": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" },
                "id": { "shape": "String" }
            }
        },
        "CreateSourceRepositoryRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "description": { "shape": "SourceRepositoryDescriptionString" },
                "defaultBranchRef": { "shape": "SourceRepositoryBranchRefString" },
                "autoInitialize": { "shape": "CreateSourceRepositoryAutoInitializeInput" }
            }
        },
        "CreateSourceRepositoryResponse": {
            "type": "structure",
            "required": ["id", "name"],
            "members": {
                "id": { "shape": "SourceRepositoryIdString" },
                "name": { "shape": "SourceRepositoryNameString" },
                "description": { "shape": "SourceRepositoryDescriptionString" },
                "defaultBranchRef": { "shape": "SourceRepositoryBranchRefString" },
                "autoInitialize": { "shape": "CreateSourceRepositoryAutoInitializeOutput" }
            }
        },
        "CreateUserDetailsRequest": {
            "type": "structure",
            "required": ["userName", "id"],
            "members": {
                "userName": { "shape": "CreateUserDetailsRequestUserNameString" },
                "id": { "shape": "CreateUserDetailsRequestIdString" }
            }
        },
        "CreateUserDetailsRequestIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "CreateUserDetailsRequestUserNameString": {
            "type": "string",
            "max": 100,
            "min": 3,
            "pattern": "[a-zA-Z0-9]{3,100}"
        },
        "CreateUserDetailsResponse": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "DeleteAccessTokenRequest": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "id": {
                    "shape": "AccessTokenId",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "DeleteAccessTokenResponse": {
            "type": "structure",
            "members": {
                "deleted": { "shape": "Boolean" }
            }
        },
        "DeleteArtifactPackageVersionsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "format", "versions"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "versions": { "shape": "ArtifactPackageVersionValuesList" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "expectedStatus": { "shape": "ArtifactPackageVersionStatusString" }
            }
        },
        "DeleteArtifactRepositoryInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ArtifactRepositoryNameString" }
            }
        },
        "DeleteArtifactRepositoryOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "DeleteAwsAccountRequest": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "DeleteAwsAccountResponse": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" }
            }
        },
        "DeleteCommentContentForIssueInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueId", "commentId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueId": { "shape": "String" },
                "commentId": { "shape": "String" }
            }
        },
        "DeleteCommentContentForIssueOutput": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "version": { "shape": "String" }
            }
        },
        "DeleteComputeFleetMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "DeleteComputeFleetMigrationOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "DeleteComputeFleetRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "ComputeFleetNameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "DeleteComputeFleetResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ComputeFleetNameString" }
            }
        },
        "DeleteConnectionRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "providerId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "providerId": {
                    "shape": "ProviderIdString",
                    "location": "uri",
                    "locationName": "providerId"
                }
            }
        },
        "DeleteConnectionResponse": {
            "type": "structure",
            "members": {
                "temp": { "shape": "String" }
            }
        },
        "DeleteDevEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "DeleteDevEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "Uuid" }
            }
        },
        "DeleteDummyDataInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "version": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "version"
                }
            }
        },
        "DeleteDummyDataOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "version": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "version"
                }
            }
        },
        "DeleteEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "DeleteEnvironmentResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "DeleteExtensionInstallationRequest": {
            "type": "structure",
            "required": ["organizationName", "extensionId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "extensionId": {
                    "shape": "ExtensionIdString",
                    "location": "uri",
                    "locationName": "extensionId"
                }
            }
        },
        "DeleteExtensionInstallationResponse": {
            "type": "structure",
            "members": {
                "temp": { "shape": "String" }
            }
        },
        "DeleteIssueCommentReactionRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueId", "commentId", "reactionId", "reactionValue"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "issueId"
                },
                "commentId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "commentId"
                },
                "reactionId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "reactionId"
                },
                "reactionValue": { "shape": "DeleteIssueCommentReactionRequestReactionValueString" }
            }
        },
        "DeleteIssueCommentReactionRequestReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "DeleteIssueCommentReactionResponse": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueId": { "shape": "NameString" },
                "commentId": { "shape": "String" },
                "reactionValue": { "shape": "DeleteIssueCommentReactionResponseReactionValueString" },
                "id": { "shape": "String" }
            }
        },
        "DeleteIssueCommentReactionResponseReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "DeleteIssueStoreSavedViewRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "DeleteIssueStoreSavedViewResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" }
            }
        },
        "DeleteLinkRequest": {
            "type": "structure",
            "required": ["organizationName", "linkId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "linkId": { "shape": "LinkId" }
            }
        },
        "DeleteLinkResponse": {
            "type": "structure",
            "required": ["linkId"],
            "members": {
                "linkId": { "shape": "LinkId" }
            }
        },
        "DeleteNotificationChannelRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "DeleteNotificationChannelResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "String" }
            }
        },
        "DeleteNotificationClientRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "id": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "DeleteNotificationClientResponse": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "NameString" }
            }
        },
        "DeleteOrganizationRequest": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "NameString" },
                "versionId": { "shape": "String" }
            }
        },
        "DeleteOrganizationResponse": {
            "type": "structure",
            "members": {
                "versionId": { "shape": "String" }
            }
        },
        "DeleteProjectRequest": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "versionId": { "shape": "String" }
            }
        },
        "DeleteProjectResponse": {
            "type": "structure",
            "members": {
                "versionId": { "shape": "String" }
            }
        },
        "DeletePullRequestCommentContentInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "pullRequestId", "commentId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "pullRequestId": { "shape": "String" },
                "commentId": { "shape": "String" }
            }
        },
        "DeletePullRequestCommentContentOutput": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "version": { "shape": "String" }
            }
        },
        "DeletePullRequestCommentReactionRequest": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "pullRequestId",
                "commentId",
                "reactionId",
                "reactionValue"
            ],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "pullRequestId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "pullRequestId"
                },
                "commentId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "commentId"
                },
                "reactionId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "reactionId"
                },
                "reactionValue": { "shape": "DeletePullRequestCommentReactionRequestReactionValueString" }
            }
        },
        "DeletePullRequestCommentReactionRequestReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "DeletePullRequestCommentReactionResponse": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "pullRequestId": { "shape": "NameString" },
                "commentId": { "shape": "String" },
                "reactionValue": { "shape": "DeletePullRequestCommentReactionResponseReactionValueString" },
                "id": { "shape": "String" }
            }
        },
        "DeletePullRequestCommentReactionResponseReactionValueString": {
            "type": "string",
            "max": 60,
            "min": 1
        },
        "DeleteSecretMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "DeleteSecretMigrationOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "DeleteSecretRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "SecretNameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "DeleteSecretResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "SecretNameString" }
            }
        },
        "DeleteSourceBranchInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "branchName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" }
            }
        },
        "DeleteSourceBranchOutput": {
            "type": "structure",
            "members": {
                "deleted": { "shape": "Boolean" }
            }
        },
        "DeleteSourcePullRequestToJiraIssueLinkInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber", "linkId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "linkId": { "shape": "String" }
            }
        },
        "DeleteSourcePullRequestToJiraIssueLinkOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "DeleteSourceReferencePolicyRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "referenceType", "prefixPattern"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "referenceType": {
                    "shape": "DeleteSourceReferencePolicyRequestReferenceTypeString",
                    "location": "querystring",
                    "locationName": "referenceType"
                },
                "prefixPattern": {
                    "shape": "DeleteSourceReferencePolicyRequestPrefixPatternString",
                    "location": "querystring",
                    "locationName": "prefixPattern"
                }
            }
        },
        "DeleteSourceReferencePolicyRequestPrefixPatternString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "DeleteSourceReferencePolicyRequestReferenceTypeString": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "DeleteSourceReferencePolicyResponse": {
            "type": "structure",
            "members": {
                "referencePolicy": { "shape": "SourceReferencePolicySummary" }
            }
        },
        "DeleteSourceRepositoryInputMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameStringMigration" }
            }
        },
        "DeleteSourceRepositoryOutputMigration": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "DeleteSourceRepositoryRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "DeleteSourceRepositoryResponse": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "SourceRepositoryNameString" }
            }
        },
        "DeniedActionsList": {
            "type": "list",
            "member": { "shape": "DeniedActionsListMemberString" }
        },
        "DeniedActionsListMemberString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "DeploymentTargetInfo": {
            "type": "structure",
            "members": {
                "targetType": { "shape": "String" },
                "connection": { "shape": "AccountConnectionInfo" }
            }
        },
        "DescribeOrganizationMembersInput": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "nextToken": { "shape": "DescribeOrganizationMembersInputNextTokenString" },
                "pageSize": { "shape": "DescribeOrganizationMembersInputPageSizeInteger" },
                "sortBy": { "shape": "String" },
                "sortDirection": { "shape": "String" }
            }
        },
        "DescribeOrganizationMembersInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "DescribeOrganizationMembersInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "DescribeOrganizationMembersMigrationInput": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "nextToken": { "shape": "DescribeOrganizationMembersMigrationInputNextTokenString" },
                "pageSize": { "shape": "DescribeOrganizationMembersMigrationInputPageSizeInteger" },
                "sortBy": { "shape": "String" },
                "sortDirection": { "shape": "String" }
            }
        },
        "DescribeOrganizationMembersMigrationInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "DescribeOrganizationMembersMigrationInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "DescribeOrganizationMembersMigrationOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "OrganizationMembersListMigration" }
            }
        },
        "DescribeOrganizationMembersOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "OrganizationMembersList" }
            }
        },
        "DescribeOrganizationUsageReportRequest": {
            "type": "structure",
            "required": ["organizationName", "resourceTypes"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "resourceTypes": { "shape": "DescribeOrganizationUsageReportRequestResourceTypesList" }
            }
        },
        "DescribeOrganizationUsageReportRequestResourceTypesList": {
            "type": "list",
            "member": { "shape": "String" },
            "max": 50,
            "min": 1
        },
        "DescribeOrganizationUsageReportResponse": {
            "type": "structure",
            "members": {
                "items": { "shape": "OrganizationUsageReportList" }
            }
        },
        "DescribeProjectMembersInput": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "DescribeProjectMembersInputNextTokenString" },
                "pageSize": { "shape": "DescribeProjectMembersInputPageSizeInteger" },
                "sortBy": { "shape": "String" },
                "sortDirection": { "shape": "String" }
            }
        },
        "DescribeProjectMembersInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "DescribeProjectMembersInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "DescribeProjectMembersMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "DescribeProjectMembersMigrationInputNextTokenString" },
                "pageSize": { "shape": "DescribeProjectMembersMigrationInputPageSizeInteger" },
                "sortBy": { "shape": "String" },
                "sortDirection": { "shape": "String" }
            }
        },
        "DescribeProjectMembersMigrationInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "DescribeProjectMembersMigrationInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "DescribeProjectMembersMigrationOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ProjectMembersListMigration" }
            }
        },
        "DescribeProjectMembersOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ProjectMembersList" }
            }
        },
        "DescribeSourceRepositoryEndpointsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" }
            }
        },
        "DescribeSourceRepositoryEndpointsOutput": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "SourceRepositoryEndpointsList" }
            }
        },
        "DescribeSubscriptionRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                }
            }
        },
        "DescribeSubscriptionResponse": {
            "type": "structure",
            "members": {
                "subscriptionType": { "shape": "String" },
                "awsAccountName": { "shape": "NameString" }
            }
        },
        "DevEnvironmentAccessDetails": {
            "type": "structure",
            "required": ["streamUrl", "tokenValue"],
            "members": {
                "streamUrl": { "shape": "SensitiveString" },
                "tokenValue": { "shape": "SensitiveString" }
            },
            "sensitive": true
        },
        "DevEnvironmentRepositorySummaries": {
            "type": "list",
            "member": { "shape": "DevEnvironmentRepositorySummary" }
        },
        "DevEnvironmentRepositorySummary": {
            "type": "structure",
            "required": ["repositoryName"],
            "members": {
                "repositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" }
            }
        },
        "DevEnvironmentSessionConfiguration": {
            "type": "structure",
            "required": ["sessionType"],
            "members": {
                "sessionType": { "shape": "DevEnvironmentSessionType" },
                "executeCommandSessionConfiguration": { "shape": "ExecuteCommandSessionConfiguration" }
            }
        },
        "DevEnvironmentSessionType": {
            "type": "string",
            "enum": ["SSM", "SSH"]
        },
        "DevEnvironmentStatus": {
            "type": "string",
            "enum": ["PENDING", "RUNNING", "STARTING", "STOPPING", "STOPPED", "FAILED", "DELETING", "DELETED"]
        },
        "DevEnvironmentSummary": {
            "type": "structure",
            "required": [
                "id",
                "lastUpdatedTime",
                "creatorId",
                "status",
                "repositories",
                "instanceType",
                "inactivityTimeoutMinutes",
                "persistentStorage"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "creatorId": { "shape": "DevEnvironmentSummaryCreatorIdString" },
                "status": { "shape": "DevEnvironmentStatus" },
                "statusReason": { "shape": "StatusReason" },
                "repositories": { "shape": "DevEnvironmentRepositorySummaries" },
                "alias": { "shape": "DevEnvironmentSummaryAliasString" },
                "ides": { "shape": "Ides" },
                "instanceType": { "shape": "InstanceType" },
                "inactivityTimeoutMinutes": { "shape": "InactivityTimeoutMinutes" },
                "persistentStorage": { "shape": "PersistentStorage" }
            }
        },
        "DevEnvironmentSummaryAliasString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "DevEnvironmentSummaryCreatorIdString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "DevEnvironmentSummaryList": {
            "type": "list",
            "member": { "shape": "DevEnvironmentSummary" }
        },
        "DirectoryLevelCoverage": {
            "type": "structure",
            "required": [
                "path",
                "name",
                "totalLinesCovered",
                "totalLinesMissed",
                "lineCoveragePercentage",
                "totalBranchesCovered",
                "totalBranchesMissed",
                "branchCoveragePercentage",
                "totalFiles"
            ],
            "members": {
                "path": { "shape": "String" },
                "name": { "shape": "String" },
                "totalLinesCovered": { "shape": "Integer" },
                "totalLinesMissed": { "shape": "Integer" },
                "lineCoveragePercentage": { "shape": "Percentage" },
                "totalBranchesCovered": { "shape": "Integer" },
                "totalBranchesMissed": { "shape": "Integer" },
                "branchCoveragePercentage": { "shape": "Percentage" },
                "totalFiles": { "shape": "Integer" },
                "parent": { "shape": "String" },
                "childDirectories": { "shape": "StringList" }
            }
        },
        "DirectoryLevelCoverages": {
            "type": "list",
            "member": { "shape": "DirectoryLevelCoverage" }
        },
        "DisassociateAwsAccountFromEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "projectName", "environmentName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "awsAccountName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "awsAccountName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "environmentName"
                }
            }
        },
        "DisassociateAwsAccountFromEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "projectName", "environmentName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "awsAccountName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" }
            }
        },
        "DisassociateAwsAccountOnboardingRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "regionName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "regionName": {
                    "shape": "RegionString",
                    "location": "querystring",
                    "locationName": "region"
                }
            }
        },
        "DisassociateAwsAccountOnboardingResponse": {
            "type": "structure",
            "required": ["organizationName", "name", "regionName"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" },
                "regionName": { "shape": "RegionString" }
            }
        },
        "DisassociateAwsAccountRequest": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "DisassociateAwsAccountResponse": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" }
            }
        },
        "DisposeArtifactPackageVersionsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "format", "versions"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "versions": { "shape": "ArtifactPackageVersionValuesList" },
                "versionRevisions": { "shape": "ArtifactPackageVersionRevisionMap" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "expectedStatus": { "shape": "ArtifactPackageVersionStatusString" }
            }
        },
        "Double": {
            "type": "double",
            "box": true
        },
        "DummyDataSummaries": {
            "type": "list",
            "member": { "shape": "DummyDataSummary" }
        },
        "DummyDataSummary": {
            "type": "structure",
            "members": {
                "name": { "shape": "NameString" },
                "dynamicQueryParams": { "shape": "StringMap" }
            }
        },
        "EcsServiceDeploymentTargetInfo": {
            "type": "structure",
            "members": {
                "clusterName": { "shape": "String" },
                "serviceName": { "shape": "String" },
                "region": { "shape": "String" },
                "deploymentController": { "shape": "String" },
                "applicationName": { "shape": "String" },
                "deploymentGroupName": { "shape": "String" }
            }
        },
        "EmailAddress": {
            "type": "structure",
            "members": {
                "email": { "shape": "String" },
                "verified": { "shape": "Boolean" }
            }
        },
        "EmailAddressString": {
            "type": "string",
            "max": 320,
            "min": 0,
            "pattern": "(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))"
        },
        "EnvironmentDeploymentCloudFormationStackDeploymenAlarmArnsList": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentChangeSet": {
            "type": "structure",
            "required": ["changeSetId", "changeSetName", "status"],
            "members": {
                "changeSetId": { "shape": "String" },
                "changeSetName": { "shape": "String" },
                "changes": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentChangeSetChangesList" },
                "status": { "shape": "String" },
                "statusReason": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentChangeSetChange": {
            "type": "structure",
            "required": ["logicalResourceId", "resourceType"],
            "members": {
                "logicalResourceId": { "shape": "String" },
                "resourceType": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentChangeSetChangesList": {
            "type": "list",
            "member": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentChangeSetChange" }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentEvent": {
            "type": "structure",
            "required": ["logicalResourceId", "timestamp", "resourceStatus"],
            "members": {
                "logicalResourceId": { "shape": "String" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "resourceStatus": { "shape": "String" },
                "resourceStatusReason": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentEventsList": {
            "type": "list",
            "member": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentEvent" }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentInfo": {
            "type": "structure",
            "members": {
                "stackName": { "shape": "String" },
                "region": { "shape": "RegionString" },
                "stackId": { "shape": "String" },
                "description": { "shape": "String" },
                "status": { "shape": "String" },
                "statusReason": { "shape": "String" },
                "stackTemplate": { "shape": "String" },
                "stackRoleArn": { "shape": "String" },
                "rollbackOnFailure": { "shape": "Boolean" },
                "rollbackConfiguration": {
                    "shape": "EnvironmentDeploymentCloudFormationStackDeploymentRollbackConfiguration"
                },
                "changeSet": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentChangeSet" },
                "stackEvents": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentEventsList" },
                "parameters": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentParametersList" },
                "outputs": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentOutputsList" },
                "resourceCount": { "shape": "Integer" }
            }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentOutput": {
            "type": "structure",
            "required": ["outputKey", "outputValue"],
            "members": {
                "outputKey": { "shape": "String" },
                "outputValue": { "shape": "String" },
                "description": { "shape": "String" },
                "exportName": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentOutputsList": {
            "type": "list",
            "member": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentOutput" }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentParameter": {
            "type": "structure",
            "required": ["parameterKey", "parameterValue"],
            "members": {
                "parameterKey": { "shape": "String" },
                "parameterValue": { "shape": "String" },
                "resolvedValue": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentParametersList": {
            "type": "list",
            "member": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentParameter" }
        },
        "EnvironmentDeploymentCloudFormationStackDeploymentRollbackConfiguration": {
            "type": "structure",
            "required": ["alarmArns"],
            "members": {
                "alarmArns": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymenAlarmArnsList" },
                "monitoringTime": { "shape": "Integer" }
            }
        },
        "EnvironmentDeploymentConnectionInfo": {
            "type": "structure",
            "required": ["roleName", "accountConnectionName"],
            "members": {
                "roleName": { "shape": "NameString" },
                "roleId": { "shape": "Uuid" },
                "accountConnectionName": { "shape": "NameString" },
                "accountConnectionId": { "shape": "Uuid" }
            }
        },
        "EnvironmentDeploymentDetails": {
            "type": "structure",
            "required": ["environmentId", "deploymentTargetType", "lastUpdatedTime"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" },
                "id": { "shape": "Uuid" },
                "environmentId": { "shape": "String" },
                "deploymentTargetType": { "shape": "String" },
                "deploymentTargetId": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "deploymentStatus": { "shape": "String" },
                "deploymentMessage": { "shape": "String" },
                "triggerInfo": { "shape": "EnvironmentDeploymentTriggerInfo" },
                "connection": { "shape": "EnvironmentDeploymentConnectionInfo" },
                "workflowActionInfo": { "shape": "EnvironmentDeploymentWorkflowActionInfo" },
                "sourceInfo": { "shape": "EnvironmentDeploymentSourceInfo" },
                "cfnStackDeploymentInfo": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentInfo" },
                "ecsServiceDeploymentInfo": { "shape": "EnvironmentDeploymentEcsServiceDeploymentInfo" }
            }
        },
        "EnvironmentDeploymentEcsServiceDeploymentInfo": {
            "type": "structure",
            "members": {
                "clusterName": { "shape": "String" },
                "serviceName": { "shape": "String" },
                "region": { "shape": "RegionString" },
                "deploymentController": { "shape": "String" },
                "codedeployApplicationName": { "shape": "String" },
                "codedeployDeploymentGroupName": { "shape": "String" },
                "codedeployDeploymentId": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentFilterList": {
            "type": "list",
            "member": { "shape": "EnvironmentFilter" },
            "max": 1,
            "min": 0
        },
        "EnvironmentDeploymentOrdering": {
            "type": "structure",
            "required": ["key"],
            "members": {
                "key": { "shape": "EnvironmentDeploymentOrderingKey" },
                "direction": { "shape": "EnvironmentDeploymentOrderingDirection" }
            }
        },
        "EnvironmentDeploymentOrderingDirection": {
            "type": "string",
            "enum": ["asc", "desc"]
        },
        "EnvironmentDeploymentOrderingKey": {
            "type": "string",
            "enum": ["lastUpdatedTime", "deploymentStatus", "deploymentTargetType"]
        },
        "EnvironmentDeploymentOrderingList": {
            "type": "list",
            "member": { "shape": "EnvironmentDeploymentOrdering" },
            "max": 1,
            "min": 0
        },
        "EnvironmentDeploymentSourceInfo": {
            "type": "structure",
            "members": {
                "sourceRepositoryName": { "shape": "String" },
                "sourceBranchName": { "shape": "String" },
                "sourceCommitId": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentTargetDetails": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" },
                "environmentId": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "deploymentTargetInfo": { "shape": "DeploymentTargetInfo" },
                "ecsServiceInfo": { "shape": "EcsServiceDeploymentTargetInfo" },
                "cfnStackInfo": { "shape": "CfnStackDeploymentTargetInfo" },
                "workflowId": { "shape": "String" },
                "workflowName": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentTargetsList": {
            "type": "list",
            "member": { "shape": "EnvironmentDeploymentTargetDetails" }
        },
        "EnvironmentDeploymentTriggerInfo": {
            "type": "structure",
            "required": ["triggerEventType"],
            "members": {
                "triggerEventId": { "shape": "String" },
                "triggerEventType": { "shape": "String" },
                "triggerEventActor": { "shape": "String" },
                "triggerEventUser": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentWorkflowActionInfo": {
            "type": "structure",
            "required": ["workflowId", "workflowActionExecutionId"],
            "members": {
                "workflowId": { "shape": "String" },
                "workflowExecutionId": { "shape": "String" },
                "workflowActionExecutionId": { "shape": "String" },
                "workflowActionName": { "shape": "String" },
                "workflowActionIdentifier": { "shape": "String" }
            }
        },
        "EnvironmentDeploymentsList": {
            "type": "list",
            "member": { "shape": "EnvironmentDeploymentDetails" }
        },
        "EnvironmentFilter": {
            "type": "structure",
            "required": ["name", "value", "condition"],
            "members": {
                "name": { "shape": "NameString" },
                "value": { "shape": "EnvironmentFilterValueString" },
                "condition": { "shape": "EnvironmentFilterComparator" }
            }
        },
        "EnvironmentFilterComparator": {
            "type": "string",
            "enum": ["EQUALS"]
        },
        "EnvironmentFilterList": {
            "type": "list",
            "member": { "shape": "EnvironmentFilter" },
            "max": 1,
            "min": 0
        },
        "EnvironmentFilterValueString": {
            "type": "string",
            "min": 1
        },
        "EnvironmentList": {
            "type": "list",
            "member": { "shape": "EnvironmentSummary" }
        },
        "EnvironmentOrdering": {
            "type": "structure",
            "required": ["key"],
            "members": {
                "key": { "shape": "EnvironmentOrderingKey" },
                "direction": { "shape": "EnvironmentOrderingDirection" }
            }
        },
        "EnvironmentOrderingDirection": {
            "type": "string",
            "enum": ["asc", "desc"]
        },
        "EnvironmentOrderingKey": {
            "type": "string",
            "enum": ["lastUpdatedTime"]
        },
        "EnvironmentOrderingList": {
            "type": "list",
            "member": { "shape": "EnvironmentOrdering" },
            "max": 1,
            "min": 0
        },
        "EnvironmentResourceMetadataFilterList": {
            "type": "list",
            "member": { "shape": "EnvironmentResourceMetadataFilterListMemberString" }
        },
        "EnvironmentResourceMetadataFilterListMemberString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "EnvironmentSecretOverride": {
            "type": "structure",
            "required": ["environmentName", "overridenValue"],
            "members": {
                "environmentName": { "shape": "NameString" },
                "overridenValue": { "shape": "SecretValueString" }
            }
        },
        "EnvironmentSecretOverrideMetadata": {
            "type": "structure",
            "members": {
                "environmentName": { "shape": "NameString" }
            }
        },
        "EnvironmentSummary": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "description": { "shape": "String" },
                "environmentType": { "shape": "EnvironmentType" }
            }
        },
        "EnvironmentType": {
            "type": "string",
            "enum": ["NON_PRODUCTION", "PRODUCTION"]
        },
        "ErrorType": {
            "type": "structure",
            "required": ["errorCode"],
            "members": {
                "errorCode": { "shape": "String" }
            }
        },
        "ErrorTypes": {
            "type": "list",
            "member": { "shape": "ErrorType" }
        },
        "Estimate": {
            "type": "integer",
            "max": 99,
            "min": 1
        },
        "EstimateMigration": {
            "type": "integer",
            "max": 10,
            "min": 1
        },
        "EventLogEntries": {
            "type": "list",
            "member": { "shape": "EventLogEntry" }
        },
        "EventLogEntry": {
            "type": "structure",
            "required": [
                "id",
                "eventName",
                "eventType",
                "eventCategory",
                "eventSource",
                "eventTime",
                "operationType",
                "userIdentity"
            ],
            "members": {
                "id": { "shape": "String" },
                "eventName": { "shape": "String" },
                "eventType": { "shape": "String" },
                "eventCategory": { "shape": "String" },
                "eventSource": { "shape": "String" },
                "eventTime": { "shape": "SyntheticTimestamp_date_time" },
                "operationType": { "shape": "OperationType" },
                "userIdentity": { "shape": "UserIdentity" },
                "projectInformation": { "shape": "ProjectInformation" },
                "requestId": { "shape": "String" },
                "requestPayload": { "shape": "EventPayload" },
                "responsePayload": { "shape": "EventPayload" },
                "errorCode": { "shape": "String" },
                "sourceIpAddress": { "shape": "String" }
            }
        },
        "EventPayload": {
            "type": "structure",
            "members": {
                "contentType": { "shape": "String" },
                "data": { "shape": "String" }
            }
        },
        "ExcludedUsersList": {
            "type": "list",
            "member": { "shape": "ExcludedUsersListMemberString" }
        },
        "ExcludedUsersListMemberString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "ExecuteCommandSessionConfiguration": {
            "type": "structure",
            "required": ["command"],
            "members": {
                "command": { "shape": "ExecuteCommandSessionConfigurationCommandString" },
                "arguments": { "shape": "ExecuteCommandSessionConfigurationArguments" }
            }
        },
        "ExecuteCommandSessionConfigurationArguments": {
            "type": "list",
            "member": { "shape": "ExecuteCommandSessionConfigurationArgumentsMemberString" }
        },
        "ExecuteCommandSessionConfigurationArgumentsMemberString": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "ExecuteCommandSessionConfigurationCommandString": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "ExtensionIdString": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "pattern": "[0-9a-zA-z\\-]+"
        },
        "ExtensionInstallationSummaries": {
            "type": "list",
            "member": { "shape": "ExtensionInstallationSummary" }
        },
        "ExtensionInstallationSummary": {
            "type": "structure",
            "required": ["extensionId", "extensionVersion"],
            "members": {
                "extensionId": { "shape": "ExtensionIdString" },
                "extensionVersion": { "shape": "ExtensionVersionString" }
            }
        },
        "ExtensionIssueScopeSummary": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "String" },
                "providerCanonicalId": { "shape": "String" },
                "providerCanonicalUrl": { "shape": "String" }
            }
        },
        "ExtensionVersionString": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "pattern": "[0-9]+"
        },
        "ExternalConnectionNameString": {
            "type": "string",
            "enum": [
                "public:npmjs",
                "public:maven-central",
                "public:maven-gradleplugins",
                "public:maven-googleandroid",
                "public:maven-commonsware",
                "public:nuget-org",
                "public:pypi"
            ]
        },
        "FileProcessingStatus": {
            "type": "string",
            "enum": ["SUCCEEDED", "FAILED"]
        },
        "Filter": {
            "type": "structure",
            "required": ["key", "values"],
            "members": {
                "key": { "shape": "String" },
                "values": { "shape": "StringList" },
                "comparisonOperator": { "shape": "String" }
            }
        },
        "FilterList": {
            "type": "structure",
            "members": {
                "filters": { "shape": "Filters" },
                "operation": { "shape": "String" }
            }
        },
        "Filters": {
            "type": "list",
            "member": { "shape": "Filter" }
        },
        "FleetArchitectureMigration": {
            "type": "string",
            "enum": ["AMD64"]
        },
        "FleetExecutionModelMigration": {
            "type": "string",
            "enum": ["CONTAINER", "NON_CONTAINER"]
        },
        "FleetOSMigration": {
            "type": "string",
            "enum": ["LINUX", "MAC"]
        },
        "FleetOverflowBehaviorMigration": {
            "type": "string",
            "enum": ["ON_DEMAND", "QUEUE"]
        },
        "FleetStatusContextMigration": {
            "type": "structure",
            "members": {
                "code": { "shape": "String" },
                "message": { "shape": "String" }
            }
        },
        "Float": {
            "type": "float",
            "box": true
        },
        "GetActionRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetActionResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "status"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "name": { "shape": "GetActionResponseNameString" },
                "logo": { "shape": "GetActionResponseLogoString" },
                "description": { "shape": "GetActionResponseDescriptionString" },
                "categories": { "shape": "GetActionResponseCategoriesList" },
                "status": { "shape": "Status" },
                "sourceRepositoryName": { "shape": "String" },
                "author": { "shape": "GetActionResponseAuthorString" },
                "support": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "GetActionResponseAuthorString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "GetActionResponseCategoriesList": {
            "type": "list",
            "member": { "shape": "ActionCategory" },
            "max": 10,
            "min": 0
        },
        "GetActionResponseDescriptionString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "GetActionResponseLogoString": {
            "type": "string",
            "max": 4096,
            "min": 0
        },
        "GetActionResponseNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "GetActionRunArtifactMetadataRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowId", "workflowRunId", "actionRunId", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "GetActionRunArtifactMetadataRequestProjectNameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowId"
                },
                "workflowRunId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowRunId"
                },
                "actionRunId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "actionRunId"
                },
                "name": {
                    "shape": "ArtifactNameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetActionRunArtifactMetadataRequestProjectNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "GetActionRunArtifactMetadataResponse": {
            "type": "structure",
            "members": {
                "downloadUrl": { "shape": "SensitiveString" }
            }
        },
        "GetActionRunLogEntriesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowId", "workflowRunId", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowId"
                },
                "workflowRunId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowRunId"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                },
                "startTime": {
                    "shape": "SyntheticTimestamp_date_time",
                    "location": "querystring",
                    "locationName": "startTime"
                },
                "endTime": {
                    "shape": "SyntheticTimestamp_date_time",
                    "location": "querystring",
                    "locationName": "endTime"
                },
                "maxResults": {
                    "shape": "GetActionRunLogEntriesRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "GetActionRunLogEntriesRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "tailLogs": {
                    "shape": "Boolean",
                    "location": "querystring",
                    "locationName": "tailLogs"
                }
            }
        },
        "GetActionRunLogEntriesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 1000,
            "min": 1
        },
        "GetActionRunLogEntriesRequestNextTokenString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "GetActionRunLogEntriesResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "workflowId": { "shape": "Uuid" },
                "workflowRunId": { "shape": "Uuid" },
                "id": { "shape": "Uuid" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "nextToken": { "shape": "String" },
                "previousToken": { "shape": "String" },
                "entries": { "shape": "ActionRunLogEventList" }
            }
        },
        "GetActionRunLogsDownloadableUrlRequest": {
            "type": "structure",
            "required": ["actionRunId", "organizationName", "projectName", "workflowName"],
            "members": {
                "actionRunId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "actionRunId"
                },
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "workflowName"
                }
            }
        },
        "GetActionRunLogsDownloadableUrlResponse": {
            "type": "structure",
            "members": {
                "actionRunId": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "workflowName": { "shape": "NameString" },
                "log": { "shape": "ActionRunDownloadableUrlInfo" }
            }
        },
        "GetActionRunRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowId", "workflowRunId", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowId"
                },
                "workflowRunId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowRunId"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetActionRunResponse": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "actionName": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "status": { "shape": "ActionRunStatus" },
                "currentPhase": { "shape": "ActionRunPhaseName" },
                "computeDetails": { "shape": "ActionRunComputeDetails" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "environment": { "shape": "ActionRunEnvironment" },
                "timeoutInMinutes": { "shape": "Integer" },
                "inputVariables": { "shape": "ActionRunVariables" },
                "outputVariables": { "shape": "ActionRunVariables" },
                "inputArtifacts": { "shape": "ActionRunArtifacts" },
                "outputArtifacts": { "shape": "ActionRunArtifacts" },
                "reports": { "shape": "ActionRunReports" },
                "phases": { "shape": "ActionRunPhaseMetadataList" },
                "connectionDetails": { "shape": "ActionRunConnectionDetails" },
                "workflowId": { "shape": "String" },
                "workflowRunId": { "shape": "String" },
                "cache": { "shape": "ActionRunCache" },
                "_actionRunMessages": { "shape": "ActionRunMessages" }
            }
        },
        "GetActionVersionRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "actionId", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "actionId": {
                    "shape": "GetActionVersionRequestActionIdString",
                    "location": "uri",
                    "locationName": "actionId"
                },
                "id": {
                    "shape": "GetActionVersionRequestIdString",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetActionVersionRequestActionIdString": {
            "type": "string",
            "max": 250,
            "min": 0
        },
        "GetActionVersionRequestIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "GetActionVersionResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "actionId", "status", "statusMessages"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "actionId": { "shape": "String" },
                "id": { "shape": "GetActionVersionResponseIdString" },
                "sourceCommitSha1": { "shape": "GetActionVersionResponseSourceCommitSha1String" },
                "status": { "shape": "Status" },
                "statusMessages": { "shape": "ActionVersionStatusMessages" },
                "schema": { "shape": "ActionVersionWorkflowSchema" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "GetActionVersionResponseIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "GetActionVersionResponseSourceCommitSha1String": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "GetArtifactPackageInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "format"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" }
            }
        },
        "GetArtifactPackageOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "originConfiguration": { "shape": "ArtifactPackageOriginConfiguration" }
            }
        },
        "GetArtifactPackageVersionInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "packageVersion", "format"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "packageVersion": { "shape": "ArtifactPackageVersionValueString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" }
            }
        },
        "GetArtifactPackageVersionOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "ArtifactPackageNameString" },
                "displayName": { "shape": "ArtifactPackageNameString" },
                "version": { "shape": "ArtifactPackageVersionValueString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "summary": { "shape": "String" },
                "homePage": { "shape": "String" },
                "sourceCodeRepository": { "shape": "String" },
                "publishedTime": { "shape": "String" },
                "licenses": { "shape": "ArtifactPackageVersionLicenseList" },
                "revision": { "shape": "ArtifactPackageVersionRevisionString" },
                "status": { "shape": "ArtifactPackageVersionStatusString" },
                "origin": { "shape": "ArtifactPackageVersionOrigin" }
            }
        },
        "GetArtifactPackageVersionReadmeInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "packageVersion", "format"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "packageVersion": { "shape": "ArtifactPackageVersionValueString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "format": { "shape": "ArtifactPackageFormatString" }
            }
        },
        "GetArtifactPackageVersionReadmeOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "ArtifactPackageNameString" },
                "version": { "shape": "ArtifactPackageVersionValueString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "revision": { "shape": "ArtifactPackageVersionRevisionString" },
                "readme": { "shape": "ArtifactPackageVersionReadmeString" }
            }
        },
        "GetArtifactRepositoryEndpointInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "packageFormat"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "packageFormat": { "shape": "ArtifactPackageFormatString" }
            }
        },
        "GetArtifactRepositoryEndpointOutput": {
            "type": "structure",
            "members": {
                "url": { "shape": "ArtifactRepositoryEndpointUrl" }
            }
        },
        "GetArtifactRepositoryInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ArtifactRepositoryNameString" }
            }
        },
        "GetAuthenticationRedirectRequest": {
            "type": "structure",
            "members": {
                "state": { "shape": "String" },
                "callbackUri": { "shape": "String" },
                "tenant": { "shape": "String" }
            }
        },
        "GetAuthenticationRedirectResponse": {
            "type": "structure",
            "members": {
                "redirect": { "shape": "String" }
            }
        },
        "GetAwsAccountOnboardingRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "regionName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "regionName": {
                    "shape": "RegionString",
                    "location": "querystring",
                    "locationName": "region"
                }
            }
        },
        "GetAwsAccountOnboardingResponse": {
            "type": "structure",
            "required": ["organizationName", "name", "regionName", "awsAccountId", "status", "requesterId"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" },
                "regionName": { "shape": "RegionString" },
                "awsAccountId": { "shape": "String" },
                "status": { "shape": "AwsAccountStatus" },
                "description": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "requesterId": { "shape": "String" },
                "accountConnectionToken": { "shape": "AccountConnectionToken" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" },
                "connectionId": { "shape": "String" }
            }
        },
        "GetAwsAccountRequest": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetAwsAccountResponse": {
            "type": "structure",
            "required": ["organizationName", "name", "awsAccountId", "status", "requesterId"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" },
                "awsAccountId": { "shape": "String" },
                "status": { "shape": "AwsAccountStatus" },
                "description": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "requesterId": { "shape": "String" },
                "accountConnectionToken": { "shape": "AccountConnectionToken" },
                "connectionRequestedFeatures": { "shape": "ConnectionFeatures" },
                "connectionId": { "shape": "String" }
            }
        },
        "GetAwsAccountRoleRequest": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "awsAccountName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "awsAccountName"
                },
                "name": {
                    "shape": "GetAwsAccountRoleRequestNameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetAwsAccountRoleRequestNameString": {
            "type": "string",
            "max": 64,
            "min": 1,
            "pattern": ".*[\\w+=,.@-]+.*"
        },
        "GetAwsAccountRoleResponse": {
            "type": "structure",
            "required": ["organizationName", "name", "roleArn", "awsAccountName", "awsAccountId"],
            "members": {
                "organizationName": { "shape": "String" },
                "name": { "shape": "String" },
                "roleArn": { "shape": "String" },
                "awsAccountName": { "shape": "String" },
                "awsAccountId": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "GetAwsAccountToEnvironmentAssociationRequest": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "projectName", "environmentName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "awsAccountName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "awsAccountName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "environmentName"
                }
            }
        },
        "GetAwsAccountToEnvironmentAssociationResponse": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "projectName", "environmentName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "awsAccountName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" }
            }
        },
        "GetBarInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetBarOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "versionId": { "shape": "String" }
            }
        },
        "GetBlueprintPreviewFileRequest": {
            "type": "structure",
            "required": ["organizationName", "sessionId", "synthesisId", "sourceRepositoryName", "filePath"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "sessionId": { "shape": "String" },
                "synthesisId": { "shape": "String" },
                "sourceRepositoryName": { "shape": "NameString" },
                "filePath": { "shape": "String" }
            }
        },
        "GetBlueprintPreviewFileResponse": {
            "type": "structure",
            "required": ["title", "fileContent"],
            "members": {
                "title": { "shape": "String" },
                "fileContent": { "shape": "String" }
            }
        },
        "GetBlueprintPreviewFolderRequest": {
            "type": "structure",
            "required": ["organizationName", "sessionId", "synthesisId", "sourceRepositoryName", "folderPath"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "sessionId": { "shape": "String" },
                "synthesisId": { "shape": "String" },
                "sourceRepositoryName": { "shape": "NameString" },
                "folderPath": { "shape": "String" }
            }
        },
        "GetBlueprintPreviewFolderResponse": {
            "type": "structure",
            "required": ["title", "files", "subFolders"],
            "members": {
                "title": { "shape": "String" },
                "files": { "shape": "PreviewFiles" },
                "subFolders": { "shape": "PreviewFolders" }
            }
        },
        "GetBlueprintPreviewRequest": {
            "type": "structure",
            "required": ["organizationName", "sessionId", "synthesisId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "sessionId": { "shape": "String" },
                "synthesisId": { "shape": "String" }
            }
        },
        "GetBlueprintPreviewResponse": {
            "type": "structure",
            "required": ["status"],
            "members": {
                "status": { "shape": "String" },
                "bundle": { "shape": "String" },
                "overview": { "shape": "PreviewOverview" },
                "reason": { "shape": "String" }
            }
        },
        "GetBlueprintRequest": {
            "type": "structure",
            "required": ["organizationName", "publisher", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "publisher": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "versionId": { "shape": "String" }
            }
        },
        "GetBlueprintResponse": {
            "type": "structure",
            "required": ["name", "packageUri", "publishDate", "declarationAst", "author", "displayName", "defaults"],
            "members": {
                "name": { "shape": "String" },
                "versionId": { "shape": "String" },
                "packageUri": { "shape": "String" },
                "publishDate": { "shape": "SyntheticTimestamp_date_time" },
                "declarationAst": { "shape": "String" },
                "author": { "shape": "String" },
                "displayName": { "shape": "String" },
                "defaults": { "shape": "String" },
                "referenceAsts": { "shape": "ReferenceAstsMap" },
                "license": { "shape": "String" },
                "homepage": { "shape": "String" },
                "description": { "shape": "String" },
                "readme": { "shape": "String" },
                "keywords": { "shape": "StringList" },
                "mediaUrls": { "shape": "StringList" }
            }
        },
        "GetBuildLogsMigrationInput": {
            "type": "structure",
            "required": ["buildId", "organizationName"],
            "members": {
                "buildId": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "workflowId": { "shape": "String" },
                "workflowRunId": { "shape": "String" },
                "startTime": { "shape": "String" },
                "endTime": { "shape": "String" },
                "maxResults": { "shape": "Integer" },
                "paginationToken": { "shape": "String" },
                "tailLogs": { "shape": "Boolean" }
            }
        },
        "GetBuildLogsMigrationOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "previousToken": { "shape": "String" },
                "events": { "shape": "BuildLogEventsMigration" }
            }
        },
        "GetCatalogActionRequest": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "id": {
                    "shape": "GetCatalogActionRequestIdString",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetCatalogActionRequestIdString": {
            "type": "string",
            "max": 250,
            "min": 0
        },
        "GetCatalogActionResponse": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "GetCatalogActionResponseNameString" },
                "description": { "shape": "GetCatalogActionResponseDescriptionString" },
                "logo": { "shape": "GetCatalogActionResponseLogoString" },
                "categories": { "shape": "GetCatalogActionResponseCategoriesList" },
                "author": { "shape": "GetCatalogActionResponseAuthorString" },
                "support": { "shape": "String" }
            }
        },
        "GetCatalogActionResponseAuthorString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "GetCatalogActionResponseCategoriesList": {
            "type": "list",
            "member": { "shape": "CatalogActionCategory" },
            "max": 10,
            "min": 0
        },
        "GetCatalogActionResponseDescriptionString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "GetCatalogActionResponseLogoString": {
            "type": "string",
            "max": 4096,
            "min": 0
        },
        "GetCatalogActionResponseNameString": {
            "type": "string",
            "max": 32,
            "min": 0
        },
        "GetCatalogActionVersionRequest": {
            "type": "structure",
            "required": ["actionId", "id"],
            "members": {
                "actionId": {
                    "shape": "GetCatalogActionVersionRequestActionIdString",
                    "location": "uri",
                    "locationName": "actionId"
                },
                "id": {
                    "shape": "GetCatalogActionVersionRequestIdString",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetCatalogActionVersionRequestActionIdString": {
            "type": "string",
            "max": 250,
            "min": 0
        },
        "GetCatalogActionVersionRequestIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "GetCatalogActionVersionResponse": {
            "type": "structure",
            "required": ["actionId", "schema"],
            "members": {
                "actionId": { "shape": "String" },
                "id": { "shape": "GetCatalogActionVersionResponseIdString" },
                "schema": { "shape": "CatalogActionVersionWorkflowSchema" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "GetCatalogActionVersionResponseIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "GetCodeCoverageReportRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetCodeCoverageReportResponse": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "lineCoverage",
                "actionRunId",
                "repositoryName",
                "branchName",
                "commitId"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "lineCoverage": { "shape": "LineCoverageResult" },
                "lineCoverageSuccessCriteriaResult": { "shape": "LineCoverageSuccessCriteriaResult" },
                "branchCoverage": { "shape": "BranchCoverageResult" },
                "branchCoverageSuccessCriteriaResult": { "shape": "BranchCoverageSuccessCriteriaResult" },
                "actionRunId": { "shape": "Uuid" },
                "workflowName": { "shape": "String" },
                "workflowRunId": { "shape": "String" },
                "workflowActionExecutionId": { "shape": "String" },
                "actionName": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "commitId": { "shape": "String" },
                "reportFiles": { "shape": "TestReportFiles" },
                "directoryLevelCoverages": { "shape": "DirectoryLevelCoverages" }
            }
        },
        "GetCodeCoverageResultRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetCodeCoverageResultResponse": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "codeCoverageReportId",
                "repositoryName",
                "branchName",
                "commitId",
                "lineCoveragePercentage",
                "coveredLinesCount",
                "missedLinesCount"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "codeCoverageReportId": { "shape": "Uuid" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "commitId": { "shape": "String" },
                "lineCoveragePercentage": { "shape": "Percentage" },
                "coveredLinesCount": { "shape": "Integer" },
                "missedLinesCount": { "shape": "Integer" },
                "branchCoveragePercentage": { "shape": "Percentage" },
                "coveredBranchesCount": { "shape": "Integer" },
                "missedBranchesCount": { "shape": "Integer" },
                "lineCoverageDetails": { "shape": "CoverageLineDetails" },
                "additionalProperties": { "shape": "AdditionalProperties" }
            }
        },
        "GetComputeFleetMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "GetComputeFleetRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "ComputeFleetNameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetComputeFleetResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "settings", "baseCapacity"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ComputeFleetNameString" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "settings": { "shape": "ComputeFleetSettings" },
                "baseCapacity": { "shape": "Integer" },
                "scalingMode": { "shape": "ComputeFleetScalingMode" },
                "status": { "shape": "ComputeFleetStatus" }
            }
        },
        "GetConnectionRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "providerId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "providerId": {
                    "shape": "ProviderIdString",
                    "location": "uri",
                    "locationName": "providerId"
                }
            }
        },
        "GetConnectionResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "name",
                "creatorId",
                "providerId",
                "providerData",
                "status",
                "lastUpdatedTime"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "creatorId": { "shape": "String" },
                "providerId": { "shape": "ProviderIdString" },
                "providerData": { "shape": "ProviderData" },
                "status": { "shape": "ConnectionStatus" },
                "statusMessage": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "GetDevEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetDevEnvironmentResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "id",
                "lastUpdatedTime",
                "creatorId",
                "status",
                "repositories",
                "instanceType",
                "inactivityTimeoutMinutes",
                "persistentStorage"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "Uuid" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "creatorId": { "shape": "GetDevEnvironmentResponseCreatorIdString" },
                "status": { "shape": "DevEnvironmentStatus" },
                "statusReason": { "shape": "StatusReason" },
                "repositories": { "shape": "DevEnvironmentRepositorySummaries" },
                "alias": { "shape": "GetDevEnvironmentResponseAliasString" },
                "ides": { "shape": "Ides" },
                "instanceType": { "shape": "InstanceType" },
                "inactivityTimeoutMinutes": { "shape": "InactivityTimeoutMinutes" },
                "persistentStorage": { "shape": "PersistentStorage" }
            }
        },
        "GetDevEnvironmentResponseAliasString": {
            "type": "string",
            "max": 128,
            "min": 0
        },
        "GetDevEnvironmentResponseCreatorIdString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "GetDummyDataInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetDummyDataLambdaInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "GetDummyDataLambdaOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" }
            }
        },
        "GetDummyDataOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" }
            }
        },
        "GetDummyDataServiceInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "GetDummyDataServiceOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" }
            }
        },
        "GetEnvironmentDeploymentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "environmentName", "deploymentId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "environmentName"
                },
                "deploymentId": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "deploymentId"
                }
            }
        },
        "GetEnvironmentDeploymentResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" },
                "deploymentId": { "shape": "NameString" },
                "environmentId": { "shape": "String" },
                "deploymentTargetType": { "shape": "String" },
                "deploymentTargetId": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "deploymentStatus": { "shape": "String" },
                "deploymentMessage": { "shape": "String" },
                "triggerInfo": { "shape": "EnvironmentDeploymentTriggerInfo" },
                "connection": { "shape": "EnvironmentDeploymentConnectionInfo" },
                "workflowActionInfo": { "shape": "EnvironmentDeploymentWorkflowActionInfo" },
                "sourceInfo": { "shape": "EnvironmentDeploymentSourceInfo" },
                "cfnStackDeploymentInfo": { "shape": "EnvironmentDeploymentCloudFormationStackDeploymentInfo" },
                "ecsServiceDeploymentInfo": { "shape": "EnvironmentDeploymentEcsServiceDeploymentInfo" }
            }
        },
        "GetEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetEnvironmentResourceMetadataRequest": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "roleArn",
                "environmentName",
                "serviceName",
                "actionName",
                "regionName"
            ],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "roleArn": {
                    "shape": "GetEnvironmentResourceMetadataRequestRoleArnString",
                    "location": "uri",
                    "locationName": "roleArn"
                },
                "environmentName": {
                    "shape": "GetEnvironmentResourceMetadataRequestEnvironmentNameString",
                    "location": "uri",
                    "locationName": "environmentName"
                },
                "serviceName": {
                    "shape": "GetEnvironmentResourceMetadataRequestServiceNameString",
                    "location": "uri",
                    "locationName": "serviceName"
                },
                "actionName": {
                    "shape": "GetEnvironmentResourceMetadataRequestActionNameString",
                    "location": "uri",
                    "locationName": "actionName"
                },
                "params": {
                    "shape": "GetEnvironmentResourceMetadataRequestParamsString",
                    "location": "querystring",
                    "locationName": "params"
                },
                "regionName": {
                    "shape": "RegionString",
                    "location": "querystring",
                    "locationName": "regionName"
                },
                "filters": {
                    "shape": "EnvironmentResourceMetadataFilterList",
                    "location": "querystring",
                    "locationName": "filters"
                }
            }
        },
        "GetEnvironmentResourceMetadataRequestActionNameString": {
            "type": "string",
            "max": 256,
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "GetEnvironmentResourceMetadataRequestEnvironmentNameString": {
            "type": "string",
            "max": 2500,
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "GetEnvironmentResourceMetadataRequestParamsString": {
            "type": "string",
            "max": 5000,
            "min": 1
        },
        "GetEnvironmentResourceMetadataRequestRoleArnString": {
            "type": "string",
            "max": 2500,
            "min": 1
        },
        "GetEnvironmentResourceMetadataRequestServiceNameString": {
            "type": "string",
            "max": 256,
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "GetEnvironmentResourceMetadataResponse": {
            "type": "structure",
            "members": {
                "data": { "shape": "String" }
            }
        },
        "GetEnvironmentResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "description": { "shape": "String" },
                "environmentType": { "shape": "EnvironmentType" }
            }
        },
        "GetExtensionInstallationRequest": {
            "type": "structure",
            "required": ["organizationName", "extensionId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "extensionId": {
                    "shape": "ExtensionIdString",
                    "location": "uri",
                    "locationName": "extensionId"
                }
            }
        },
        "GetExtensionInstallationResponse": {
            "type": "structure",
            "required": ["extensionId", "extensionVersion"],
            "members": {
                "extensionId": {
                    "shape": "ExtensionIdString",
                    "location": "uri",
                    "locationName": "extensionId"
                },
                "extensionVersion": {
                    "shape": "ExtensionVersionString",
                    "location": "uri",
                    "locationName": "extensionVersion"
                }
            }
        },
        "GetExtensionIssueScopeInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" }
            }
        },
        "GetIncidentRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "id": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "id"
                },
                "locale": {
                    "shape": "Locale",
                    "location": "querystring",
                    "locationName": "locale"
                }
            }
        },
        "GetIncidentResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "id",
                "title",
                "status",
                "productAreas",
                "startTime",
                "lastUpdatedTime",
                "messages"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "NameString" },
                "title": { "shape": "IncidentTitle" },
                "status": { "shape": "IncidentStatus" },
                "productAreas": { "shape": "ProductAreaList" },
                "startTime": { "shape": "Timestamp" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "endTime": { "shape": "Timestamp" },
                "messages": { "shape": "IncidentMessageList" }
            }
        },
        "GetIssueInput": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "issueStoreName"],
            "members": {
                "id": { "shape": "IssueId" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" }
            }
        },
        "GetIssueOutput": {
            "type": "structure",
            "required": ["item"],
            "members": {
                "item": { "shape": "IssueObject" }
            }
        },
        "GetIssueRequestMigration": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "issueStoreName"],
            "members": {
                "id": {
                    "shape": "IssueId",
                    "location": "uri",
                    "locationName": "id"
                },
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "IssueStoreNameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                }
            }
        },
        "GetIssueResponseMigration": {
            "type": "structure",
            "required": ["item"],
            "members": {
                "item": { "shape": "IssueObjectMigration" }
            }
        },
        "GetIssueStoreInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" }
            }
        },
        "GetIssueStoreOutput": {
            "type": "structure",
            "required": ["item"],
            "members": {
                "item": { "shape": "IssueStoreObject" }
            }
        },
        "GetIssueStoreRequestMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "IssueStoreNameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                }
            }
        },
        "GetIssueStoreResponseMigration": {
            "type": "structure",
            "required": ["item"],
            "members": {
                "item": { "shape": "IssueStoreObjectMigration" }
            }
        },
        "GetNotificationChannelRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetNotificationChannelResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "alias", "type", "details"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "alias": { "shape": "NameString" },
                "type": { "shape": "NotificationChannelType" },
                "details": { "shape": "NotificationChannelDetails" }
            }
        },
        "GetNotificationClientRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "id": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetNotificationClientResponse": {
            "type": "structure",
            "required": ["organizationName", "id", "type", "details"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "NameString" },
                "type": { "shape": "NotificationClientType" },
                "details": { "shape": "NotificationClientDetails" }
            }
        },
        "GetOnboardingInput": {
            "type": "structure",
            "required": ["organizationName", "onboardingId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "onboardingId": { "shape": "String" }
            }
        },
        "GetOrganizationActivityFeedRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "actors": { "shape": "GetOrganizationActivityFeedRequestActorsList" },
                "participants": { "shape": "GetOrganizationActivityFeedRequestParticipantsList" },
                "types": { "shape": "GetOrganizationActivityFeedRequestTypesList" },
                "count": { "shape": "GetOrganizationActivityFeedRequestCountInteger" },
                "rangeStart": { "shape": "SyntheticTimestamp_date_time" },
                "rangeEnd": { "shape": "SyntheticTimestamp_date_time" },
                "sortBy": { "shape": "ActivityFeedSortBy" }
            }
        },
        "GetOrganizationActivityFeedRequestActorsList": {
            "type": "list",
            "member": { "shape": "OrganizationActivityFeedParticipant" },
            "min": 1
        },
        "GetOrganizationActivityFeedRequestCountInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "GetOrganizationActivityFeedRequestParticipantsList": {
            "type": "list",
            "member": { "shape": "OrganizationActivityFeedParticipant" },
            "min": 1
        },
        "GetOrganizationActivityFeedRequestTypesList": {
            "type": "list",
            "member": { "shape": "ActivityFeedEventType" },
            "min": 1
        },
        "GetOrganizationActivityFeedResponse": {
            "type": "structure",
            "members": {
                "items": { "shape": "OrganizationActivityFeedItemList" }
            }
        },
        "GetOrganizationInvitationRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "GetOrganizationInvitationRequestIdString" }
            }
        },
        "GetOrganizationInvitationRequestIdString": {
            "type": "string",
            "max": 180,
            "min": 32
        },
        "GetOrganizationInvitationResponse": {
            "type": "structure",
            "required": [
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "organizationName",
                "status",
                "inviteeRole",
                "id"
            ],
            "members": {
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "organizationName": { "shape": "String" },
                "status": { "shape": "InvitationStatus" },
                "inviteeRole": { "shape": "OrganizationInviteeRole" },
                "id": { "shape": "String" }
            }
        },
        "GetOrganizationRequest": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetOrganizationResponse": {
            "type": "structure",
            "required": ["name", "regionName"],
            "members": {
                "id": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "field no longer in Rococo recommended schema"
                },
                "name": { "shape": "NameString" },
                "regionName": { "shape": "RegionString" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" }
            }
        },
        "GetPersonByUserNameRequest": {
            "type": "structure",
            "required": ["userName"],
            "members": {
                "userName": { "shape": "String" }
            }
        },
        "GetPersonRequest": {
            "type": "structure",
            "required": ["id"],
            "members": {
                "id": { "shape": "String" }
            }
        },
        "GetPersonResponse": {
            "type": "structure",
            "members": {
                "userId": { "shape": "String" },
                "userName": { "shape": "String" },
                "displayName": { "shape": "String" },
                "primaryEmail": { "shape": "EmailAddress" },
                "version": { "shape": "String" }
            }
        },
        "GetProjectActivityFeedRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "actors": { "shape": "GetProjectActivityFeedRequestActorsList" },
                "participants": { "shape": "GetProjectActivityFeedRequestParticipantsList" },
                "types": { "shape": "GetProjectActivityFeedRequestTypesList" },
                "count": { "shape": "GetProjectActivityFeedRequestCountInteger" },
                "rangeStart": { "shape": "SyntheticTimestamp_date_time" },
                "rangeEnd": { "shape": "SyntheticTimestamp_date_time" },
                "sortBy": { "shape": "ActivityFeedSortBy" }
            }
        },
        "GetProjectActivityFeedRequestActorsList": {
            "type": "list",
            "member": { "shape": "ProjectActivityFeedParticipant" },
            "min": 1
        },
        "GetProjectActivityFeedRequestCountInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "GetProjectActivityFeedRequestParticipantsList": {
            "type": "list",
            "member": { "shape": "ProjectActivityFeedParticipant" },
            "min": 1
        },
        "GetProjectActivityFeedRequestTypesList": {
            "type": "list",
            "member": { "shape": "ActivityFeedEventType" },
            "min": 1
        },
        "GetProjectActivityFeedResponse": {
            "type": "structure",
            "members": {
                "items": { "shape": "ProjectActivityFeedItemList" }
            }
        },
        "GetProjectInvitationByIdRequest": {
            "type": "structure",
            "required": ["organizationName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "GetProjectInvitationByIdRequestIdString" },
                "projectName": { "shape": "String" }
            }
        },
        "GetProjectInvitationByIdRequestIdString": {
            "type": "string",
            "max": 180,
            "min": 32
        },
        "GetProjectInvitationByIdResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "id",
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "projectName",
                "status",
                "inviteeRole"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "title": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "projectName": { "shape": "String" },
                "status": { "shape": "ProjectInvitationStatus" },
                "inviteeRole": { "shape": "ProjectInviteeRole" }
            }
        },
        "GetProjectMetricsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "type", "event", "aggregation", "from"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "type": { "shape": "MetricType" },
                "event": { "shape": "GetProjectMetricsRequestEventString" },
                "measurement": { "shape": "GetProjectMetricsRequestMeasurementString" },
                "aggregation": { "shape": "MetricAggregationType" },
                "intervalInMinutes": { "shape": "Integer" },
                "from": { "shape": "SyntheticTimestamp_date_time" },
                "to": { "shape": "SyntheticTimestamp_date_time" },
                "filters": { "shape": "MetricFilterMap" }
            }
        },
        "GetProjectMetricsRequestEventString": {
            "type": "string",
            "min": 1
        },
        "GetProjectMetricsRequestMeasurementString": {
            "type": "string",
            "min": 1
        },
        "GetProjectMetricsResponse": {
            "type": "structure",
            "members": {
                "histogram": { "shape": "MetricHistogramResult" },
                "buckets": { "shape": "MetricBucketResult" },
                "value": { "shape": "MetricValueResult" }
            }
        },
        "GetProjectNotificationSettingsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                }
            }
        },
        "GetProjectNotificationSettingsResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "locale", "settings"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "locale": { "shape": "Locale" },
                "settings": { "shape": "ProjectNotificationSettingsItemList" }
            }
        },
        "GetProjectRequest": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetProjectResponse": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "id": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "field no longer in Rococo recommended schema"
                },
                "externalId": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" },
                "versionId": { "shape": "String" }
            }
        },
        "GetProjectStatusInput": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                }
            }
        },
        "GetProjectStatusOutput": {
            "type": "structure",
            "required": ["status", "lastUpdatedTime"],
            "members": {
                "status": { "shape": "String" },
                "reason": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "version": { "shape": "String" }
            }
        },
        "GetPullRequestRequirementStatusInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "revisionNumber": { "shape": "String" }
            }
        },
        "GetPullRequestRequirementStatusOutput": {
            "type": "structure",
            "members": {
                "sourceCommitSha1": { "shape": "String" },
                "mergeBaseCommitSha1": { "shape": "String" },
                "destinationCommitSha1": { "shape": "String" },
                "mergeOptions": { "shape": "SourceMergeOptions" },
                "mergeRequirementsMet": { "shape": "Boolean" },
                "mergeRequirements": { "shape": "SourcePullRequestMergeRequirements" }
            }
        },
        "GetSecretMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "GetSecretRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetSecretResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "SecretNameString" },
                "description": { "shape": "SecretDescription" },
                "referenceId": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "environmentSecretOverridesMetadataList": {
                    "shape": "GetSecretResponseEnvironmentSecretOverridesMetadataListList"
                }
            }
        },
        "GetSecretResponseEnvironmentSecretOverridesMetadataListList": {
            "type": "list",
            "member": { "shape": "EnvironmentSecretOverrideMetadata" },
            "max": 5,
            "min": 0
        },
        "GetSlackCredentialsRequest": {
            "type": "structure",
            "required": ["organizationName", "oAuthVersion"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "oAuthVersion": {
                    "shape": "OAuthVersion",
                    "location": "querystring",
                    "locationName": "oAuthVersion"
                }
            }
        },
        "GetSlackCredentialsResponse": {
            "type": "structure",
            "required": ["organizationName", "state", "clientId", "scope"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "state": { "shape": "SensitiveUuid" },
                "clientId": { "shape": "SlackClientId" },
                "scope": { "shape": "SlackPermissionScope" }
            }
        },
        "GetSoftwareCompositionAnalysisFindingRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetSoftwareCompositionAnalysisFindingResponse": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "softwareCompositionAnalysisReportId",
                "repositoryName",
                "branchName",
                "commitId",
                "severity",
                "rule"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "GetSoftwareCompositionAnalysisFindingResponseNameString" },
                "softwareCompositionAnalysisReportId": { "shape": "Uuid" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "commitId": { "shape": "String" },
                "severity": { "shape": "AnalysisFindingSeverity" },
                "score": { "shape": "AnalysisFindingScore" },
                "category": { "shape": "AnalysisFindingCategory" },
                "rule": { "shape": "AnalysisFindingRule" },
                "message": { "shape": "AnalysisFindingMessage" },
                "recommendation": { "shape": "AnalysisFindingMessage" },
                "location": { "shape": "AnalysisFindingLocation" },
                "relatedLocations": { "shape": "RelatedAnalysisFindingLocations" }
            }
        },
        "GetSoftwareCompositionAnalysisFindingResponseNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "GetSoftwareCompositionAnalysisReportRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetSoftwareCompositionAnalysisReportResponse": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "scanStatistics",
                "actionRunId",
                "workflowName",
                "actionName",
                "repositoryName",
                "branchName",
                "commitId",
                "toolDetails",
                "scanRunTime"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "GetSoftwareCompositionAnalysisReportResponseNameString" },
                "scanStatistics": { "shape": "SoftwareCompositionAnalysisScanStatistics" },
                "successCriteriaResult": { "shape": "SeverityCountSuccessCriteriaResult" },
                "actionRunId": { "shape": "Uuid" },
                "workflowName": { "shape": "String" },
                "workflowRunId": { "shape": "String" },
                "workflowActionExecutionId": { "shape": "String" },
                "pullRequestId": { "shape": "String" },
                "actionName": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "commitId": { "shape": "String" },
                "toolDetails": { "shape": "SoftwareCompositionAnalysisToolDetails" },
                "scanRunTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "GetSoftwareCompositionAnalysisReportResponseNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "GetSoftwareTestingReportRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "reportId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "reportId": { "shape": "GetSoftwareTestingReportRequestReportIdString" }
            }
        },
        "GetSoftwareTestingReportRequestReportIdString": {
            "type": "string",
            "min": 1
        },
        "GetSoftwareTestingReportResponse": {
            "type": "structure",
            "required": [
                "reportId",
                "workflowId",
                "actionName",
                "repositoryName",
                "branchName",
                "reportName",
                "reportType",
                "latestReportRun"
            ],
            "members": {
                "reportId": { "shape": "String" },
                "workflowId": { "shape": "String" },
                "actionName": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "reportName": { "shape": "String" },
                "reportType": { "shape": "String" },
                "latestReportRun": { "shape": "SoftwareTestingReportRunDetails" }
            }
        },
        "GetSourceBranchInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "branchName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" }
            }
        },
        "GetSourceCommitInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "sourceCommitSha1"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "sourceCommitSha1": { "shape": "String" }
            }
        },
        "GetSourceFileInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "sourceFilePath"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "sourceFilePath": { "shape": "String" },
                "sourceCommitSha1": { "shape": "String" }
            }
        },
        "GetSourceFolderInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "sourceFolderPath"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "sourceFolderPath": { "shape": "String" },
                "sourceCommitSha1": { "shape": "String" }
            }
        },
        "GetSourcePullRequestInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" }
            }
        },
        "GetSourceRepositoryCloneUrlsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                }
            }
        },
        "GetSourceRepositoryCloneUrlsResponse": {
            "type": "structure",
            "required": ["https"],
            "members": {
                "https": { "shape": "String" }
            }
        },
        "GetSourceRepositoryInputMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameStringMigration" }
            }
        },
        "GetSourceRepositoryProvider": {
            "type": "structure",
            "members": {
                "canonicalId": { "shape": "String" },
                "canonicalUrl": { "shape": "String" }
            }
        },
        "GetSourceRepositoryRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "GetSourceRepositoryResponse": {
            "type": "structure",
            "required": ["name", "lastUpdatedTime", "createdTime"],
            "members": {
                "id": { "shape": "SourceRepositoryIdString" },
                "name": { "shape": "SourceRepositoryNameString" },
                "description": { "shape": "SourceRepositoryDescriptionString" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "createdTime": { "shape": "Timestamp" },
                "defaultBranchRef": { "shape": "SourceRepositoryBranchRefString" },
                "provider": { "shape": "GetSourceRepositoryProvider" }
            }
        },
        "GetStaticAnalysisFindingRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "GetStaticAnalysisFindingRequestIdString" }
            }
        },
        "GetStaticAnalysisFindingRequestIdString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "GetStaticAnalysisFindingResponse": {
            "type": "structure",
            "required": [
                "id",
                "name",
                "reportSummaryId",
                "repositoryName",
                "branchName",
                "commitId",
                "severity",
                "rule"
            ],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "GetStaticAnalysisFindingResponseNameString" },
                "reportSummaryId": { "shape": "GetStaticAnalysisFindingResponseReportSummaryIdString" },
                "repositoryName": { "shape": "GetStaticAnalysisFindingResponseRepositoryNameString" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "GetStaticAnalysisFindingResponseBranchNameString" },
                "commitId": { "shape": "GetStaticAnalysisFindingResponseCommitIdString" },
                "severity": { "shape": "AnalysisFindingSeverity" },
                "score": { "shape": "AnalysisFindingScore" },
                "category": { "shape": "GetStaticAnalysisFindingResponseCategoryString" },
                "message": { "shape": "AnalysisFindingMessage" },
                "rule": { "shape": "AnalysisFindingRule" },
                "recommendation": { "shape": "AnalysisFindingRecommendation" },
                "location": { "shape": "AnalysisFindingLocation" },
                "relatedLocations": { "shape": "RelatedAnalysisFindingLocations" },
                "additionalToolProperties": { "shape": "AdditionalProperties" },
                "tags": { "shape": "AnalysisFindingTags" },
                "status": { "shape": "GetStaticAnalysisFindingResponseStatusString" },
                "estimate": { "shape": "AnalysisFindingEstimate" }
            }
        },
        "GetStaticAnalysisFindingResponseBranchNameString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "GetStaticAnalysisFindingResponseCategoryString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "GetStaticAnalysisFindingResponseCommitIdString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "GetStaticAnalysisFindingResponseNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "GetStaticAnalysisFindingResponseReportSummaryIdString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "GetStaticAnalysisFindingResponseRepositoryNameString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "GetStaticAnalysisFindingResponseStatusString": {
            "type": "string",
            "max": 256,
            "min": 0
        },
        "GetStaticAnalysisReportRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "GetStaticAnalysisReportRequestIdString" }
            }
        },
        "GetStaticAnalysisReportRequestIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "GetStaticAnalysisReportResponse": {
            "type": "structure",
            "required": [
                "id",
                "name",
                "scanStatistics",
                "actionRunId",
                "workflowId",
                "actionName",
                "repositoryName",
                "branchName",
                "commitId",
                "rawReportFiles",
                "directoryLevelFindings",
                "toolDetails",
                "scanRunTime"
            ],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "String" },
                "scanStatistics": { "shape": "StaticAnalysisScanStatistics" },
                "actionRunId": { "shape": "Uuid" },
                "workflowId": { "shape": "String" },
                "workflowRunId": { "shape": "String" },
                "workflowActionExecutionId": { "shape": "String" },
                "pullRequestId": { "shape": "String" },
                "actionName": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "commitId": { "shape": "String" },
                "rawReportFiles": { "shape": "StaticAnalysisReportSourceFiles" },
                "directoryLevelFindings": { "shape": "StaticAnalysisDirectoryLevelFindings" },
                "toolDetails": { "shape": "StaticAnalysisToolDetails" },
                "scanRunTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "GetTestCaseResultRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetTestCaseResultResponse": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "testReportId",
                "shortName",
                "status",
                "durationInNanoseconds"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "GetTestCaseResultResponseNameString" },
                "testReportId": { "shape": "Uuid" },
                "shortName": { "shape": "String" },
                "status": { "shape": "TestCaseResultType" },
                "durationInNanoseconds": { "shape": "Long" },
                "testCaseStartTime": { "shape": "SyntheticTimestamp_date_time" },
                "message": { "shape": "String" },
                "isMessageTruncated": { "shape": "IsMessageTruncated" },
                "additionalProperties": { "shape": "AdditionalProperties" },
                "testGroupIds": { "shape": "StringList" }
            }
        },
        "GetTestCaseResultResponseNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "GetTestReportRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "GetTestReportResponse": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "durationInNanoseconds",
                "testRunResult",
                "actionRunId",
                "workflowName",
                "actionName",
                "repositoryName",
                "branchName",
                "commitId"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "testRunStartTime": { "shape": "SyntheticTimestamp_date_time" },
                "durationInNanoseconds": { "shape": "Long" },
                "testRunResult": { "shape": "TestRunResult" },
                "successCriteriaResult": { "shape": "TestSuccessCriteriaResult" },
                "actionRunId": { "shape": "Uuid" },
                "workflowName": { "shape": "String" },
                "actionName": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "commitId": { "shape": "String" },
                "reportFiles": { "shape": "TestReportFiles" },
                "testGroups": { "shape": "TestGroups" },
                "workflowRunId": { "shape": "String" },
                "workflowActionExecutionId": { "shape": "String" }
            }
        },
        "GetTestReportStatusRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "GetTestReportStatusRequestIdString" }
            }
        },
        "GetTestReportStatusRequestIdString": {
            "type": "string",
            "min": 1
        },
        "GetTestReportStatusResponse": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "name", "actionRunId", "phaseHistory"],
            "members": {
                "id": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "actionRunId": { "shape": "Uuid" },
                "phaseHistory": { "shape": "TestReportStatusPhaseHistory" }
            }
        },
        "GetUserDetailsRequest": {
            "type": "structure",
            "members": {
                "id": {
                    "shape": "GetUserDetailsRequestIdString",
                    "location": "querystring",
                    "locationName": "id"
                },
                "userName": {
                    "shape": "GetUserDetailsRequestUserNameString",
                    "location": "querystring",
                    "locationName": "userName"
                }
            }
        },
        "GetUserDetailsRequestIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "GetUserDetailsRequestUserNameString": {
            "type": "string",
            "max": 100,
            "min": 3,
            "pattern": "[a-zA-Z0-9]{3,100}"
        },
        "GetUserDetailsResponse": {
            "type": "structure",
            "members": {
                "userId": { "shape": "String" },
                "userName": { "shape": "String" },
                "displayName": { "shape": "String" },
                "primaryEmail": { "shape": "EmailAddress" },
                "version": { "shape": "String" }
            }
        },
        "GetUserNotificationSettingsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                }
            }
        },
        "GetUserNotificationSettingsResponse": {
            "type": "structure",
            "required": ["organizationName", "settings"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "settings": { "shape": "UserNotificationSettingsItemList" }
            }
        },
        "GetWorkflowRequest": {
            "type": "structure",
            "required": ["organizationName", "id", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                },
                "version": {
                    "shape": "Integer",
                    "location": "querystring",
                    "locationName": "version"
                },
                "projectName": {
                    "shape": "GetWorkflowRequestProjectNameString",
                    "location": "uri",
                    "locationName": "projectName"
                }
            }
        },
        "GetWorkflowRequestProjectNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "GetWorkflowResponse": {
            "type": "structure",
            "required": [
                "id",
                "version",
                "name",
                "sourceRepositoryName",
                "sourceBranchName",
                "definition",
                "creationTime",
                "lastUpdatedTime",
                "runMode",
                "status"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "version": { "shape": "Integer" },
                "name": { "shape": "String" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameStringMigration" },
                "sourceBranchName": { "shape": "SourceRepositoryBranchString" },
                "definition": { "shape": "WorkflowDefinition" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "runMode": { "shape": "WorkflowRunMode" },
                "status": { "shape": "WorkflowStatus" },
                "_statusReasons": { "shape": "WorkflowStatusReasons" }
            }
        },
        "GetWorkflowRunRequest": {
            "type": "structure",
            "required": ["organizationName", "id", "projectName", "workflowId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                },
                "projectName": {
                    "shape": "GetWorkflowRunRequestProjectNameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowId"
                }
            }
        },
        "GetWorkflowRunRequestProjectNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "GetWorkflowRunResponse": {
            "type": "structure",
            "required": [
                "id",
                "workflowId",
                "workflowVersion",
                "_triggerEventId",
                "_triggerEventType",
                "status",
                "startTime",
                "lastUpdatedTime"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "workflowId": { "shape": "Uuid" },
                "workflowVersion": { "shape": "Integer" },
                "_triggerEventId": { "shape": "String" },
                "_triggerEventType": { "shape": "String" },
                "_triggerEventActor": { "shape": "String" },
                "status": { "shape": "String" },
                "statusReasons": { "shape": "WorkflowRunStatusReasons" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "_metadata": { "shape": "WorkflowRunMetadata" }
            }
        },
        "GetWorkflowStateRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowId"
                }
            }
        },
        "GetWorkflowStateResponse": {
            "type": "structure",
            "required": ["workflowId", "actionStates"],
            "members": {
                "workflowId": { "shape": "Uuid" },
                "actionStates": { "shape": "WorkflowActionStates" },
                "inboundTransitionStates": { "shape": "InboundTransitionStates" }
            }
        },
        "Ide": {
            "type": "structure",
            "members": {
                "runtime": { "shape": "IdeRuntimeString" },
                "name": { "shape": "IdeNameString" }
            }
        },
        "IdeConfiguration": {
            "type": "structure",
            "members": {
                "runtime": { "shape": "IdeConfigurationRuntimeString" },
                "name": { "shape": "IdeConfigurationNameString" }
            }
        },
        "IdeConfigurationList": {
            "type": "list",
            "member": { "shape": "IdeConfiguration" },
            "max": 1,
            "min": 0
        },
        "IdeConfigurationNameString": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "IdeConfigurationRuntimeString": {
            "type": "string",
            "max": 400,
            "min": 1
        },
        "IdeNameString": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "IdeRuntimeString": {
            "type": "string",
            "max": 400,
            "min": 1
        },
        "Ides": {
            "type": "list",
            "member": { "shape": "Ide" },
            "max": 1,
            "min": 0
        },
        "InactivityTimeoutMinutes": {
            "type": "integer",
            "max": 1200,
            "min": 0
        },
        "InboundRun": {
            "type": "structure",
            "members": {
                "workflowRunId": { "shape": "String" },
                "status": { "shape": "String" }
            }
        },
        "InboundRuns": {
            "type": "list",
            "member": { "shape": "InboundRun" }
        },
        "InboundTransitionState": {
            "type": "structure",
            "members": {
                "actionGroupNames": { "shape": "ActionGroupNames" },
                "actionNames": { "shape": "ActionNames" },
                "inboundRuns": { "shape": "InboundRuns" }
            }
        },
        "InboundTransitionStates": {
            "type": "list",
            "member": { "shape": "InboundTransitionState" }
        },
        "IncidentMessage": {
            "type": "structure",
            "required": ["timestamp", "id", "body"],
            "members": {
                "timestamp": { "shape": "Timestamp" },
                "id": { "shape": "NameString" },
                "body": { "shape": "IncidentMessageBody" }
            }
        },
        "IncidentMessageBody": {
            "type": "string",
            "max": 1024,
            "min": 8
        },
        "IncidentMessageList": {
            "type": "list",
            "member": { "shape": "IncidentMessage" }
        },
        "IncidentStatus": {
            "type": "string",
            "enum": ["ONGOING", "RESOLVED"]
        },
        "IncidentSummary": {
            "type": "structure",
            "required": ["organizationName", "id", "title", "status", "productAreas", "lastUpdatedTime"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "NameString" },
                "title": { "shape": "IncidentTitle" },
                "status": { "shape": "IncidentStatus" },
                "productAreas": { "shape": "ProductAreaList" },
                "lastUpdatedTime": { "shape": "Timestamp" }
            }
        },
        "IncidentSummaryList": {
            "type": "list",
            "member": { "shape": "IncidentSummary" }
        },
        "IncidentTitle": {
            "type": "string",
            "max": 128,
            "min": 8
        },
        "InstanceType": {
            "type": "string",
            "enum": ["dev.standard1.small", "dev.standard1.medium"]
        },
        "Integer": {
            "type": "integer",
            "box": true
        },
        "InvalidInputError": {
            "type": "structure",
            "members": {
                "message": { "shape": "String" }
            },
            "error": {
                "httpStatusCode": 400,
                "senderFault": true
            },
            "exception": true
        },
        "InvitationStatus": {
            "type": "string",
            "enum": [
                "MEMBER",
                "INVITATION_SENDING",
                "INVITATION_SENT",
                "FAILURE_SENDING",
                "INVITATION_CANCELLED",
                "INVITATION_RESENT"
            ]
        },
        "IsBranch": {
            "type": "string",
            "enum": ["TRUE", "FALSE"]
        },
        "IsMessageTruncated": {
            "type": "string",
            "enum": ["TRUE", "FALSE"]
        },
        "IssueAssigneeIdListMigration": {
            "type": "list",
            "member": { "shape": "Uuid" },
            "max": 10,
            "min": 0
        },
        "IssueAssigneeIds": {
            "type": "list",
            "member": { "shape": "AssigneeId" },
            "max": 10,
            "min": 0
        },
        "IssueComment": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "authorId": { "shape": "String" },
                "createdTime": { "shape": "Timestamp" },
                "message": { "shape": "String" }
            }
        },
        "IssueComments": {
            "type": "list",
            "member": { "shape": "IssueComment" }
        },
        "IssueCustomField": {
            "type": "structure",
            "required": ["name", "type", "value"],
            "members": {
                "name": { "shape": "IssueCustomFieldNameString" },
                "type": { "shape": "IssueCustomFieldType" },
                "value": { "shape": "IssueCustomFieldValueString" }
            }
        },
        "IssueCustomFieldMigration": {
            "type": "structure",
            "required": ["name", "type", "value"],
            "members": {
                "name": { "shape": "IssueCustomFieldMigrationNameString" },
                "type": { "shape": "IssueCustomFieldTypeMigration" },
                "value": { "shape": "IssueCustomFieldMigrationValueString" }
            }
        },
        "IssueCustomFieldMigrationNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "IssueCustomFieldMigrationValueString": {
            "type": "string",
            "max": 1023,
            "min": 1
        },
        "IssueCustomFieldNameString": {
            "type": "string",
            "max": 50,
            "min": 1
        },
        "IssueCustomFieldType": {
            "type": "string",
            "enum": ["TEXT", "NUMBER", "DATE", "BOOLEAN"]
        },
        "IssueCustomFieldTypeMigration": {
            "type": "string",
            "enum": ["TEXT", "NUMBER", "DATE", "BOOLEAN"]
        },
        "IssueCustomFieldValueString": {
            "type": "string",
            "max": 1000,
            "min": 1
        },
        "IssueCustomFields": {
            "type": "list",
            "member": { "shape": "IssueCustomField" },
            "max": 50,
            "min": 0
        },
        "IssueCustomFieldsMigration": {
            "type": "list",
            "member": { "shape": "IssueCustomFieldMigration" },
            "max": 50,
            "min": 0
        },
        "IssueId": {
            "type": "string",
            "min": 1
        },
        "IssueLabelIdListMigration": {
            "type": "list",
            "member": { "shape": "Uuid" },
            "max": 200,
            "min": 0
        },
        "IssueLabelIds": {
            "type": "list",
            "member": { "shape": "String" },
            "max": 50,
            "min": 0
        },
        "IssueMetadata": {
            "type": "structure",
            "required": ["id", "version", "lastUpdatedTime"],
            "members": {
                "id": { "shape": "String" },
                "version": { "shape": "Integer" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "shortId": { "shape": "String" }
            }
        },
        "IssueMetadataList": {
            "type": "list",
            "member": { "shape": "IssueMetadata" }
        },
        "IssueMetadataListMigration": {
            "type": "list",
            "member": { "shape": "IssueMetadataMigration" }
        },
        "IssueMetadataMigration": {
            "type": "structure",
            "required": ["id", "versionId", "lastUpdatedTime"],
            "members": {
                "id": { "shape": "IssueId" },
                "versionId": { "shape": "Integer" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "IssueObject": {
            "type": "structure",
            "required": ["id", "title", "lastUpdatedTime", "version", "status", "description", "storeId", "archived"],
            "members": {
                "id": { "shape": "String" },
                "title": { "shape": "String" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "version": { "shape": "Integer" },
                "status": { "shape": "String" },
                "description": { "shape": "String" },
                "storeId": { "shape": "String" },
                "archived": { "shape": "Boolean" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIds" },
                "createdTime": { "shape": "Timestamp" },
                "creator": { "shape": "String" },
                "lastUpdatedBy": { "shape": "String" },
                "priority": { "shape": "IssuePriority" },
                "references": { "shape": "IssueReferences" },
                "comments": { "shape": "IssueComments" },
                "labelIds": { "shape": "IssueLabelIds" },
                "position": { "shape": "Float" },
                "estimate": { "shape": "Estimate" },
                "shortId": { "shape": "String" },
                "customFields": { "shape": "IssueCustomFields" }
            }
        },
        "IssueObjectMigration": {
            "type": "structure",
            "required": [
                "id",
                "title",
                "lastUpdatedTime",
                "versionId",
                "statusId",
                "description",
                "issueStoreId",
                "archived",
                "createdTime"
            ],
            "members": {
                "id": { "shape": "IssueId" },
                "title": { "shape": "IssueObjectMigrationTitleString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "versionId": { "shape": "Integer" },
                "statusId": { "shape": "String" },
                "description": { "shape": "IssueObjectMigrationDescriptionString" },
                "issueStoreId": { "shape": "String" },
                "archived": { "shape": "Boolean" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIdListMigration" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "createdBy": { "shape": "String" },
                "updatedBy": { "shape": "String" },
                "priority": { "shape": "IssuePriorityMigration" },
                "labelIds": { "shape": "IssueLabelIdListMigration" },
                "estimate": { "shape": "EstimateMigration" },
                "customFields": { "shape": "IssueCustomFieldsMigration" }
            }
        },
        "IssueObjectMigrationDescriptionString": {
            "type": "string",
            "max": 32767,
            "min": 0
        },
        "IssueObjectMigrationTitleString": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "IssuePriority": {
            "type": "string",
            "enum": ["low", "medium", "high"]
        },
        "IssuePriorityMigration": {
            "type": "string",
            "enum": ["low", "medium", "high"]
        },
        "IssueReference": {
            "type": "structure",
            "members": {
                "referenceType": { "shape": "String" },
                "referenceId": { "shape": "String" }
            }
        },
        "IssueReferences": {
            "type": "list",
            "member": { "shape": "IssueReference" }
        },
        "IssueScopeLinkStatus": {
            "type": "string",
            "enum": ["LINKED", "LINKING", "UNLINKED", "UNKNOWN"]
        },
        "IssueScopeLinkableSummary": {
            "type": "structure",
            "required": ["name", "linkStatus", "providerCanonicalId", "providerCanonicalUrl"],
            "members": {
                "name": { "shape": "String" },
                "linkStatus": { "shape": "IssueScopeLinkStatus" },
                "providerCanonicalId": { "shape": "String" },
                "providerCanonicalUrl": { "shape": "String" }
            }
        },
        "IssueScopeLinkableSummaryList": {
            "type": "list",
            "member": { "shape": "IssueScopeLinkableSummary" }
        },
        "IssueStoreEstimationType": {
            "type": "string",
            "enum": ["FIBONACCI", "T_SHIRT"]
        },
        "IssueStoreEstimationTypeMigration": {
            "type": "string",
            "enum": ["FIBONACCI", "T_SHIRT"]
        },
        "IssueStoreHighLevelStatus": {
            "type": "string",
            "enum": ["BACKLOG", "NOT_STARTED", "STARTED", "COMPLETED"]
        },
        "IssueStoreHighLevelStatusMigration": {
            "type": "string",
            "enum": ["DRAFT", "NOT_STARTED", "STARTED", "COMPLETED"]
        },
        "IssueStoreLabelColor": {
            "type": "string",
            "max": 7,
            "min": 7,
            "pattern": "#[0-9a-fA-F]{6}"
        },
        "IssueStoreLabelObject": {
            "type": "structure",
            "required": ["id", "name", "labelColor"],
            "members": {
                "id": { "shape": "Uuid" },
                "name": { "shape": "IssueStoreLabelObjectNameString" },
                "labelColor": { "shape": "IssueStoreLabelColor" }
            }
        },
        "IssueStoreLabelObjectNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "IssueStoreNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "IssueStoreObject": {
            "type": "structure",
            "required": ["id", "lastUpdatedTime", "statuses"],
            "members": {
                "id": { "shape": "String" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "statuses": { "shape": "IssueStoreStatusList" },
                "estimationType": { "shape": "IssueStoreEstimationType" },
                "labels": { "shape": "Labels" },
                "savedViews": { "shape": "SavedViews" },
                "maxAssigneesPerIssue": { "shape": "MaxAssigneesPerIssue" }
            }
        },
        "IssueStoreObjectMigration": {
            "type": "structure",
            "required": ["id", "lastUpdatedTime", "versionId"],
            "members": {
                "id": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "estimationType": { "shape": "IssueStoreEstimationTypeMigration" },
                "maxAssigneesPerIssue": { "shape": "MaxAssigneesPerIssueMigration" },
                "versionId": { "shape": "Integer" }
            }
        },
        "IssueStoreSavedViewObject": {
            "type": "structure",
            "required": ["id", "name", "query"],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "IssueStoreSavedViewObjectNameString" },
                "query": { "shape": "SavedViewQueryString" }
            }
        },
        "IssueStoreSavedViewObjectNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "IssueStoreStatus": {
            "type": "structure",
            "required": ["id", "name", "highLevelStatus", "order", "active"],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "IssueStoreStatusNameString" },
                "highLevelStatus": { "shape": "IssueStoreHighLevelStatus" },
                "order": { "shape": "Integer" },
                "active": { "shape": "Boolean" }
            }
        },
        "IssueStoreStatusList": {
            "type": "list",
            "member": { "shape": "IssueStoreStatus" }
        },
        "IssueStoreStatusMigration": {
            "type": "structure",
            "required": ["id", "name", "highLevelStatus", "order", "active"],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "IssueStoreStatusMigrationNameString" },
                "highLevelStatus": { "shape": "IssueStoreHighLevelStatusMigration" },
                "order": { "shape": "Integer" },
                "active": { "shape": "Boolean" }
            }
        },
        "IssueStoreStatusMigrationNameString": {
            "type": "string",
            "max": 63,
            "min": 1
        },
        "IssueStoreStatusNameString": {
            "type": "string",
            "max": 50,
            "min": 1
        },
        "Label": {
            "type": "structure",
            "required": ["id", "name", "color"],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "LabelNameString" },
                "color": { "shape": "LabelColorString" }
            }
        },
        "LabelColorString": {
            "type": "string",
            "max": 7,
            "min": 7,
            "pattern": "#[0-9a-fA-F]{6}"
        },
        "LabelNameString": {
            "type": "string",
            "max": 50,
            "min": 1
        },
        "Labels": {
            "type": "list",
            "member": { "shape": "Label" }
        },
        "LineCoverageResult": {
            "type": "structure",
            "required": ["coveredCount", "missedCount"],
            "members": {
                "percentageCovered": { "shape": "Percentage" },
                "coveredCount": { "shape": "Integer" },
                "missedCount": { "shape": "Integer" }
            }
        },
        "LineCoverageSuccessCriteriaResult": {
            "type": "structure",
            "members": {
                "isPassing": { "shape": "Boolean" },
                "lineCoverageCriteria": { "shape": "Percentage" },
                "lineCoverageValue": { "shape": "Percentage" }
            }
        },
        "LinkAccountToEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "environmentName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "LinkAccountToEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "environmentName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "LinkComponent": {
            "type": "structure",
            "required": ["resourcePath"],
            "members": {
                "resourcePath": { "shape": "ResourceRefList" },
                "resourceId": { "shape": "ResourceMap" }
            }
        },
        "LinkExtensionIssueScopeInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "connectionName", "providerCanonicalId", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "connectionName": { "shape": "NameString" },
                "providerCanonicalId": { "shape": "String" },
                "name": { "shape": "String" }
            }
        },
        "LinkExtensionIssueScopeOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" },
                "id": { "shape": "String" }
            }
        },
        "LinkId": {
            "type": "string",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}_[0-9a-zA-Z_]{4,62}_[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        },
        "LinkSourceRepositoryInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "connectionName", "providerCanonicalId", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "connectionName": { "shape": "NameString" },
                "providerCanonicalId": { "shape": "String" },
                "name": { "shape": "SourceRepositoryNameString" }
            }
        },
        "LinkSourceRepositoryOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" },
                "id": { "shape": "String" }
            }
        },
        "LinkStatus": {
            "type": "string",
            "enum": ["linked", "linking", "unlinked"]
        },
        "LinkType": {
            "type": "string",
            "enum": [
                "RELATES_TO",
                "BLOCKS",
                "IS_BLOCKED_BY",
                "INCLUDES",
                "IS_INCLUDED_IN",
                "APPROVES",
                "APPROVED_BY",
                "TRIGGERS",
                "IS_TRIGGERED_BY",
                "IS_ALIAS_OF",
                "IS_ALIASED_BY",
                "ISSUE_BLOCKS",
                "ISSUE_BLOCKED_BY",
                "ISSUES_FOR_PULL_REQUEST",
                "PULL_REQUEST_HAS_ISSUES",
                "REPOSITORY_USED_BY_DEVELOPMENT_WORKSPACE",
                "DEVELOPMENT_WORKSPACE_USES_REPOSITORY"
            ]
        },
        "ListAccessTokensRequest": {
            "type": "structure",
            "members": {
                "maxResults": {
                    "shape": "ListAccessTokensRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "ListAccessTokensRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListAccessTokensRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 10
        },
        "ListAccessTokensRequestNextTokenString": {
            "type": "string",
            "max": 4000,
            "min": 1
        },
        "ListAccessTokensResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "AccessTokenSummaries" },
                "nextToken": { "shape": "ListAccessTokensResponseNextTokenString" }
            }
        },
        "ListAccessTokensResponseNextTokenString": {
            "type": "string",
            "max": 4000,
            "min": 1
        },
        "ListActionLogRequest": {
            "type": "structure",
            "required": ["organizationName", "startTime", "endTime"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "startTime": { "shape": "String" },
                "endTime": { "shape": "String" },
                "projectName": { "shape": "NameString" },
                "eventName": { "shape": "String" },
                "eventSource": { "shape": "String" },
                "eventCategory": { "shape": "String" },
                "nextToken": { "shape": "ListActionLogRequestNextTokenString" },
                "maxResults": { "shape": "ListActionLogRequestMaxResultsInteger" },
                "sortBy": { "shape": "SortParam" }
            }
        },
        "ListActionLogRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListActionLogRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListActionLogResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ActionLogEntries" }
            }
        },
        "ListActionRunsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowId", "workflowRunId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "workflowId"
                },
                "workflowRunId": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "workflowRunId"
                },
                "nextToken": {
                    "shape": "ListActionRunsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListActionRunsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListActionRunsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListActionRunsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListActionRunsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "actionRunSummaryList" }
            }
        },
        "ListActionVersionsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "actionId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "actionId": {
                    "shape": "ListActionVersionsRequestActionIdString",
                    "location": "uri",
                    "locationName": "actionId"
                },
                "status": {
                    "shape": "Status",
                    "location": "querystring",
                    "locationName": "status"
                },
                "nextToken": {
                    "shape": "ListActionVersionsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListActionVersionsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "sortBy": {
                    "shape": "ActionVersionsSortBy",
                    "location": "querystring",
                    "locationName": "sortBy"
                },
                "sortOrder": {
                    "shape": "ActionVersionsSortOrder",
                    "location": "querystring",
                    "locationName": "sortOrder"
                }
            }
        },
        "ListActionVersionsRequestActionIdString": {
            "type": "string",
            "max": 250,
            "min": 0
        },
        "ListActionVersionsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListActionVersionsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListActionVersionsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ActionVersionsSummaries" }
            }
        },
        "ListActionsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListActionsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListActionsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListActionsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListActionsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListActionsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ActionSummaries" }
            }
        },
        "ListActiveOrganizationInvitationsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "nextToken": { "shape": "ListActiveOrganizationInvitationsRequestNextTokenString" },
                "maxResults": { "shape": "ListActiveOrganizationInvitationsRequestMaxResultsInteger" }
            }
        },
        "ListActiveOrganizationInvitationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListActiveOrganizationInvitationsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListActiveOrganizationInvitationsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "OrganizationInvitationList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListActiveProjectInvitationsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "String" },
                "nextToken": { "shape": "ListActiveProjectInvitationsRequestNextTokenString" },
                "maxResults": { "shape": "ListActiveProjectInvitationsRequestMaxResultsInteger" }
            }
        },
        "ListActiveProjectInvitationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListActiveProjectInvitationsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListActiveProjectInvitationsResponse": {
            "type": "structure",
            "required": ["organizationName", "items"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "items": { "shape": "ProjectInvitationList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListArtifactPackageVersionAssetsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "format", "packageVersion"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListArtifactPackageVersionAssetsInputNextTokenString" },
                "pageSize": { "shape": "ListArtifactPackageVersionAssetsInputPageSizeInteger" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "packageVersion": { "shape": "ArtifactPackageVersionValueString" }
            }
        },
        "ListArtifactPackageVersionAssetsInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListArtifactPackageVersionAssetsInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListArtifactPackageVersionAssetsOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ArtifactPackageVersionAssets" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "String" },
                "name": { "shape": "String" },
                "version": { "shape": "ArtifactPackageVersionValueString" }
            }
        },
        "ListArtifactPackageVersionDependenciesInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "format", "packageVersion"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListArtifactPackageVersionDependenciesInputNextTokenString" },
                "pageSize": { "shape": "ListArtifactPackageVersionDependenciesInputPageSizeInteger" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "packageVersion": { "shape": "ArtifactPackageVersionValueString" }
            }
        },
        "ListArtifactPackageVersionDependenciesInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListArtifactPackageVersionDependenciesInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListArtifactPackageVersionDependenciesOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ArtifactPackageVersionDependencies" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "String" },
                "name": { "shape": "String" },
                "version": { "shape": "ArtifactPackageVersionValueString" }
            }
        },
        "ListArtifactPackageVersionsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "format"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListArtifactPackageVersionsInputNextTokenString" },
                "pageSize": { "shape": "ListArtifactPackageVersionsInputPageSizeInteger" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "status": { "shape": "String" },
                "sortBy": { "shape": "String" }
            }
        },
        "ListArtifactPackageVersionsInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListArtifactPackageVersionsInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListArtifactPackageVersionsOutput": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "nextToken": { "shape": "String" },
                "items": { "shape": "ArtifactPackageVersionSummaryList" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "String" },
                "defaultDisplayVersion": { "shape": "String" }
            }
        },
        "ListArtifactPackagesInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "packagePrefix": { "shape": "String" },
                "nextToken": { "shape": "ListArtifactPackagesInputNextTokenString" },
                "pageSize": { "shape": "ListArtifactPackagesInputPageSizeInteger" }
            }
        },
        "ListArtifactPackagesInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListArtifactPackagesInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListArtifactPackagesOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ArtifactPackageSummaryList" }
            }
        },
        "ListArtifactRepositoriesInput": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryType": { "shape": "RepositoryTypeNameString" },
                "nextToken": { "shape": "ListArtifactRepositoriesInputNextTokenString" },
                "pageSize": { "shape": "ListArtifactRepositoriesInputPageSizeInteger" }
            }
        },
        "ListArtifactRepositoriesInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListArtifactRepositoriesInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListArtifactRepositoriesOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ArtifactRepositorySummaryList" }
            }
        },
        "ListAwsAccountRolesRequest": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "awsAccountName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "awsAccountName"
                },
                "nextToken": {
                    "shape": "ListAwsAccountRolesRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListAwsAccountRolesRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListAwsAccountRolesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListAwsAccountRolesRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListAwsAccountRolesResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "AwsAccountRoleList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListAwsAccountToEnvironmentAssociationsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "awsAccountName": {
                    "shape": "NameString",
                    "location": "querystring",
                    "locationName": "awsAccountName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "querystring",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "querystring",
                    "locationName": "environmentName"
                },
                "nextToken": {
                    "shape": "ListAwsAccountToEnvironmentAssociationsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListAwsAccountToEnvironmentAssociationsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListAwsAccountToEnvironmentAssociationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListAwsAccountToEnvironmentAssociationsRequestNextTokenString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "ListAwsAccountToEnvironmentAssociationsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "AwsAccountToEnvironmentAssociationList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListAwsAccountsOnboardingRequest": {
            "type": "structure",
            "required": ["organizationName", "regionName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "regionName": {
                    "shape": "RegionString",
                    "location": "querystring",
                    "locationName": "region"
                },
                "nextToken": {
                    "shape": "ListAwsAccountsOnboardingRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListAwsAccountsOnboardingRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListAwsAccountsOnboardingRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListAwsAccountsOnboardingRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListAwsAccountsOnboardingResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "AwsAccountOnboardingList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListAwsAccountsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "querystring",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "querystring",
                    "locationName": "environmentName"
                },
                "nextToken": {
                    "shape": "ListAwsAccountsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListAwsAccountsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListAwsAccountsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListAwsAccountsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListAwsAccountsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "AwsAccountList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListBlueprintsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "nextToken": { "shape": "ListBlueprintsRequestNextTokenString" },
                "pageSize": { "shape": "ListBlueprintsRequestPageSizeInteger" },
                "publisher": { "shape": "NameString" }
            }
        },
        "ListBlueprintsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListBlueprintsRequestPageSizeInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListBlueprintsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "BlueprintSummaries" }
            }
        },
        "ListCatalogActionVersionsRequest": {
            "type": "structure",
            "required": ["actionId"],
            "members": {
                "actionId": {
                    "shape": "ListCatalogActionVersionsRequestActionIdString",
                    "location": "uri",
                    "locationName": "actionId"
                },
                "nextToken": {
                    "shape": "ListCatalogActionVersionsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListCatalogActionVersionsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "sortBy": {
                    "shape": "CatalogActionVersionsSortBy",
                    "location": "querystring",
                    "locationName": "sortBy"
                },
                "sortOrder": {
                    "shape": "CatalogActionVersionsSortOrder",
                    "location": "querystring",
                    "locationName": "sortOrder"
                }
            }
        },
        "ListCatalogActionVersionsRequestActionIdString": {
            "type": "string",
            "max": 250,
            "min": 0
        },
        "ListCatalogActionVersionsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListCatalogActionVersionsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListCatalogActionVersionsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "CatalogActionVersionsSummaries" }
            }
        },
        "ListCatalogActionsRequest": {
            "type": "structure",
            "members": {
                "nextToken": {
                    "shape": "ListCatalogActionsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListCatalogActionsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListCatalogActionsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListCatalogActionsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListCatalogActionsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "CatalogActionSummaries" }
            }
        },
        "ListCodeCoverageReportsRequest": {
            "type": "structure",
            "required": ["organizationName", "actionRunId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "actionRunId": {
                    "shape": "ListCodeCoverageReportsRequestActionRunIdString",
                    "location": "querystring",
                    "locationName": "actionRunId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListCodeCoverageReportsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListCodeCoverageReportsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListCodeCoverageReportsRequestActionRunIdString": {
            "type": "string",
            "max": 128,
            "min": 16
        },
        "ListCodeCoverageReportsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListCodeCoverageReportsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListCodeCoverageReportsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "CodeCoverageReportSummaries" }
            }
        },
        "ListCodeCoverageResultItem": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "codeCoverageReportId",
                "repositoryName",
                "branchName",
                "commitId",
                "lineCoveragePercentage",
                "coveredLinesCount",
                "missedLinesCount"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ListCodeCoverageResultItemNameString" },
                "codeCoverageReportId": { "shape": "Uuid" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "commitId": { "shape": "String" },
                "lineCoveragePercentage": { "shape": "Percentage" },
                "coveredLinesCount": { "shape": "Integer" },
                "missedLinesCount": { "shape": "Integer" },
                "branchCoveragePercentage": { "shape": "Percentage" },
                "coveredBranchesCount": { "shape": "Integer" },
                "missedBranchesCount": { "shape": "Integer" },
                "additionalProperties": { "shape": "AdditionalProperties" }
            }
        },
        "ListCodeCoverageResultItemNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "ListCodeCoverageResultsRequest": {
            "type": "structure",
            "required": ["organizationName", "codeCoverageReportId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "codeCoverageReportId": {
                    "shape": "Uuid",
                    "location": "querystring",
                    "locationName": "codeCoverageReportId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListCodeCoverageResultsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListCodeCoverageResultsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "orderBy": { "shape": "CodeCoverageResultsOrderByFields" },
                "filters": { "shape": "CodeCoverageResultsFilters" }
            }
        },
        "ListCodeCoverageResultsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 150
        },
        "ListCodeCoverageResultsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListCodeCoverageResultsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ListCodeCoverageResultsResponseItems" }
            }
        },
        "ListCodeCoverageResultsResponseItems": {
            "type": "list",
            "member": { "shape": "ListCodeCoverageResultItem" }
        },
        "ListCodeCoverageResultsStatisticsRequest": {
            "type": "structure",
            "required": ["organizationName", "codeCoverageReportId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "codeCoverageReportId": {
                    "shape": "Uuid",
                    "location": "querystring",
                    "locationName": "codeCoverageReportId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListCodeCoverageResultsStatisticsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListCodeCoverageResultsStatisticsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "orderBy": { "shape": "CodeCoverageResultsOrderByFields" },
                "filters": { "shape": "CodeCoverageResultsFilters" }
            }
        },
        "ListCodeCoverageResultsStatisticsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 150
        },
        "ListCodeCoverageResultsStatisticsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListCodeCoverageResultsStatisticsResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "totalItems", "totalPages", "lineCoverage"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "totalItems": { "shape": "Integer" },
                "totalPages": { "shape": "Integer" },
                "lineCoverage": { "shape": "CoverageResult" },
                "branchCoverage": { "shape": "CoverageResult" }
            }
        },
        "ListCommentsForIssueInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueId", "order"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueId": { "shape": "String" },
                "nextToken": { "shape": "ListCommentsForIssueInputNextTokenString" },
                "pageSize": { "shape": "ListCommentsForIssueInputPageSizeInteger" },
                "order": { "shape": "CommentsOrderForIssue" }
            }
        },
        "ListCommentsForIssueInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListCommentsForIssueInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListCommentsForIssueOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "CommentsForIssueList" }
            }
        },
        "ListComputeFleetsMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListComputeFleetsMigrationInputNextTokenString" },
                "pageSize": { "shape": "ListComputeFleetsMigrationInputPageSizeInteger" }
            }
        },
        "ListComputeFleetsMigrationInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListComputeFleetsMigrationInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListComputeFleetsMigrationOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ComputeFleetSummariesMigration" }
            }
        },
        "ListComputeFleetsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListComputeFleetsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListComputeFleetsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListComputeFleetsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 25
        },
        "ListComputeFleetsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListComputeFleetsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ComputeFleetSummaries" }
            }
        },
        "ListConnectionsRequest": {
            "type": "structure",
            "required": ["organizationName", "providerId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "providerId": {
                    "shape": "ProviderIdString",
                    "location": "uri",
                    "locationName": "providerId"
                },
                "nextToken": {
                    "shape": "ListConnectionsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListConnectionsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListConnectionsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 30,
            "min": 1
        },
        "ListConnectionsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListConnectionsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ConnectionSummaries" }
            }
        },
        "ListDevEnvironmentsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "filters": { "shape": "Filters" },
                "nextToken": { "shape": "ListDevEnvironmentsRequestNextTokenString" },
                "maxResults": { "shape": "ListDevEnvironmentsRequestMaxResultsInteger" }
            }
        },
        "ListDevEnvironmentsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListDevEnvironmentsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListDevEnvironmentsResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "items"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "items": { "shape": "DevEnvironmentSummaryList" },
                "nextToken": { "shape": "ListDevEnvironmentsResponseNextTokenString" }
            }
        },
        "ListDevEnvironmentsResponseNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListDummyDataInput": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "nextToken": {
                    "shape": "ListDummyDataInputNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "pageSize": {
                    "shape": "ListDummyDataInputPageSizeInteger",
                    "location": "querystring",
                    "locationName": "page-size"
                },
                "dynamicQueryParams": {
                    "shape": "StringMap",
                    "location": "querystring"
                }
            }
        },
        "ListDummyDataInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListDummyDataInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListDummyDataOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "DummyDataSummaries" }
            }
        },
        "ListEnvironmentDeploymentTargetsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "environmentName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "environmentName"
                },
                "maxResults": {
                    "shape": "ListEnvironmentDeploymentTargetsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "ListEnvironmentDeploymentTargetsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListEnvironmentDeploymentTargetsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListEnvironmentDeploymentTargetsRequestNextTokenString": {
            "type": "string",
            "max": 64,
            "min": 1
        },
        "ListEnvironmentDeploymentTargetsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "EnvironmentDeploymentTargetsList" }
            }
        },
        "ListEnvironmentDeploymentsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "environmentName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "environmentName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "environmentName"
                },
                "maxResults": {
                    "shape": "ListEnvironmentDeploymentsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "ListEnvironmentDeploymentsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "filters": { "shape": "EnvironmentDeploymentFilterList" },
                "sortBy": { "shape": "EnvironmentDeploymentOrderingList" }
            }
        },
        "ListEnvironmentDeploymentsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListEnvironmentDeploymentsRequestNextTokenString": {
            "type": "string",
            "max": 1640,
            "min": 1
        },
        "ListEnvironmentDeploymentsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "EnvironmentDeploymentsList" },
                "totalCount": { "shape": "ListEnvironmentDeploymentsResponseTotalCountInteger" }
            }
        },
        "ListEnvironmentDeploymentsResponseTotalCountInteger": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "ListEnvironmentsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "maxResults": {
                    "shape": "ListEnvironmentsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "nextToken": {
                    "shape": "ListEnvironmentsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "filters": { "shape": "EnvironmentFilterList" },
                "sortBy": { "shape": "EnvironmentOrderingList" }
            }
        },
        "ListEnvironmentsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListEnvironmentsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListEnvironmentsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "ListEnvironmentsResponseNextTokenString" },
                "totalCount": { "shape": "ListEnvironmentsResponseTotalCountInteger" },
                "items": { "shape": "EnvironmentList" }
            }
        },
        "ListEnvironmentsResponseNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListEnvironmentsResponseTotalCountInteger": {
            "type": "integer",
            "box": true,
            "min": 0
        },
        "ListEventLogsRequest": {
            "type": "structure",
            "required": ["organizationName", "startTime", "endTime"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "startTime": {
                    "shape": "SyntheticTimestamp_date_time",
                    "location": "querystring",
                    "locationName": "startTime"
                },
                "endTime": {
                    "shape": "SyntheticTimestamp_date_time",
                    "location": "querystring",
                    "locationName": "endTime"
                },
                "nextToken": {
                    "shape": "ListEventLogsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListEventLogsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListEventLogsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 250,
            "min": 1
        },
        "ListEventLogsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListEventLogsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "EventLogEntries" }
            }
        },
        "ListExtensionInstallationsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "nextToken": {
                    "shape": "ListExtensionInstallationsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListExtensionInstallationsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListExtensionInstallationsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 10,
            "min": 1
        },
        "ListExtensionInstallationsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListExtensionInstallationsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ExtensionInstallationSummaries" }
            }
        },
        "ListExtensionIssueScopeSummaries": {
            "type": "list",
            "member": { "shape": "ExtensionIssueScopeSummary" }
        },
        "ListExtensionIssueScopesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "maxResults": { "shape": "ListExtensionIssueScopesRequestMaxResultsInteger" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListExtensionIssueScopesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 20,
            "min": 1
        },
        "ListExtensionIssueScopesResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ListExtensionIssueScopeSummaries" }
            }
        },
        "ListIncidentsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "status": {
                    "shape": "IncidentStatus",
                    "location": "querystring",
                    "locationName": "status"
                },
                "locale": {
                    "shape": "Locale",
                    "location": "querystring",
                    "locationName": "locale"
                },
                "nextToken": {
                    "shape": "ListIncidentsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListIncidentsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListIncidentsResponse": {
            "type": "structure",
            "required": ["organizationName", "items"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "items": { "shape": "IncidentSummaryList" },
                "nextToken": { "shape": "ListIncidentsResponseNextTokenString" }
            }
        },
        "ListIncidentsResponseNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListIssueStoreLabelsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "nextToken": {
                    "shape": "ListIssueStoreLabelsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListIssueStoreLabelsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListIssueStoreLabelsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 500,
            "min": 1
        },
        "ListIssueStoreLabelsRequestNextTokenString": {
            "type": "string",
            "max": 64,
            "min": 1
        },
        "ListIssueStoreLabelsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "ListIssueStoreLabelsResponseItemsList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListIssueStoreLabelsResponseItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreLabelObject" },
            "max": 200,
            "min": 0
        },
        "ListIssueStoreSavedViewsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "nextToken": {
                    "shape": "ListIssueStoreSavedViewsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListIssueStoreSavedViewsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListIssueStoreSavedViewsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 500,
            "min": 1
        },
        "ListIssueStoreSavedViewsRequestNextTokenString": {
            "type": "string",
            "max": 64,
            "min": 1
        },
        "ListIssueStoreSavedViewsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "ListIssueStoreSavedViewsResponseItemsList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListIssueStoreSavedViewsResponseItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreSavedViewObject" },
            "max": 50,
            "min": 0
        },
        "ListIssueStoreStatusesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "nextToken": {
                    "shape": "ListIssueStoreStatusesRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListIssueStoreStatusesRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListIssueStoreStatusesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 500,
            "min": 1
        },
        "ListIssueStoreStatusesRequestNextTokenString": {
            "type": "string",
            "max": 64,
            "min": 1
        },
        "ListIssueStoreStatusesResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "ListIssueStoreStatusesResponseItemsList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListIssueStoreStatusesResponseItemsList": {
            "type": "list",
            "member": { "shape": "IssueStoreStatusMigration" },
            "max": 50,
            "min": 0
        },
        "ListIssuesInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" },
                "archived": { "shape": "Boolean" },
                "nextToken": { "shape": "String" },
                "maxResults": { "shape": "Integer" },
                "lastUpdated": { "shape": "Timestamp" }
            }
        },
        "ListIssuesOutput": {
            "type": "structure",
            "required": ["issues"],
            "members": {
                "issues": { "shape": "IssueMetadataList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListIssuesRequestMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "IssueStoreNameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "archived": {
                    "shape": "Boolean",
                    "location": "querystring",
                    "locationName": "archived"
                },
                "nextToken": {
                    "shape": "ListIssuesRequestMigrationNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListIssuesRequestMigrationMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "lastUpdatedTime": {
                    "shape": "SyntheticTimestamp_date_time",
                    "location": "querystring",
                    "locationName": "lastUpdatedTime"
                }
            }
        },
        "ListIssuesRequestMigrationMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 500,
            "min": 1
        },
        "ListIssuesRequestMigrationNextTokenString": {
            "type": "string",
            "max": 64,
            "min": 1
        },
        "ListIssuesResponseMigration": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "IssueMetadataListMigration" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListLinkableIssueScopesInput": {
            "type": "structure",
            "required": ["organizationName", "connectionName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "connectionName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "connectionName"
                },
                "nextToken": { "shape": "ListLinkableIssueScopesInputNextTokenString" },
                "pageSize": { "shape": "ListLinkableIssueScopesInputPageSizeInteger" }
            }
        },
        "ListLinkableIssueScopesInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListLinkableIssueScopesInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListLinkableIssueScopesOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "IssueScopeLinkableSummaryList" }
            }
        },
        "ListLinkableSourceRepositoriesInput": {
            "type": "structure",
            "required": ["organizationName", "connectionName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "connectionName": { "shape": "NameString" },
                "nextToken": { "shape": "ListLinkableSourceRepositoriesInputNextTokenString" },
                "pageSize": { "shape": "ListLinkableSourceRepositoriesInputPageSizeInteger" }
            }
        },
        "ListLinkableSourceRepositoriesInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListLinkableSourceRepositoriesInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListLinkableSourceRepositoriesOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SourceRepositoryLinkableSummaryList" }
            }
        },
        "ListLinksRequest": {
            "type": "structure",
            "required": ["organizationName", "sourcePath"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "sourcePath": { "shape": "ResourceRefList" },
                "linkType": { "shape": "LinkType" },
                "nextToken": { "shape": "ListLinksRequestNextTokenString" },
                "maxResults": { "shape": "ListLinksRequestMaxResultsInteger" }
            }
        },
        "ListLinksRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 1000,
            "min": 1
        },
        "ListLinksRequestNextTokenString": {
            "type": "string",
            "max": 2000,
            "min": 1
        },
        "ListLinksResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ListLinksSummaryList" }
            }
        },
        "ListLinksSummary": {
            "type": "structure",
            "required": ["linkId", "destination", "linkType"],
            "members": {
                "linkId": { "shape": "LinkId" },
                "destination": { "shape": "LinkComponent" },
                "linkType": { "shape": "LinkType" }
            }
        },
        "ListLinksSummaryList": {
            "type": "list",
            "member": { "shape": "ListLinksSummary" }
        },
        "ListNotificationChannelsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListNotificationChannelsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListNotificationChannelsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListNotificationChannelsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 64,
            "min": 1
        },
        "ListNotificationChannelsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListNotificationChannelsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "NotificationChannelSummaries" }
            }
        },
        "ListNotificationClientsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "nextToken": {
                    "shape": "ListNotificationClientsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListNotificationClientsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListNotificationClientsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 64,
            "min": 1
        },
        "ListNotificationClientsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListNotificationClientsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "NotificationClientSummaries" }
            }
        },
        "ListOnboardingInput": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "nextToken": { "shape": "ListOnboardingInputNextTokenString" },
                "pageSize": { "shape": "ListOnboardingInputPageSizeInteger" }
            }
        },
        "ListOnboardingInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListOnboardingInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListOnboardingOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "OnboardingOutputs" }
            }
        },
        "ListOrganizationUsersRequest": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "nextToken": { "shape": "ListOrganizationUsersRequestNextTokenString" },
                "maxResults": { "shape": "ListOrganizationUsersRequestMaxResultsInteger" },
                "sortBy": { "shape": "OrganizationUsersSortBy" },
                "sortDirection": { "shape": "OrganizationUsersSortDirection" },
                "filters": { "shape": "OrganizationUsersFilters" }
            }
        },
        "ListOrganizationUsersRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListOrganizationUsersRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListOrganizationUsersResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "OrganizationUsersList" }
            }
        },
        "ListOrganizationsRequest": {
            "type": "structure",
            "members": {
                "nextToken": {
                    "shape": "ListOrganizationsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                }
            }
        },
        "ListOrganizationsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListOrganizationsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "OrganizationSummaries" }
            }
        },
        "ListPinnedProjectsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                }
            }
        },
        "ListPinnedProjectsResponse": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "items": { "shape": "PinnedProjectsList" }
            }
        },
        "ListPreviousProjectsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                }
            }
        },
        "ListPreviousProjectsResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "items": { "shape": "PreviousProjectsSummaries" }
            }
        },
        "ListProjectUsersRequest": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "nextToken": { "shape": "ListProjectUsersRequestNextTokenString" },
                "maxResults": { "shape": "ListProjectUsersRequestMaxResultsInteger" },
                "sortBy": { "shape": "ProjectUsersSortBy" },
                "sortDirection": { "shape": "ProjectUsersSortDirection" },
                "filters": { "shape": "ProjectUsersFilters" }
            }
        },
        "ListProjectUsersRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListProjectUsersRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListProjectUsersResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ProjectUsersList" }
            }
        },
        "ListProjectsRequest": {
            "type": "structure",
            "required": ["organizationName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "nextToken": {
                    "shape": "ListProjectsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListProjectsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "status": {
                    "shape": "String",
                    "location": "querystring",
                    "locationName": "status"
                }
            }
        },
        "ListProjectsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListProjectsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListProjectsResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "nextToken": { "shape": "String" },
                "items": { "shape": "ProjectSummaries" }
            }
        },
        "ListPullRequestCommentsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "pullRequestId", "order"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "pullRequestId": { "shape": "String" },
                "nextToken": { "shape": "ListPullRequestCommentsInputNextTokenString" },
                "pageSize": { "shape": "ListPullRequestCommentsInputPageSizeInteger" },
                "order": { "shape": "PullRequestCommentsOrder" }
            }
        },
        "ListPullRequestCommentsInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListPullRequestCommentsInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListPullRequestCommentsOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "PullRequestCommentsList" }
            }
        },
        "ListSecretsMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListSecretsMigrationInputNextTokenString" },
                "pageSize": { "shape": "ListSecretsMigrationInputPageSizeInteger" }
            }
        },
        "ListSecretsMigrationInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSecretsMigrationInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListSecretsMigrationOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SecretsMigrationSummary" }
            }
        },
        "ListSecretsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListSecretsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSecretsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListSecretsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListSecretsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSecretsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SecretsList" }
            }
        },
        "ListSoftwareCompositionAnalysisFindingsRequest": {
            "type": "structure",
            "required": ["organizationName", "softwareCompositionAnalysisReportId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "softwareCompositionAnalysisReportId": {
                    "shape": "Uuid",
                    "location": "querystring",
                    "locationName": "softwareCompositionAnalysisReportId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListSoftwareCompositionAnalysisFindingsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSoftwareCompositionAnalysisFindingsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "orderBy": { "shape": "SoftwareCompositionAnalysisFindingsOrderByFields" },
                "filters": { "shape": "SoftwareCompositionAnalysisFindingsFilters" }
            }
        },
        "ListSoftwareCompositionAnalysisFindingsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 150
        },
        "ListSoftwareCompositionAnalysisFindingsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListSoftwareCompositionAnalysisFindingsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ListSoftwareCompositionAnalysisFindingsResponseItems" }
            }
        },
        "ListSoftwareCompositionAnalysisFindingsResponseItem": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "softwareCompositionAnalysisReportId",
                "severity",
                "rule"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ListSoftwareCompositionAnalysisFindingsResponseItemNameString" },
                "softwareCompositionAnalysisReportId": { "shape": "Uuid" },
                "severity": { "shape": "AnalysisFindingSeverity" },
                "score": { "shape": "AnalysisFindingScore" },
                "category": { "shape": "String" },
                "rule": { "shape": "AnalysisFindingRule" },
                "message": { "shape": "AnalysisFindingMessage" },
                "recommendation": { "shape": "AnalysisFindingMessage" },
                "location": { "shape": "AnalysisFindingLocation" },
                "relatedLocations": { "shape": "RelatedAnalysisFindingLocations" }
            }
        },
        "ListSoftwareCompositionAnalysisFindingsResponseItemNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "ListSoftwareCompositionAnalysisFindingsResponseItems": {
            "type": "list",
            "member": { "shape": "ListSoftwareCompositionAnalysisFindingsResponseItem" }
        },
        "ListSoftwareCompositionAnalysisFindingsStatisticsRequest": {
            "type": "structure",
            "required": ["organizationName", "softwareCompositionAnalysisReportId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "softwareCompositionAnalysisReportId": {
                    "shape": "Uuid",
                    "location": "querystring",
                    "locationName": "softwareCompositionAnalysisReportId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListSoftwareCompositionAnalysisFindingsStatisticsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSoftwareCompositionAnalysisFindingsStatisticsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "orderBy": { "shape": "SoftwareCompositionAnalysisFindingsOrderByFields" },
                "filters": { "shape": "SoftwareCompositionAnalysisFindingsFilters" }
            }
        },
        "ListSoftwareCompositionAnalysisFindingsStatisticsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 150
        },
        "ListSoftwareCompositionAnalysisFindingsStatisticsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListSoftwareCompositionAnalysisFindingsStatisticsResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "totalFindings",
                "totalPages",
                "mappedSeverityCounts",
                "originalSeverityCounts",
                "categoryCounts"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "totalFindings": { "shape": "Integer" },
                "totalPages": { "shape": "Integer" },
                "mappedSeverityCounts": { "shape": "AnalysisCounters" },
                "originalSeverityCounts": { "shape": "AnalysisCounters" },
                "categoryCounts": { "shape": "AnalysisCounters" }
            }
        },
        "ListSoftwareCompositionAnalysisReportsRequest": {
            "type": "structure",
            "required": ["organizationName", "actionRunId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "actionRunId": {
                    "shape": "ListSoftwareCompositionAnalysisReportsRequestActionRunIdString",
                    "location": "querystring",
                    "locationName": "actionRunId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListSoftwareCompositionAnalysisReportsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSoftwareCompositionAnalysisReportsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListSoftwareCompositionAnalysisReportsRequestActionRunIdString": {
            "type": "string",
            "max": 128,
            "min": 16
        },
        "ListSoftwareCompositionAnalysisReportsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListSoftwareCompositionAnalysisReportsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSoftwareCompositionAnalysisReportsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SoftwareCompositionAnalysisReportSummaries" }
            }
        },
        "ListSoftwareTestingReportsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "String" },
                "branchName": { "shape": "String" },
                "workflowId": { "shape": "String" },
                "reportType": { "shape": "String" },
                "reportName": { "shape": "String" },
                "passingStatus": { "shape": "String" },
                "lastRunAt": { "shape": "String" },
                "nextToken": { "shape": "ListSoftwareTestingReportsRequestNextTokenString" },
                "pageSize": { "shape": "ListSoftwareTestingReportsRequestPageSizeInteger" },
                "sortBy": { "shape": "SortParam" }
            }
        },
        "ListSoftwareTestingReportsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListSoftwareTestingReportsRequestPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListSoftwareTestingReportsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SoftwareTestingReportSummaries" }
            }
        },
        "ListSourceBranchesInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "nextToken": { "shape": "ListSourceBranchesInputNextTokenString" },
                "pageSize": { "shape": "ListSourceBranchesInputPageSizeInteger" }
            }
        },
        "ListSourceBranchesInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourceBranchesInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListSourceBranchesOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SourceBranchSummaryList" }
            }
        },
        "ListSourceDifferenceMetadataInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "afterSourceCommitSha1"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "afterSourceCommitSha1": { "shape": "String" },
                "afterPath": { "shape": "String" },
                "beforeSourceCommitSha1": { "shape": "String" },
                "beforePath": { "shape": "String" },
                "nextToken": { "shape": "String" },
                "maxResults": { "shape": "Integer" }
            }
        },
        "ListSourceDifferenceMetadataOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "differences": { "shape": "SourceDifferenceMetadataList" }
            }
        },
        "ListSourcePullRequestToJiraIssueLinkInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "nextToken": { "shape": "ListSourcePullRequestToJiraIssueLinkInputNextTokenString" },
                "pageSize": { "shape": "ListSourcePullRequestToJiraIssueLinkInputPageSizeInteger" }
            }
        },
        "ListSourcePullRequestToJiraIssueLinkInputNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourcePullRequestToJiraIssueLinkInputPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListSourcePullRequestToJiraIssueLinkOutput": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SourcePullRequestToJiraIssueLinks" }
            }
        },
        "ListSourcePullRequestsFilter": {
            "type": "structure",
            "required": ["key", "value"],
            "members": {
                "key": { "shape": "ListSourcePullRequestsFilterKey" },
                "value": { "shape": "String" },
                "comparisonOperator": { "shape": "ListSourcePullRequestsFilterComparisonOperator" }
            }
        },
        "ListSourcePullRequestsFilterComparisonOperator": {
            "type": "string",
            "enum": ["EQUALS", "NOT_EQUALS", "GT", "GTE", "LT", "LTE", "BEGINS_WITH"]
        },
        "ListSourcePullRequestsFilterKey": {
            "type": "string",
            "enum": ["sourceRepositoryName", "title", "authorId", "status", "sourceBranchName", "destinationBranchName"]
        },
        "ListSourcePullRequestsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "maxResults": { "shape": "ListSourcePullRequestsInputMaxResultsInteger" },
                "nextToken": { "shape": "String" },
                "filters": { "shape": "ListSourcePullRequestsInputFiltersList" },
                "sortBy": { "shape": "ListSourcePullRequestsSortParam" }
            }
        },
        "ListSourcePullRequestsInputFiltersList": {
            "type": "list",
            "member": { "shape": "ListSourcePullRequestsFilter" },
            "max": 10,
            "min": 0
        },
        "ListSourcePullRequestsInputMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListSourcePullRequestsOutput": {
            "type": "structure",
            "members": {
                "items": { "shape": "SourcePullRequestSummaryList" },
                "nextToken": { "shape": "String" },
                "totalCount": { "shape": "Integer" }
            }
        },
        "ListSourcePullRequestsSortParam": {
            "type": "structure",
            "required": ["key", "direction"],
            "members": {
                "key": { "shape": "ListSourcePullRequestsSortParamKey" },
                "direction": { "shape": "SourceSortParamDirection" }
            }
        },
        "ListSourcePullRequestsSortParamKey": {
            "type": "string",
            "enum": [
                "title",
                "sourceRepositoryName",
                "number",
                "authorId",
                "creationTime",
                "lastUpdatedTime",
                "status",
                "sourceBranchName",
                "destinationBranchName"
            ]
        },
        "ListSourceReferencePoliciesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "referenceType": {
                    "shape": "ListSourceReferencePoliciesRequestReferenceTypeString",
                    "location": "querystring",
                    "locationName": "referenceType"
                },
                "deniedAction": {
                    "shape": "ListSourceReferencePoliciesRequestDeniedActionString",
                    "location": "querystring",
                    "locationName": "deniedAction"
                },
                "nextToken": {
                    "shape": "ListSourceReferencePoliciesRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSourceReferencePoliciesRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListSourceReferencePoliciesRequestDeniedActionString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "ListSourceReferencePoliciesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 250,
            "min": 1
        },
        "ListSourceReferencePoliciesRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourceReferencePoliciesRequestReferenceTypeString": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "ListSourceReferencePoliciesResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SourceReferencePoliciesSummaryList" }
            }
        },
        "ListSourceRepositoriesInputMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListSourceRepositoriesInputMigrationNextTokenString" },
                "pageSize": { "shape": "ListSourceRepositoriesInputMigrationPageSizeInteger" },
                "maxResults": { "shape": "Integer" }
            }
        },
        "ListSourceRepositoriesInputMigrationNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourceRepositoriesInputMigrationPageSizeInteger": {
            "type": "integer",
            "box": true,
            "min": 1
        },
        "ListSourceRepositoriesItem": {
            "type": "structure",
            "required": ["id", "name", "lastUpdatedTime", "createdTime"],
            "members": {
                "id": { "shape": "SourceRepositoryIdString" },
                "name": { "shape": "SourceRepositoryNameString" },
                "description": { "shape": "SourceRepositoryDescriptionString" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "createdTime": { "shape": "Timestamp" },
                "defaultBranchRef": { "shape": "SourceRepositoryBranchRefString" },
                "provider": { "shape": "GetSourceRepositoryProvider" }
            }
        },
        "ListSourceRepositoriesItems": {
            "type": "list",
            "member": { "shape": "ListSourceRepositoriesItem" }
        },
        "ListSourceRepositoriesOutputMigration": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "SourceRepositorySummaryListMigration" }
            }
        },
        "ListSourceRepositoriesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListSourceRepositoriesRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSourceRepositoriesRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListSourceRepositoriesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 200,
            "min": 1
        },
        "ListSourceRepositoriesRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourceRepositoriesResponse": {
            "type": "structure",
            "members": {
                "items": { "shape": "ListSourceRepositoriesItems" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListSourceRepositoryBranchesItem": {
            "type": "structure",
            "members": {
                "ref": { "shape": "SourceRepositoryBranchRefString" },
                "name": { "shape": "SourceRepositoryBranchString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "headCommitId": { "shape": "String" }
            }
        },
        "ListSourceRepositoryBranchesItems": {
            "type": "list",
            "member": { "shape": "ListSourceRepositoryBranchesItem" }
        },
        "ListSourceRepositoryBranchesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "nextToken": {
                    "shape": "ListSourceRepositoryBranchesRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSourceRepositoryBranchesRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListSourceRepositoryBranchesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListSourceRepositoryBranchesRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourceRepositoryBranchesResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ListSourceRepositoryBranchesItems" }
            }
        },
        "ListSourceRepositoryCommitDifferencesItem": {
            "type": "structure",
            "members": {
                "afterBlob": { "shape": "SourceRepositoryCommitDifferenceBlob" },
                "beforeBlob": { "shape": "SourceRepositoryCommitDifferenceBlob" },
                "renderContent": { "shape": "SourceRepositoryCommitDifferenceRenderContent" },
                "changeType": { "shape": "String" }
            }
        },
        "ListSourceRepositoryCommitDifferencesItems": {
            "type": "list",
            "member": { "shape": "ListSourceRepositoryCommitDifferencesItem" }
        },
        "ListSourceRepositoryCommitDifferencesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "afterCommitSpecifier", "diffView"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "nextToken": {
                    "shape": "ListSourceRepositoryCommitDifferencesRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "afterCommitSpecifier": {
                    "shape": "String",
                    "location": "querystring",
                    "locationName": "afterCommitSpecifier"
                },
                "afterPath": {
                    "shape": "String",
                    "location": "querystring",
                    "locationName": "afterPath"
                },
                "beforeCommitSpecifier": {
                    "shape": "String",
                    "location": "querystring",
                    "locationName": "beforeCommitSpecifier"
                },
                "beforePath": {
                    "shape": "String",
                    "location": "querystring",
                    "locationName": "beforePath"
                },
                "sizeInBytes": {
                    "shape": "Integer",
                    "location": "querystring",
                    "locationName": "sizeInBytes"
                },
                "diffView": {
                    "shape": "SourceRepositoryCommitDiffView",
                    "location": "querystring",
                    "locationName": "diffView"
                },
                "ignoreWhitespace": {
                    "shape": "Boolean",
                    "location": "querystring",
                    "locationName": "ignoreWhitespace"
                },
                "unhighlightedLargeDiff": {
                    "shape": "Boolean",
                    "location": "querystring",
                    "locationName": "unhighlightedLargeDiff"
                }
            }
        },
        "ListSourceRepositoryCommitDifferencesRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourceRepositoryCommitDifferencesResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "differences": { "shape": "ListSourceRepositoryCommitDifferencesItems" }
            }
        },
        "ListSourceRepositoryCommitsItem": {
            "type": "structure",
            "members": {
                "sourceRepositoryName": { "shape": "String" },
                "sourceRepositoryCommitId": { "shape": "String" },
                "treeId": { "shape": "String" },
                "parentIds": { "shape": "SourceRepositoryCommitParentIdsList" },
                "message": { "shape": "String" },
                "author": { "shape": "SourceRepositoryCommitAuthor" },
                "committer": { "shape": "SourceRepositoryCommitAuthor" }
            }
        },
        "ListSourceRepositoryCommitsItems": {
            "type": "list",
            "member": { "shape": "ListSourceRepositoryCommitsItem" }
        },
        "ListSourceRepositoryCommitsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "headCommitId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "headCommitId": {
                    "shape": "ListSourceRepositoryCommitsRequestHeadCommitIdString",
                    "location": "querystring",
                    "locationName": "headCommitId"
                },
                "nextToken": {
                    "shape": "ListSourceRepositoryCommitsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListSourceRepositoryCommitsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "tailCommitId": {
                    "shape": "ListSourceRepositoryCommitsRequestTailCommitIdString",
                    "location": "querystring",
                    "locationName": "tailCommitId"
                },
                "sort": {
                    "shape": "ListSourceRepositoryCommitsSort",
                    "location": "querystring",
                    "locationName": "sort"
                }
            }
        },
        "ListSourceRepositoryCommitsRequestHeadCommitIdString": {
            "type": "string",
            "max": 60,
            "min": 0
        },
        "ListSourceRepositoryCommitsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 200,
            "min": 1
        },
        "ListSourceRepositoryCommitsRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListSourceRepositoryCommitsRequestTailCommitIdString": {
            "type": "string",
            "max": 60,
            "min": 0
        },
        "ListSourceRepositoryCommitsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ListSourceRepositoryCommitsItems" }
            }
        },
        "ListSourceRepositoryCommitsSort": {
            "type": "string",
            "enum": ["Topological", "DateOrder"]
        },
        "ListSourceRevisionsInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "nextToken": { "shape": "String" },
                "maxResults": { "shape": "Integer" }
            }
        },
        "ListSourceRevisionsOutput": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "items": { "shape": "SourceRevisionSummaryList" },
                "nextToken": { "shape": "String" }
            }
        },
        "ListStaticAnalysisFindingStatisticsResponse": {
            "type": "structure",
            "required": [
                "totalFindings",
                "totalPages",
                "mappedSeverityCounts",
                "originalSeverityCounts",
                "categoryCounts"
            ],
            "members": {
                "totalFindings": { "shape": "Integer" },
                "totalPages": { "shape": "Integer" },
                "mappedSeverityCounts": { "shape": "AnalysisCounters" },
                "originalSeverityCounts": { "shape": "AnalysisCounters" },
                "categoryCounts": { "shape": "AnalysisCounters" }
            }
        },
        "ListStaticAnalysisFindingsRequest": {
            "type": "structure",
            "required": ["organizationName", "reportSummaryId", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "reportSummaryId": { "shape": "ListStaticAnalysisFindingsRequestReportSummaryIdString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListStaticAnalysisFindingsRequestNextTokenString" },
                "maxResults": { "shape": "ListStaticAnalysisFindingsRequestMaxResultsInteger" },
                "order": { "shape": "OrderingList" },
                "filter": { "shape": "FilterList" }
            }
        },
        "ListStaticAnalysisFindingsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListStaticAnalysisFindingsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListStaticAnalysisFindingsRequestReportSummaryIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "ListStaticAnalysisFindingsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "StaticAnalysisFindingResponseItems" }
            }
        },
        "ListStaticAnalysisFindingsStatisticsRequest": {
            "type": "structure",
            "required": ["organizationName", "reportSummaryId", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "reportSummaryId": { "shape": "ListStaticAnalysisFindingsStatisticsRequestReportSummaryIdString" },
                "projectName": { "shape": "NameString" },
                "nextToken": { "shape": "ListStaticAnalysisFindingsStatisticsRequestNextTokenString" },
                "maxResults": { "shape": "ListStaticAnalysisFindingsStatisticsRequestMaxResultsInteger" },
                "order": { "shape": "OrderingList" },
                "filter": { "shape": "FilterList" }
            }
        },
        "ListStaticAnalysisFindingsStatisticsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListStaticAnalysisFindingsStatisticsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListStaticAnalysisFindingsStatisticsRequestReportSummaryIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "ListStaticAnalysisReportsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "NameString" },
                "sourceRepositoryBranchName": { "shape": "NameString" },
                "actionRunId": { "shape": "Uuid" },
                "nextToken": { "shape": "ListStaticAnalysisReportsRequestNextTokenString" },
                "maxResults": { "shape": "ListStaticAnalysisReportsRequestMaxResultsInteger" }
            }
        },
        "ListStaticAnalysisReportsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListStaticAnalysisReportsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListStaticAnalysisReportsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "StaticAnalysisReportSummaries" }
            }
        },
        "ListTestCaseResultItem": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "testReportId",
                "shortName",
                "status",
                "durationInNanoseconds"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ListTestCaseResultItemNameString" },
                "testReportId": { "shape": "Uuid" },
                "shortName": { "shape": "String" },
                "status": { "shape": "TestCaseResultType" },
                "durationInNanoseconds": { "shape": "Long" },
                "testCaseStartTime": { "shape": "SyntheticTimestamp_date_time" },
                "message": { "shape": "String" },
                "isMessageTruncated": { "shape": "IsMessageTruncated" },
                "additionalProperties": { "shape": "AdditionalProperties" },
                "testGroupIds": { "shape": "StringList" }
            }
        },
        "ListTestCaseResultItemNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "ListTestCaseResultsRequest": {
            "type": "structure",
            "required": ["organizationName", "testReportId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "testReportId": {
                    "shape": "Uuid",
                    "location": "querystring",
                    "locationName": "testReportId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListTestCaseResultsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListTestCaseResultsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "orderBy": { "shape": "TestCasesOrderByFields" },
                "filters": { "shape": "TestCasesFilters" }
            }
        },
        "ListTestCaseResultsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 150
        },
        "ListTestCaseResultsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListTestCaseResultsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "ListTestCaseResultsResponseItems" }
            }
        },
        "ListTestCaseResultsResponseItems": {
            "type": "list",
            "member": { "shape": "ListTestCaseResultItem" }
        },
        "ListTestCaseResultsStatisticsRequest": {
            "type": "structure",
            "required": ["organizationName", "testReportId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "testReportId": {
                    "shape": "Uuid",
                    "location": "querystring",
                    "locationName": "testReportId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListTestCaseResultsStatisticsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListTestCaseResultsStatisticsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "orderBy": { "shape": "TestCasesOrderByFields" },
                "filters": { "shape": "TestCasesFilters" }
            }
        },
        "ListTestCaseResultsStatisticsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 150
        },
        "ListTestCaseResultsStatisticsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListTestCaseResultsStatisticsResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "totalTestCases",
                "totalPages",
                "totalDurationInNanoseconds",
                "testCaseResultCounts"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "totalTestCases": { "shape": "Integer" },
                "totalPages": { "shape": "Integer" },
                "totalDurationInNanoseconds": { "shape": "Long" },
                "testCaseResultCounts": { "shape": "TestCaseResultCounts" }
            }
        },
        "ListTestReportStatusesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "actionRunId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "actionRunId": { "shape": "ListTestReportStatusesRequestActionRunIdString" },
                "nextToken": { "shape": "ListTestReportStatusesRequestNextTokenString" },
                "maxResults": { "shape": "ListTestReportStatusesRequestMaxResultsInteger" }
            }
        },
        "ListTestReportStatusesRequestActionRunIdString": {
            "type": "string",
            "max": 128,
            "min": 16
        },
        "ListTestReportStatusesRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListTestReportStatusesRequestNextTokenString": {
            "type": "string",
            "min": 1
        },
        "ListTestReportStatusesResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "TestReportStatuses" }
            }
        },
        "ListTestReportsRequest": {
            "type": "structure",
            "required": ["organizationName", "actionRunId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "actionRunId": {
                    "shape": "ListTestReportsRequestActionRunIdString",
                    "location": "querystring",
                    "locationName": "actionRunId"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListTestReportsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListTestReportsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                }
            }
        },
        "ListTestReportsRequestActionRunIdString": {
            "type": "string",
            "max": 128,
            "min": 16
        },
        "ListTestReportsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50
        },
        "ListTestReportsRequestNextTokenString": {
            "type": "string",
            "max": 4096,
            "min": 1
        },
        "ListTestReportsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "TestReportSummaries" }
            }
        },
        "ListTrackingSummaryForSourceCommitsRequest": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "sourceRepositoryName",
                "sourceBranchName",
                "sourceRepositoryCommitIds"
            ],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "String",
                    "location": "querystring",
                    "locationName": "sourceRepositoryName"
                },
                "sourceBranchName": {
                    "shape": "String",
                    "location": "querystring",
                    "locationName": "sourceBranchName"
                },
                "sourceRepositoryCommitIds": {
                    "shape": "ListTrackingSummaryForSourceCommitsRequestSourceRepositoryCommitIdsList",
                    "location": "querystring",
                    "locationName": "sourceRepositoryCommitIds"
                }
            }
        },
        "ListTrackingSummaryForSourceCommitsRequestSourceRepositoryCommitIdsList": {
            "type": "list",
            "member": { "shape": "String" },
            "max": 15,
            "min": 0
        },
        "ListTrackingSummaryForSourceCommitsResponse": {
            "type": "structure",
            "required": ["trackingSummaries"],
            "members": {
                "trackingSummaries": { "shape": "ListTrackingSummaryForSourceCommitsResponseTrackingSummariesList" }
            }
        },
        "ListTrackingSummaryForSourceCommitsResponseTrackingSummariesList": {
            "type": "list",
            "member": { "shape": "TrackingSummary" },
            "max": 15,
            "min": 0
        },
        "ListWorkflowRunsRequest": {
            "type": "structure",
            "required": ["organizationName", "workflowId", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "workflowId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowId"
                },
                "projectName": {
                    "shape": "ListWorkflowRunsRequestProjectNameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListWorkflowRunsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListWorkflowRunsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "sortBy": { "shape": "WorkflowRunOrderingList" },
                "_filters": { "shape": "WorkflowRunFilters" }
            }
        },
        "ListWorkflowRunsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 50,
            "min": 1
        },
        "ListWorkflowRunsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListWorkflowRunsRequestProjectNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "ListWorkflowRunsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "WorkflowRunSummaries" },
                "totalCount": { "shape": "Integer" }
            }
        },
        "ListWorkflowsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName"],
            "members": {
                "organizationName": {
                    "shape": "ListWorkflowsRequestOrganizationNameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "nextToken": {
                    "shape": "ListWorkflowsRequestNextTokenString",
                    "location": "querystring",
                    "locationName": "nextToken"
                },
                "maxResults": {
                    "shape": "ListWorkflowsRequestMaxResultsInteger",
                    "location": "querystring",
                    "locationName": "maxResults"
                },
                "sortBy": { "shape": "WorkflowOrderingList" },
                "_filters": { "shape": "WorkflowFilters" }
            }
        },
        "ListWorkflowsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "ListWorkflowsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "ListWorkflowsRequestOrganizationNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "ListWorkflowsResponse": {
            "type": "structure",
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "WorkflowSummaries" },
                "totalCount": { "shape": "Integer" }
            }
        },
        "Locale": {
            "type": "string",
            "pattern": "[a-zA-Z_-]{2,16}"
        },
        "LoginQueryParametersMap": {
            "type": "map",
            "key": { "shape": "String" },
            "value": { "shape": "String" }
        },
        "Long": {
            "type": "long",
            "box": true
        },
        "MaxAssigneesPerIssue": {
            "type": "integer",
            "max": 10,
            "min": 1
        },
        "MaxAssigneesPerIssueMigration": {
            "type": "integer",
            "max": 10,
            "min": 1
        },
        "MergeOption": {
            "type": "string",
            "enum": ["FAST_FORWARD_MERGE", "SQUASH_MERGE", "THREE_WAY_MERGE"]
        },
        "MergeSourcePullRequestByFastForwardInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "revisionNumber": { "shape": "Integer" }
            }
        },
        "MergeSourcePullRequestByFastForwardOutput": {
            "type": "structure",
            "required": ["number"],
            "members": {
                "number": { "shape": "SourcePullRequestNumber" }
            }
        },
        "MergeSourcePullRequestBySquashInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "revisionNumber": { "shape": "Integer" },
                "commitMessage": { "shape": "String" }
            }
        },
        "MergeSourcePullRequestBySquashOutput": {
            "type": "structure",
            "required": ["number"],
            "members": {
                "number": { "shape": "String" }
            }
        },
        "MetricAggregationType": {
            "type": "string",
            "enum": ["MAX", "MIN", "SUM", "AVG", "COUNT", "PERCENTAGE"]
        },
        "MetricBucket": {
            "type": "structure",
            "required": ["title", "value"],
            "members": {
                "title": { "shape": "String" },
                "value": { "shape": "Double" }
            }
        },
        "MetricBucketList": {
            "type": "list",
            "member": { "shape": "MetricBucket" }
        },
        "MetricBucketResult": {
            "type": "structure",
            "required": ["data"],
            "members": {
                "data": { "shape": "MetricBucketList" }
            }
        },
        "MetricFilterMap": {
            "type": "map",
            "key": { "shape": "MetricFilterMapKeyString" },
            "value": { "shape": "MetricFilterMapValueString" }
        },
        "MetricFilterMapKeyString": {
            "type": "string",
            "min": 1
        },
        "MetricFilterMapValueString": {
            "type": "string",
            "min": 1
        },
        "MetricHistogramInterval": {
            "type": "structure",
            "required": ["x", "y"],
            "members": {
                "x": { "shape": "String" },
                "y": { "shape": "Double" }
            }
        },
        "MetricHistogramIntervalList": {
            "type": "list",
            "member": { "shape": "MetricHistogramInterval" }
        },
        "MetricHistogramResult": {
            "type": "structure",
            "required": ["data"],
            "members": {
                "data": { "shape": "MetricHistogramIntervalList" }
            }
        },
        "MetricType": {
            "type": "string",
            "enum": ["HISTOGRAM", "VALUE"]
        },
        "MetricValueResult": {
            "type": "structure",
            "required": ["data"],
            "members": {
                "data": { "shape": "Double" }
            }
        },
        "NameString": {
            "type": "string",
            "max": 63,
            "min": 3,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "NameStringList": {
            "type": "list",
            "member": { "shape": "NameString" }
        },
        "NextQuestionString": {
            "type": "string",
            "enum": ["DEMOGRAPHIC", "ORGANIZATION", "PROJECT", "TEMPLATES", "LOADER"]
        },
        "NotificationChannelDetails": {
            "type": "structure",
            "members": {
                "slack": { "shape": "NotificationChannelSlackDetails" }
            }
        },
        "NotificationChannelSlackDetails": {
            "type": "structure",
            "required": ["channelId", "workspaceId"],
            "members": {
                "channelId": { "shape": "SlackChannelId" },
                "workspaceId": { "shape": "SlackWorkspaceId" }
            }
        },
        "NotificationChannelSummaries": {
            "type": "list",
            "member": { "shape": "NotificationChannelSummary" }
        },
        "NotificationChannelSummary": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "alias", "type", "details"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "alias": { "shape": "NameString" },
                "type": { "shape": "NotificationChannelType" },
                "details": { "shape": "NotificationChannelDetails" }
            }
        },
        "NotificationChannelType": {
            "type": "string",
            "enum": ["Slack"]
        },
        "NotificationClientDetails": {
            "type": "structure",
            "members": {
                "slack": { "shape": "NotificationClientSlackDetails" }
            }
        },
        "NotificationClientSlackDetails": {
            "type": "structure",
            "required": ["workspaceId", "workspaceName"],
            "members": {
                "workspaceId": { "shape": "NameString" },
                "workspaceName": { "shape": "NameString" }
            }
        },
        "NotificationClientSummaries": {
            "type": "list",
            "member": { "shape": "NotificationClientSummary" }
        },
        "NotificationClientSummary": {
            "type": "structure",
            "required": ["organizationName", "id", "type", "details"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "type": { "shape": "NotificationClientType" },
                "details": { "shape": "NotificationClientDetails" }
            }
        },
        "NotificationClientType": {
            "type": "string",
            "enum": ["Slack"]
        },
        "OAuthCode": {
            "type": "string",
            "pattern": "[0-9a-f.]{64,128}",
            "sensitive": true
        },
        "OAuthParameters": {
            "type": "structure",
            "required": ["code", "redirectUrl", "state"],
            "members": {
                "code": { "shape": "OAuthCode" },
                "redirectUrl": { "shape": "Url" },
                "state": { "shape": "SensitiveUuid" }
            }
        },
        "OAuthVersion": {
            "type": "string",
            "enum": ["v2"]
        },
        "OnboardingOutput": {
            "type": "structure",
            "members": {
                "onboardingId": { "shape": "String" },
                "submitted": { "shape": "Boolean" },
                "dismissed": { "shape": "Boolean" },
                "nextQuestion": { "shape": "NextQuestionString" },
                "sections": { "shape": "QuestionSection" }
            }
        },
        "OnboardingOutputs": {
            "type": "list",
            "member": { "shape": "OnboardingOutput" }
        },
        "OperationType": {
            "type": "string",
            "enum": ["READONLY", "MUTATION"]
        },
        "Ordering": {
            "type": "structure",
            "required": ["key", "direction"],
            "members": {
                "key": { "shape": "String" },
                "direction": { "shape": "String" }
            }
        },
        "OrderingList": {
            "type": "list",
            "member": { "shape": "Ordering" },
            "max": 3,
            "min": 0
        },
        "OrganizationActivityFeedItem": {
            "type": "structure",
            "required": ["type", "organizationName", "status", "title"],
            "members": {
                "type": { "shape": "ActivityFeedEventType" },
                "organizationName": { "shape": "String" },
                "projectName": { "shape": "String" },
                "primaryActor": { "shape": "OrganizationActivityFeedParticipant" },
                "primaryResource": { "shape": "ResourceRef" },
                "status": { "shape": "ActivityFeedItemStatus" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "title": { "shape": "String" },
                "content": { "shape": "String" }
            }
        },
        "OrganizationActivityFeedItemList": {
            "type": "list",
            "member": { "shape": "OrganizationActivityFeedItem" }
        },
        "OrganizationActivityFeedParticipant": {
            "type": "structure",
            "members": {
                "type": { "shape": "ActivityFeedParticipantType" },
                "name": { "shape": "String" }
            }
        },
        "OrganizationInvitationClientToken": {
            "type": "string",
            "max": 64,
            "min": 64,
            "pattern": "[0-9a-zA-Z]*",
            "sensitive": true
        },
        "OrganizationInvitationList": {
            "type": "list",
            "member": { "shape": "OrganizationInvitationListMember" }
        },
        "OrganizationInvitationListMember": {
            "type": "structure",
            "required": [
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "organizationName",
                "status",
                "inviteeRole"
            ],
            "members": {
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "organizationName": { "shape": "String" },
                "status": { "shape": "InvitationStatus" },
                "inviteeRole": { "shape": "OrganizationInviteeRole" },
                "id": { "shape": "String" }
            }
        },
        "OrganizationInviteeRole": {
            "type": "string",
            "enum": ["ADMIN"]
        },
        "OrganizationMember": {
            "type": "structure",
            "required": ["userId", "username", "displayName", "emailAddress", "roleId"],
            "members": {
                "userId": { "shape": "String" },
                "username": { "shape": "String" },
                "displayName": { "shape": "String" },
                "emailAddress": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "OrganizationMemberMigration": {
            "type": "structure",
            "required": ["userId", "username", "displayName", "emailAddress", "roleId"],
            "members": {
                "userId": { "shape": "String" },
                "username": { "shape": "String" },
                "displayName": { "shape": "String" },
                "emailAddress": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "OrganizationMembersList": {
            "type": "list",
            "member": { "shape": "OrganizationMember" }
        },
        "OrganizationMembersListMigration": {
            "type": "list",
            "member": { "shape": "OrganizationMemberMigration" }
        },
        "OrganizationSummaries": {
            "type": "list",
            "member": { "shape": "OrganizationSummary" }
        },
        "OrganizationSummary": {
            "type": "structure",
            "required": ["name", "regionName"],
            "members": {
                "name": { "shape": "NameString" },
                "regionName": { "shape": "RegionString" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" }
            }
        },
        "OrganizationUsageReport": {
            "type": "structure",
            "required": ["limitPeriod", "resourceType", "usageAmount", "limitAmount"],
            "members": {
                "limitPeriod": { "shape": "String" },
                "resourceType": { "shape": "String" },
                "usageAmount": { "shape": "Double" },
                "limitAmount": { "shape": "Double" }
            }
        },
        "OrganizationUsageReportList": {
            "type": "list",
            "member": { "shape": "OrganizationUsageReport" }
        },
        "OrganizationUser": {
            "type": "structure",
            "required": ["id", "username", "displayName", "emailAddress", "roleId"],
            "members": {
                "id": { "shape": "String" },
                "username": { "shape": "String" },
                "displayName": { "shape": "String" },
                "emailAddress": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "OrganizationUsersFilter": {
            "type": "structure",
            "members": {
                "name": { "shape": "OrganizationUsersFilterName" },
                "value": { "shape": "String" }
            }
        },
        "OrganizationUsersFilterName": {
            "type": "string",
            "enum": ["USERNAME", "DISPLAY_NAME", "EMAIL_ADDRESS", "ROLE"]
        },
        "OrganizationUsersFilters": {
            "type": "list",
            "member": { "shape": "OrganizationUsersFilter" }
        },
        "OrganizationUsersList": {
            "type": "list",
            "member": { "shape": "OrganizationUser" }
        },
        "OrganizationUsersSortBy": {
            "type": "string",
            "enum": ["USERNAME", "DISPLAY_NAME", "EMAIL_ADDRESS", "ROLE"]
        },
        "OrganizationUsersSortDirection": {
            "type": "string",
            "enum": ["ASCENDING", "DESCENDING"]
        },
        "Percentage": {
            "type": "float",
            "max": 100,
            "min": 0
        },
        "PersistentStorage": {
            "type": "structure",
            "required": ["sizeInGiB"],
            "members": {
                "sizeInGiB": { "shape": "PersistentStorageSizeInGiBInteger" }
            }
        },
        "PersistentStorageConfiguration": {
            "type": "structure",
            "required": ["sizeInGiB"],
            "members": {
                "sizeInGiB": { "shape": "PersistentStorageConfigurationSizeInGiBInteger" }
            }
        },
        "PersistentStorageConfigurationSizeInGiBInteger": {
            "type": "integer",
            "box": true,
            "max": 64,
            "min": 0
        },
        "PersistentStorageSizeInGiBInteger": {
            "type": "integer",
            "box": true,
            "max": 64,
            "min": 0
        },
        "PinnedProjectMember": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" }
            }
        },
        "PinnedProjectStatus": {
            "type": "string",
            "enum": ["PINNED", "NOT_PINNED"]
        },
        "PinnedProjectsList": {
            "type": "list",
            "member": { "shape": "PinnedProjectMember" }
        },
        "PreviewEnvironment": {
            "type": "structure",
            "required": ["name", "contents"],
            "members": {
                "name": { "shape": "String" },
                "contents": { "shape": "String" },
                "digest": { "shape": "String" }
            }
        },
        "PreviewEnvironments": {
            "type": "list",
            "member": { "shape": "PreviewEnvironment" }
        },
        "PreviewFiles": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "PreviewFolders": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "PreviewOverview": {
            "type": "structure",
            "required": ["sourceRepositories", "environments", "workflows"],
            "members": {
                "sourceRepositories": { "shape": "PreviewSourceRepositories" },
                "environments": { "shape": "PreviewEnvironments" },
                "workflows": { "shape": "PreviewWorkflows" }
            }
        },
        "PreviewSourceRepositories": {
            "type": "list",
            "member": { "shape": "PreviewSourceRepository" }
        },
        "PreviewSourceRepository": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "String" },
                "digest": { "shape": "String" }
            }
        },
        "PreviewWorkflow": {
            "type": "structure",
            "required": ["sourceRepositoryName", "contents", "name"],
            "members": {
                "sourceRepositoryName": { "shape": "String" },
                "contents": { "shape": "String" },
                "name": { "shape": "String" },
                "digest": { "shape": "String" }
            }
        },
        "PreviewWorkflows": {
            "type": "list",
            "member": { "shape": "PreviewWorkflow" }
        },
        "PreviousProjectsSummaries": {
            "type": "list",
            "member": { "shape": "PreviousProjectsSummary" }
        },
        "PreviousProjectsSummary": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "String" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" }
            }
        },
        "ProductArea": {
            "type": "string",
            "enum": ["NOTIFICATIONS"]
        },
        "ProductAreaList": {
            "type": "list",
            "member": { "shape": "ProductArea" }
        },
        "ProjectActivityFeedItem": {
            "type": "structure",
            "required": ["type", "organizationName", "projectName", "status", "title"],
            "members": {
                "type": { "shape": "ActivityFeedEventType" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "primaryActor": { "shape": "ProjectActivityFeedParticipant" },
                "primaryResource": { "shape": "ResourceRef" },
                "status": { "shape": "ActivityFeedItemStatus" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "title": { "shape": "String" },
                "content": { "shape": "String" }
            }
        },
        "ProjectActivityFeedItemList": {
            "type": "list",
            "member": { "shape": "ProjectActivityFeedItem" }
        },
        "ProjectActivityFeedParticipant": {
            "type": "structure",
            "members": {
                "type": { "shape": "ActivityFeedParticipantType" },
                "name": { "shape": "String" }
            }
        },
        "ProjectDescription": {
            "type": "string",
            "max": 200,
            "min": 0,
            "pattern": "[a-zA-Z0-9]+(?:[-_a-zA-Z0-9.,;:/\\+=?&$%    ])*"
        },
        "ProjectDisplayName": {
            "type": "string",
            "max": 63,
            "min": 3,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\. ][a-zA-Z0-9]+)*"
        },
        "ProjectInformation": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "projectId": { "shape": "String" }
            }
        },
        "ProjectInvitation": {
            "type": "structure",
            "required": [
                "id",
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "projectName",
                "status",
                "inviteeRole"
            ],
            "members": {
                "id": { "shape": "String" },
                "title": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "projectName": { "shape": "String" },
                "status": { "shape": "ProjectInvitationStatus" },
                "inviteeRole": { "shape": "ProjectInviteeRole" }
            }
        },
        "ProjectInvitationClientToken": {
            "type": "string",
            "max": 64,
            "min": 64,
            "pattern": "[0-9a-zA-Z]*",
            "sensitive": true
        },
        "ProjectInvitationList": {
            "type": "list",
            "member": { "shape": "ProjectInvitation" }
        },
        "ProjectInvitationStatus": {
            "type": "string",
            "enum": [
                "MEMBER",
                "INVITATION_SENDING",
                "INVITATION_SENT",
                "Failure Sending",
                "Invitation Cancelled",
                "Invitation Resent"
            ]
        },
        "ProjectInviteeRole": {
            "type": "string",
            "enum": ["ADMIN", "CONTRIBUTOR", "VIEWER", "OWNER"]
        },
        "ProjectMember": {
            "type": "structure",
            "required": ["userId", "username", "displayName", "emailAddress", "roleId"],
            "members": {
                "userId": { "shape": "String" },
                "username": { "shape": "String" },
                "displayName": { "shape": "String" },
                "emailAddress": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "ProjectMemberMigration": {
            "type": "structure",
            "required": ["userId", "username", "displayName", "emailAddress", "roleId"],
            "members": {
                "userId": { "shape": "String" },
                "username": { "shape": "String" },
                "displayName": { "shape": "String" },
                "emailAddress": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "ProjectMembersList": {
            "type": "list",
            "member": { "shape": "ProjectMember" }
        },
        "ProjectMembersListMigration": {
            "type": "list",
            "member": { "shape": "ProjectMemberMigration" }
        },
        "ProjectNotificationSettingsItem": {
            "type": "structure",
            "required": ["resourceId", "status", "eventType", "channelIds"],
            "members": {
                "resourceId": { "shape": "ProjectNotificationSettingsResourceId" },
                "status": { "shape": "ProjectNotificationSettingsStatus" },
                "eventType": { "shape": "NameString" },
                "channelIds": { "shape": "NameStringList" }
            }
        },
        "ProjectNotificationSettingsItemList": {
            "type": "list",
            "member": { "shape": "ProjectNotificationSettingsItem" }
        },
        "ProjectNotificationSettingsResourceId": {
            "type": "string",
            "pattern": "\\*$|^[a-zA-Z-_]{8,64}"
        },
        "ProjectNotificationSettingsStatus": {
            "type": "string",
            "enum": ["enabled", "disabled"]
        },
        "ProjectSummaries": {
            "type": "list",
            "member": { "shape": "ProjectSummary" }
        },
        "ProjectSummary": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "String" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" }
            }
        },
        "ProjectUser": {
            "type": "structure",
            "required": ["id", "username", "displayName", "emailAddress", "roleId"],
            "members": {
                "id": { "shape": "String" },
                "username": { "shape": "String" },
                "displayName": { "shape": "String" },
                "emailAddress": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "ProjectUsersFilter": {
            "type": "structure",
            "members": {
                "name": { "shape": "ProjectUsersFilterName" },
                "value": { "shape": "String" }
            }
        },
        "ProjectUsersFilterName": {
            "type": "string",
            "enum": ["USERNAME", "DISPLAY_NAME", "EMAIL_ADDRESS", "ROLE"]
        },
        "ProjectUsersFilters": {
            "type": "list",
            "member": { "shape": "ProjectUsersFilter" }
        },
        "ProjectUsersList": {
            "type": "list",
            "member": { "shape": "ProjectUser" }
        },
        "ProjectUsersSortBy": {
            "type": "string",
            "enum": ["USERNAME", "DISPLAY_NAME", "EMAIL_ADDRESS", "ROLE"]
        },
        "ProjectUsersSortDirection": {
            "type": "string",
            "enum": ["ASCENDING", "DESCENDING"]
        },
        "ProviderData": {
            "type": "structure",
            "required": ["account"],
            "members": {
                "account": { "shape": "NameString" }
            }
        },
        "ProviderIdString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "PublishActionVersionRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "actionId", "sourceCommitSha1"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "actionId": {
                    "shape": "PublishActionVersionRequestActionIdString",
                    "location": "uri",
                    "locationName": "actionId"
                },
                "id": { "shape": "PublishActionVersionRequestIdString" },
                "sourceCommitSha1": {
                    "shape": "PublishActionVersionRequestSourceCommitSha1String",
                    "location": "uri",
                    "locationName": "sourceCommitSha1"
                }
            }
        },
        "PublishActionVersionRequestActionIdString": {
            "type": "string",
            "max": 250,
            "min": 0
        },
        "PublishActionVersionRequestIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "PublishActionVersionRequestSourceCommitSha1String": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "PublishActionVersionResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "actionId", "status", "statusMessages"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "actionId": { "shape": "String" },
                "id": { "shape": "PublishActionVersionResponseIdString" },
                "sourceCommitSha1": { "shape": "PublishActionVersionResponseSourceCommitSha1String" },
                "status": { "shape": "Status" },
                "statusMessages": { "shape": "ActionVersionStatusMessages" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "PublishActionVersionResponseIdString": {
            "type": "string",
            "max": 10,
            "min": 0
        },
        "PublishActionVersionResponseSourceCommitSha1String": {
            "type": "string",
            "max": 50,
            "min": 0
        },
        "PullRequestCommentObject": {
            "type": "structure",
            "required": [
                "pullRequestId",
                "threadId",
                "creatorId",
                "commentId",
                "creationTime",
                "lastUpdatedTime",
                "content",
                "contentType",
                "deleted"
            ],
            "members": {
                "pullRequestId": { "shape": "String" },
                "threadId": { "shape": "String" },
                "commentRepliedToId": { "shape": "String" },
                "creatorId": { "shape": "String" },
                "commentId": { "shape": "String" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "content": { "shape": "String" },
                "contentType": { "shape": "CommentContentType" },
                "deleted": { "shape": "Boolean" },
                "reactions": { "shape": "CommentReactionsMap" },
                "commentType": { "shape": "PullRequestCommentType" },
                "blobId": { "shape": "String" },
                "filePath": { "shape": "String" },
                "startLineNumber": { "shape": "String" },
                "revisionContextId": { "shape": "String" },
                "resolvedBy": { "shape": "PullRequestCommentResolvedBy" }
            }
        },
        "PullRequestCommentResolvedBy": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "PullRequestCommentType": {
            "type": "string",
            "enum": ["pullRequestLevel", "fileLevel", "lineLevel"]
        },
        "PullRequestCommentsList": {
            "type": "list",
            "member": { "shape": "PullRequestCommentObject" }
        },
        "PullRequestCommentsOrder": {
            "type": "string",
            "enum": ["CREATION_TIME_ASCENDING", "CREATION_TIME_DESCENDING"]
        },
        "PullRequestContributorId": { "type": "string" },
        "PullRequestContributorIds": {
            "type": "list",
            "member": { "shape": "PullRequestContributorId" }
        },
        "PullRequestDescriptionString": {
            "type": "string",
            "max": 10000,
            "min": 1
        },
        "PullRequestNumber": {
            "type": "string",
            "max": 20,
            "min": 1
        },
        "PullRequestReviewer": {
            "type": "structure",
            "required": ["reviewerId", "reviewerType"],
            "members": {
                "reviewerId": { "shape": "SourcePullRequestContributorId" },
                "reviewerType": { "shape": "SourcePullRequestReviewerType" }
            }
        },
        "PullRequestReviewerItem": {
            "type": "structure",
            "required": ["reviewerId", "reviewerType"],
            "members": {
                "reviewerId": { "shape": "PullRequestContributorId" },
                "reviewerType": { "shape": "PullRequestReviewerType" }
            }
        },
        "PullRequestReviewerType": {
            "type": "string",
            "enum": ["required", "optional"]
        },
        "PullRequestReviewers": {
            "type": "list",
            "member": { "shape": "PullRequestReviewer" }
        },
        "PullRequestReviewersList": {
            "type": "list",
            "member": { "shape": "PullRequestReviewerItem" }
        },
        "PullRequestTitle": {
            "type": "string",
            "max": 150,
            "min": 3
        },
        "PutProjectNotificationSettingsRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "settings"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "locale": { "shape": "String" },
                "settings": { "shape": "ProjectNotificationSettingsItemList" }
            }
        },
        "PutProjectNotificationSettingsResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "documentId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "documentId": { "shape": "String" }
            }
        },
        "PutUserNotificationSettingsRequest": {
            "type": "structure",
            "required": ["organizationName", "settings"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "settings": { "shape": "UserNotificationSettingsItemList" }
            }
        },
        "PutUserNotificationSettingsResponse": {
            "type": "structure",
            "required": ["organizationName", "documentId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "documentId": { "shape": "String" }
            }
        },
        "QueryEventLogsRequest": {
            "type": "structure",
            "required": ["organizationName", "startTime", "endTime"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "projectId": { "shape": "String" },
                "eventName": { "shape": "String" },
                "eventSource": { "shape": "String" },
                "eventCategory": { "shape": "String" },
                "nextToken": { "shape": "QueryEventLogsRequestNextTokenString" },
                "maxResults": { "shape": "QueryEventLogsRequestMaxResultsInteger" },
                "sortBy": { "shape": "SortParam" }
            }
        },
        "QueryEventLogsRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 100,
            "min": 1
        },
        "QueryEventLogsRequestNextTokenString": {
            "type": "string",
            "max": 2048,
            "min": 1
        },
        "QueryEventLogsResponse": {
            "type": "structure",
            "required": ["items"],
            "members": {
                "nextToken": { "shape": "String" },
                "items": { "shape": "EventLogEntries" }
            }
        },
        "QuestionInformation": {
            "type": "structure",
            "members": {
                "questionType": { "shape": "String" },
                "questionId": { "shape": "String" },
                "answers": { "shape": "AnswerSection" }
            }
        },
        "QuestionSection": {
            "type": "list",
            "member": { "shape": "QuestionInformation" }
        },
        "ReasonTemplateVariable": {
            "type": "structure",
            "required": ["key", "value"],
            "members": {
                "key": { "shape": "String" },
                "value": { "shape": "String" }
            }
        },
        "ReferenceAstsMap": {
            "type": "map",
            "key": { "shape": "ReferenceAstsMapKeyString" },
            "value": { "shape": "String" }
        },
        "ReferenceAstsMapKeyString": {
            "type": "string",
            "min": 1
        },
        "RegionString": {
            "type": "string",
            "max": 16,
            "min": 3,
            "pattern": "(us(?:-gov)?|af|ap|ca|cn|eu|sa)-(central|(?:north|south)?(?:east|west)?)-(\\d+)"
        },
        "RelatedAnalysisFindingLocations": {
            "type": "structure",
            "required": ["truncated"],
            "members": {
                "truncated": { "shape": "Boolean" },
                "locations": { "shape": "AnalysisFindingLocations" }
            }
        },
        "RemoveUserFromRoleMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "userId", "roleId"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "userId": { "shape": "String" },
                "roleId": { "shape": "String" }
            }
        },
        "RemoveUserFromRoleMigrationOutput": {
            "type": "structure",
            "members": {
                "friendlyArn": { "shape": "String" }
            }
        },
        "RemoveUserFromRoleRequest": {
            "type": "structure",
            "required": ["organizationName", "id", "roleId"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "RemoveUserFromRoleRequestIdString" },
                "roleId": { "shape": "String" }
            }
        },
        "RemoveUserFromRoleRequestIdString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "RemoveUserFromRoleResponse": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" }
            }
        },
        "ReportStatusPhaseName": {
            "type": "string",
            "enum": ["PARSING"]
        },
        "ReportStatusPhaseState": {
            "type": "string",
            "enum": ["IN_PROGRESS", "RETRYING", "FAILED", "FAULT", "SUCCEEDED", "SUBMITTED"]
        },
        "RepositoriesInput": {
            "type": "list",
            "member": { "shape": "RepositoryInput" }
        },
        "RepositoryInput": {
            "type": "structure",
            "required": ["repositoryName"],
            "members": {
                "repositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" }
            }
        },
        "RepositoryTypeNameString": {
            "type": "string",
            "enum": ["standard", "external"]
        },
        "ResourceMap": {
            "type": "map",
            "key": { "shape": "String" },
            "value": { "shape": "String" }
        },
        "ResourceNotFoundException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "resourceId": { "shape": "ResourceMap" },
                "resourceType": { "shape": "ResourceType" }
            },
            "error": {
                "httpStatusCode": 404,
                "senderFault": true
            },
            "exception": true
        },
        "ResourceRef": {
            "type": "structure",
            "members": {
                "type": { "shape": "String" },
                "name": { "shape": "String" }
            }
        },
        "ResourceRefList": {
            "type": "list",
            "member": { "shape": "ResourceRef" }
        },
        "ResourceType": { "type": "string" },
        "RetryTestActionTestCasesRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "testSummaryId", "retryMode"],
            "members": {
                "organizationName": { "shape": "RetryTestActionTestCasesRequestOrganizationNameString" },
                "projectName": { "shape": "RetryTestActionTestCasesRequestProjectNameString" },
                "id": { "shape": "String" },
                "testSummaryId": { "shape": "RetryTestActionTestCasesRequestTestSummaryIdString" },
                "retryMode": { "shape": "TestActionTestCasesRetryMode" },
                "testCaseNames": { "shape": "StringList" }
            }
        },
        "RetryTestActionTestCasesRequestOrganizationNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "RetryTestActionTestCasesRequestProjectNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "RetryTestActionTestCasesRequestTestSummaryIdString": {
            "type": "string",
            "min": 1
        },
        "RetryTestActionTestCasesResponse": {
            "type": "structure",
            "required": ["id", "status"],
            "members": {
                "id": { "shape": "RetryTestActionTestCasesResponseIdString" },
                "status": { "shape": "RetryTestActionTestCasesResponseStatusString" }
            }
        },
        "RetryTestActionTestCasesResponseIdString": {
            "type": "string",
            "min": 1
        },
        "RetryTestActionTestCasesResponseStatusString": {
            "type": "string",
            "min": 1
        },
        "RevokeSessionRequest": {
            "type": "structure",
            "members": {
                "callbackUri": { "shape": "RevokeSessionRequestCallbackUriString" }
            }
        },
        "RevokeSessionRequestCallbackUriString": {
            "type": "string",
            "max": 4000,
            "min": 1
        },
        "RevokeSessionResponse": {
            "type": "structure",
            "members": {
                "redirect": { "shape": "RevokeSessionResponseRedirectString" }
            }
        },
        "RevokeSessionResponseRedirectString": {
            "type": "string",
            "max": 4000,
            "min": 1
        },
        "SavedView": {
            "type": "structure",
            "required": ["viewId", "viewName", "viewData"],
            "members": {
                "viewId": { "shape": "String" },
                "viewName": { "shape": "SavedViewViewNameString" },
                "viewData": { "shape": "SavedViewViewDataString" }
            }
        },
        "SavedViewQueryString": {
            "type": "string",
            "max": 1023,
            "min": 1
        },
        "SavedViewViewDataString": {
            "type": "string",
            "max": 600,
            "min": 1
        },
        "SavedViewViewNameString": {
            "type": "string",
            "max": 50,
            "min": 1
        },
        "SavedViews": {
            "type": "list",
            "member": { "shape": "SavedView" }
        },
        "SearchCodeData": {
            "type": "structure",
            "required": [
                "branchName",
                "commitId",
                "commitMessage",
                "filePath",
                "lastUpdatedById",
                "lastUpdatedTime",
                "projectId",
                "repositoryId"
            ],
            "members": {
                "branchName": { "shape": "String" },
                "code": { "shape": "SearchCodeSnippets" },
                "commitId": { "shape": "String" },
                "commitMessage": { "shape": "String" },
                "filePath": { "shape": "String" },
                "lastUpdatedBy": { "shape": "String" },
                "lastUpdatedById": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "projectId": { "shape": "String" },
                "projectName": { "shape": "String" },
                "repositoryId": { "shape": "String" },
                "repositoryName": { "shape": "String" }
            }
        },
        "SearchCodeSnippet": {
            "type": "structure",
            "required": ["text", "number"],
            "members": {
                "text": { "shape": "String" },
                "number": { "shape": "Integer" }
            }
        },
        "SearchCodeSnippets": {
            "type": "list",
            "member": { "shape": "SearchCodeSnippet" }
        },
        "SearchData": {
            "type": "structure",
            "members": {
                "code": { "shape": "SearchCodeData" },
                "issue": { "shape": "SearchIssueData" },
                "user": { "shape": "SearchUserData" },
                "package": { "shape": "SearchPackageData" },
                "project": { "shape": "SearchProjectData" },
                "pullRequest": { "shape": "SearchPullRequestData" }
            }
        },
        "SearchIssueData": {
            "type": "structure",
            "required": ["createdById", "createdTime", "issueStoreId", "lastUpdatedTime", "projectId", "title"],
            "members": {
                "assignees": { "shape": "StringList" },
                "assigneeIds": { "shape": "StringList" },
                "createdBy": { "shape": "String" },
                "createdById": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "description": { "shape": "String" },
                "isArchived": { "shape": "Boolean" },
                "isBlocked": { "shape": "Boolean" },
                "issueStoreName": { "shape": "String" },
                "issueStoreId": { "shape": "String" },
                "labelIds": { "shape": "StringList" },
                "lastUpdatedBy": { "shape": "String" },
                "lastUpdatedById": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "priority": { "shape": "String" },
                "projectId": { "shape": "String" },
                "projectName": { "shape": "String" },
                "shortId": { "shape": "String" },
                "status": { "shape": "String" },
                "statusId": { "shape": "String" },
                "title": { "shape": "String" },
                "issueType": { "shape": "String" },
                "issueSource": { "shape": "String" },
                "providerCanonicalUrl": { "shape": "String" }
            }
        },
        "SearchOrderBy": {
            "type": "structure",
            "required": ["type"],
            "members": {
                "type": { "shape": "String" },
                "fields": { "shape": "SearchOrderByFields" }
            }
        },
        "SearchOrderByDirection": {
            "type": "string",
            "enum": ["ASC", "DESC"]
        },
        "SearchOrderByField": {
            "type": "structure",
            "required": ["fieldName"],
            "members": {
                "fieldName": { "shape": "String" },
                "direction": { "shape": "SearchOrderByDirection" },
                "missingValues": { "shape": "SearchOrderByMissingValuePosition" }
            }
        },
        "SearchOrderByFields": {
            "type": "list",
            "member": { "shape": "SearchOrderByField" }
        },
        "SearchOrderByMissingValuePosition": {
            "type": "string",
            "enum": ["FIRST", "LAST"]
        },
        "SearchPackageData": {
            "type": "structure",
            "required": [
                "format",
                "isCanonicalOrigin",
                "isThirdParty",
                "lastUpdatedTime",
                "latestVersion",
                "namespace",
                "origin",
                "packageName",
                "projectId",
                "publishedTime",
                "readme",
                "repositoryId",
                "status"
            ],
            "members": {
                "description": { "shape": "String" },
                "format": { "shape": "String" },
                "isCanonicalOrigin": { "shape": "Boolean" },
                "isThirdParty": { "shape": "Boolean" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "latestVersion": { "shape": "String" },
                "license": { "shape": "String" },
                "namespace": { "shape": "String" },
                "origin": { "shape": "String" },
                "package": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use packageName instead."
                },
                "packageName": { "shape": "String" },
                "project": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use projectName instead."
                },
                "projectId": { "shape": "String" },
                "projectName": { "shape": "String" },
                "publishedTime": { "shape": "SyntheticTimestamp_date_time" },
                "readme": { "shape": "SearchCodeSnippets" },
                "repository": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use repositoryName instead."
                },
                "repositoryId": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "status": { "shape": "String" }
            }
        },
        "SearchPaginationMode": {
            "type": "string",
            "enum": ["ONLY_TOP_RESULTS", "ALL_RESULTS"]
        },
        "SearchProjectData": {
            "type": "structure",
            "required": ["lastUpdatedTime", "projectName", "projectPath"],
            "members": {
                "description": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "project": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use projectName instead."
                },
                "projectName": { "shape": "String" },
                "projectPath": { "shape": "String" }
            }
        },
        "SearchPullRequestData": {
            "type": "structure",
            "required": ["shortId", "projectId", "repositoryId", "status", "sourceBranchName", "lastUpdatedTime"],
            "members": {
                "title": { "shape": "String" },
                "number": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use shortId instead."
                },
                "shortId": { "shape": "String" },
                "project": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use projectName instead."
                },
                "projectId": { "shape": "String" },
                "projectName": { "shape": "String" },
                "repository": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use repositoryName instead."
                },
                "repositoryId": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "status": { "shape": "String" },
                "createdBy": { "shape": "String" },
                "createdById": { "shape": "String" },
                "author": {
                    "shape": "SearchUsers",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use authors instead."
                },
                "authorId": {
                    "shape": "SearchUserIds",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use authorIds instead."
                },
                "reviewer": {
                    "shape": "SearchUsers",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use reviewers instead."
                },
                "reviewerId": {
                    "shape": "SearchUserIds",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use reviewerIds instead."
                },
                "authors": { "shape": "StringList" },
                "authorIds": { "shape": "StringList" },
                "reviewers": { "shape": "StringList" },
                "reviewerIds": { "shape": "StringList" },
                "sourceBranch": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use sourceBranchName instead."
                },
                "sourceBranchName": { "shape": "String" },
                "destinationBranch": {
                    "shape": "String",
                    "deprecated": true,
                    "deprecatedMessage": "This field will be removed. Use destinationBranchName instead."
                },
                "destinationBranchName": { "shape": "String" },
                "committer": { "shape": "String" },
                "committerId": { "shape": "String" },
                "sourceCommitId": { "shape": "String" },
                "mergeCommitId": { "shape": "String" },
                "commitMessage": { "shape": "String" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "description": { "shape": "String" }
            }
        },
        "SearchReadMode": {
            "type": "string",
            "enum": ["EAGER", "LAZY"]
        },
        "SearchRequest": {
            "type": "structure",
            "required": ["organizationName", "term"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "term": { "shape": "SearchTerm" },
                "token": { "shape": "SearchRequestTokenString" },
                "paginationMode": { "shape": "SearchPaginationMode" },
                "maxResults": { "shape": "SearchRequestMaxResultsInteger" },
                "readMode": { "shape": "SearchReadMode" },
                "orderBy": { "shape": "SearchOrderBy" }
            }
        },
        "SearchRequestMaxResultsInteger": {
            "type": "integer",
            "box": true,
            "max": 25,
            "min": 1
        },
        "SearchRequestTokenString": {
            "type": "string",
            "max": 2560,
            "min": 1
        },
        "SearchResponse": {
            "type": "structure",
            "members": {
                "results": { "shape": "SearchResults" },
                "previousToken": { "shape": "String" },
                "nextToken": { "shape": "String" },
                "total": { "shape": "String" }
            }
        },
        "SearchResult": {
            "type": "structure",
            "required": ["id", "type", "matchedData", "highlightTag"],
            "members": {
                "id": { "shape": "String" },
                "type": { "shape": "String" },
                "matchedData": { "shape": "SearchData" },
                "highlightTag": { "shape": "String" }
            },
            "sensitive": true
        },
        "SearchResults": {
            "type": "list",
            "member": { "shape": "SearchResult" }
        },
        "SearchTerm": {
            "type": "string",
            "max": 1024,
            "min": 1,
            "sensitive": true
        },
        "SearchUserData": {
            "type": "structure",
            "required": ["lastUpdatedTime", "displayName", "email", "username"],
            "members": {
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "displayName": { "shape": "String" },
                "email": { "shape": "String" },
                "username": { "shape": "String" },
                "projectNames": { "shape": "StringList" }
            }
        },
        "SearchUserIds": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "SearchUsers": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "SecretDescription": {
            "type": "string",
            "max": 2048,
            "min": 0
        },
        "SecretMigrationMetadata": {
            "type": "structure",
            "members": {
                "name": { "shape": "NameString" },
                "description": { "shape": "String" },
                "referenceId": { "shape": "String" },
                "lastUpdatedTime": { "shape": "Timestamp" }
            }
        },
        "SecretNameString": {
            "type": "string",
            "max": 512,
            "min": 1,
            "pattern": "[a-zA-Z0-9-_]*"
        },
        "SecretSummary": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "SecretNameString" },
                "description": { "shape": "SecretDescription" },
                "referenceId": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "environmentSecretOverridesMetadataList": {
                    "shape": "SecretSummaryEnvironmentSecretOverridesMetadataListList"
                }
            }
        },
        "SecretSummaryEnvironmentSecretOverridesMetadataListList": {
            "type": "list",
            "member": { "shape": "EnvironmentSecretOverrideMetadata" },
            "max": 5,
            "min": 0
        },
        "SecretValueString": {
            "type": "string",
            "max": 65536,
            "min": 1,
            "sensitive": true
        },
        "SecretsList": {
            "type": "list",
            "member": { "shape": "SecretSummary" }
        },
        "SecretsMigrationSummary": {
            "type": "list",
            "member": { "shape": "SecretMigrationMetadata" }
        },
        "SendOrganizationInvitationRequest": {
            "type": "structure",
            "required": ["organizationName", "inviteeEmailAddress", "inviteeDisplayName", "inviteeRole", "clientToken"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "SendOrganizationInvitationRequestInviteeDisplayNameString" },
                "inviteeRole": { "shape": "OrganizationInviteeRole" },
                "clientToken": {
                    "shape": "OrganizationInvitationClientToken",
                    "idempotencyToken": true
                }
            }
        },
        "SendOrganizationInvitationRequestInviteeDisplayNameString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "SendOrganizationInvitationResponse": {
            "type": "structure",
            "required": [
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "organizationName",
                "status",
                "inviteeRole"
            ],
            "members": {
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "String" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "organizationName": { "shape": "String" },
                "status": { "shape": "InvitationStatus" },
                "inviteeRole": { "shape": "OrganizationInviteeRole" }
            }
        },
        "SendProjectInvitationRequest": {
            "type": "structure",
            "required": [
                "organizationName",
                "inviteeEmailAddress",
                "inviteeDisplayName",
                "projectName",
                "inviteeRole",
                "clientToken"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "SendProjectInvitationRequestInviteeDisplayNameString" },
                "projectName": { "shape": "String" },
                "inviteeRole": { "shape": "ProjectInviteeRole" },
                "clientToken": {
                    "shape": "ProjectInvitationClientToken",
                    "idempotencyToken": true
                }
            }
        },
        "SendProjectInvitationRequestInviteeDisplayNameString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "SendProjectInvitationResponse": {
            "type": "structure",
            "required": [
                "organizationName",
                "id",
                "lastUpdatedTime",
                "timestamp",
                "inviteeEmailAddress",
                "projectName",
                "status",
                "inviteeRole"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "id": { "shape": "String" },
                "title": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "timestamp": { "shape": "SyntheticTimestamp_date_time" },
                "inviterUserName": { "shape": "String" },
                "inviteeEmailAddress": { "shape": "EmailAddressString" },
                "inviteeDisplayName": { "shape": "String" },
                "signupEmailAddress": { "shape": "EmailAddressString" },
                "projectName": { "shape": "String" },
                "status": { "shape": "ProjectInvitationStatus" },
                "inviteeRole": { "shape": "ProjectInviteeRole" }
            }
        },
        "SensitiveString": {
            "type": "string",
            "sensitive": true
        },
        "SensitiveUuid": {
            "type": "string",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
            "sensitive": true
        },
        "ServiceQuotaExceededException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "resourceId": { "shape": "ResourceMap" },
                "resourceType": { "shape": "ResourceType" }
            },
            "error": {
                "httpStatusCode": 402,
                "senderFault": true
            },
            "exception": true
        },
        "SetSubscriptionRequest": {
            "type": "structure",
            "required": ["organizationName", "awsAccountName", "subscriptionType"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "awsAccountName": { "shape": "NameString" },
                "subscriptionType": { "shape": "SubscriptionTypeString" }
            }
        },
        "SetSubscriptionResponse": {
            "type": "structure",
            "members": {
                "awsAccountName": { "shape": "NameString" },
                "subscriptionType": { "shape": "SubscriptionTypeString" }
            }
        },
        "SeverityCountSuccessCriteriaResult": {
            "type": "structure",
            "members": {
                "isPassing": { "shape": "Boolean" },
                "severityCountCriteria": { "shape": "SoftwareCompositionAnalysisReportMappedSeverityCount" },
                "severityCountValue": { "shape": "SoftwareCompositionAnalysisReportMappedSeverityCount" }
            }
        },
        "SlackChannelId": {
            "type": "string",
            "max": 11,
            "min": 11,
            "pattern": "[A-Z0-9]+"
        },
        "SlackClientId": {
            "type": "string",
            "pattern": "[0-9.]{0,32}",
            "sensitive": true
        },
        "SlackPermissionScope": {
            "type": "string",
            "pattern": "[a-z_.:,]{0,128}"
        },
        "SlackWorkspaceId": {
            "type": "string",
            "max": 11,
            "min": 11,
            "pattern": "[A-Z0-9]+"
        },
        "SoftwareCompositionAnalysisFindingsFilter": {
            "type": "structure",
            "required": ["value", "key"],
            "members": {
                "value": { "shape": "String" },
                "key": { "shape": "SoftwareCompositionAnalysisFindingsFilterKey" },
                "comparisonOperator": { "shape": "SoftwareCompositionAnalysisFindingsFilterComparisonOperator" }
            }
        },
        "SoftwareCompositionAnalysisFindingsFilterComparisonOperator": {
            "type": "string",
            "enum": ["NOT_CONTAINS", "CONTAINS", "NE", "EQ"]
        },
        "SoftwareCompositionAnalysisFindingsFilterKey": {
            "type": "string",
            "enum": ["rule.ruleId", "severity.mappedSeverity", "severity.mappedSeverityValue", "score", "name"]
        },
        "SoftwareCompositionAnalysisFindingsFilterOperation": {
            "type": "string",
            "enum": ["OR", "AND"]
        },
        "SoftwareCompositionAnalysisFindingsFilters": {
            "type": "structure",
            "members": {
                "filters": { "shape": "SoftwareCompositionAnalysisFindingsFiltersList" },
                "operation": { "shape": "SoftwareCompositionAnalysisFindingsFilterOperation" }
            }
        },
        "SoftwareCompositionAnalysisFindingsFiltersList": {
            "type": "list",
            "member": { "shape": "SoftwareCompositionAnalysisFindingsFilter" }
        },
        "SoftwareCompositionAnalysisFindingsOrderByDirection": {
            "type": "string",
            "enum": ["DESCENDING", "ASCENDING"]
        },
        "SoftwareCompositionAnalysisFindingsOrderByField": {
            "type": "structure",
            "required": ["fieldName", "direction"],
            "members": {
                "fieldName": { "shape": "SoftwareCompositionAnalysisFindingsOrderByFieldName" },
                "direction": { "shape": "SoftwareCompositionAnalysisFindingsOrderByDirection" }
            }
        },
        "SoftwareCompositionAnalysisFindingsOrderByFieldName": {
            "type": "string",
            "enum": ["rule.ruleId", "severity.mappedSeverityValue", "score", "name"]
        },
        "SoftwareCompositionAnalysisFindingsOrderByFields": {
            "type": "list",
            "member": { "shape": "SoftwareCompositionAnalysisFindingsOrderByField" },
            "max": 3,
            "min": 0
        },
        "SoftwareCompositionAnalysisReportCategoryCount": {
            "type": "structure",
            "required": ["name", "count"],
            "members": {
                "name": { "shape": "SoftwareCompositionAnalysisReportCategoryName" },
                "count": { "shape": "Integer" }
            }
        },
        "SoftwareCompositionAnalysisReportCategoryCounts": {
            "type": "list",
            "member": { "shape": "SoftwareCompositionAnalysisReportCategoryCount" }
        },
        "SoftwareCompositionAnalysisReportCategoryName": {
            "type": "string",
            "enum": ["SECURITY"]
        },
        "SoftwareCompositionAnalysisReportMappedSeverityCount": {
            "type": "structure",
            "required": ["name", "count"],
            "members": {
                "name": { "shape": "SoftwareCompositionAnalysisReportMappedSeverityName" },
                "count": { "shape": "Integer" }
            }
        },
        "SoftwareCompositionAnalysisReportMappedSeverityCounts": {
            "type": "list",
            "member": { "shape": "SoftwareCompositionAnalysisReportMappedSeverityCount" }
        },
        "SoftwareCompositionAnalysisReportMappedSeverityName": {
            "type": "string",
            "enum": ["INFORMATIONAL", "LOW", "MEDIUM", "HIGH", "CRITICAL"]
        },
        "SoftwareCompositionAnalysisReportOriginalSeverityCount": {
            "type": "structure",
            "required": ["name", "count"],
            "members": {
                "name": { "shape": "String" },
                "count": { "shape": "Integer" }
            }
        },
        "SoftwareCompositionAnalysisReportOriginalSeverityCounts": {
            "type": "list",
            "member": { "shape": "SoftwareCompositionAnalysisReportOriginalSeverityCount" }
        },
        "SoftwareCompositionAnalysisReportSummaries": {
            "type": "list",
            "member": { "shape": "SoftwareCompositionAnalysisReportSummary" }
        },
        "SoftwareCompositionAnalysisReportSummary": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "scanRunTime",
                "actionRunId",
                "repositoryName",
                "scanStatistics"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "scanRunTime": { "shape": "SyntheticTimestamp_date_time" },
                "actionRunId": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "scanStatistics": { "shape": "SoftwareCompositionAnalysisScanStatistics" },
                "successCriteriaResult": { "shape": "SeverityCountSuccessCriteriaResult" }
            }
        },
        "SoftwareCompositionAnalysisScanStatistics": {
            "type": "structure",
            "required": ["totalPackagesScanned", "totalFindings", "mappedSeverityCounts"],
            "members": {
                "totalPackagesScanned": { "shape": "Integer" },
                "totalFindings": { "shape": "Integer" },
                "mappedSeverityCounts": { "shape": "SoftwareCompositionAnalysisReportMappedSeverityCounts" },
                "originalSeverityCounts": { "shape": "SoftwareCompositionAnalysisReportOriginalSeverityCounts" },
                "categoryCounts": { "shape": "SoftwareCompositionAnalysisReportCategoryCounts" }
            }
        },
        "SoftwareCompositionAnalysisToolDetails": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "String" },
                "vendorName": { "shape": "String" }
            }
        },
        "SoftwareTestingReportRunDetails": {
            "type": "structure",
            "required": ["reportRunId", "actionRunId", "lastRunAt", "passingStatus"],
            "members": {
                "reportRunId": { "shape": "String" },
                "actionRunId": { "shape": "Uuid" },
                "lastRunAt": { "shape": "SyntheticTimestamp_date_time" },
                "passingStatus": { "shape": "String" }
            }
        },
        "SoftwareTestingReportSummaries": {
            "type": "list",
            "member": { "shape": "SoftwareTestingReportSummary" }
        },
        "SoftwareTestingReportSummary": {
            "type": "structure",
            "required": [
                "reportId",
                "workflowId",
                "actionName",
                "repositoryName",
                "branchName",
                "reportName",
                "reportType",
                "latestReportRun"
            ],
            "members": {
                "reportId": { "shape": "String" },
                "workflowId": { "shape": "String" },
                "actionName": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "String" },
                "reportName": { "shape": "String" },
                "reportType": { "shape": "String" },
                "latestReportRun": { "shape": "SoftwareTestingReportRunDetails" }
            }
        },
        "SortParam": {
            "type": "structure",
            "members": {
                "key": { "shape": "String" },
                "direction": { "shape": "String" }
            }
        },
        "SourceAutoInitializeInputMigration": {
            "type": "structure",
            "members": {
                "repositoryTemplateType": { "shape": "String" },
                "readmeType": { "shape": "String" },
                "gitIgnoreType": { "shape": "String" }
            }
        },
        "SourceAutoInitializeSummaryMigration": {
            "type": "structure",
            "members": {
                "repositoryTemplateType": { "shape": "String" },
                "readmeType": { "shape": "String" },
                "gitIgnoreType": { "shape": "String" }
            }
        },
        "SourceBranchSummary": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "branchName": { "shape": "SourceRepositoryBranchString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "headCommitId": { "shape": "String" },
                "beforeCommitId": { "shape": "String" },
                "beforeDocumentCommitId": { "shape": "String" },
                "ordinal": { "shape": "Integer" }
            }
        },
        "SourceBranchSummaryList": {
            "type": "list",
            "member": { "shape": "SourceBranchSummary" }
        },
        "SourceCommitFileMetadataSummary": {
            "type": "structure",
            "members": {
                "absolutePath": { "shape": "String" },
                "blobId": { "shape": "String" },
                "fileMode": { "shape": "SourceFileMode" }
            }
        },
        "SourceCommitFileModeToSet": {
            "type": "structure",
            "required": ["filePath", "fileMode"],
            "members": {
                "filePath": { "shape": "String" },
                "fileMode": { "shape": "SourceFileMode" }
            }
        },
        "SourceCommitFileModesToSetList": {
            "type": "list",
            "member": { "shape": "SourceCommitFileModeToSet" }
        },
        "SourceCommitFileSpecifier": {
            "type": "structure",
            "members": {
                "filePath": { "shape": "String" },
                "isMove": { "shape": "Boolean" }
            }
        },
        "SourceCommitFileToDelete": {
            "type": "structure",
            "required": ["filePath"],
            "members": {
                "filePath": { "shape": "String" }
            }
        },
        "SourceCommitFileToPut": {
            "type": "structure",
            "required": ["filePath", "fileMode"],
            "members": {
                "filePath": { "shape": "String" },
                "fileMode": { "shape": "SourceFileMode" },
                "fileContent": { "shape": "String" },
                "sourceFile": { "shape": "SourceCommitFileSpecifier" }
            }
        },
        "SourceCommitFilesList": {
            "type": "list",
            "member": { "shape": "SourceCommitFileMetadataSummary" }
        },
        "SourceCommitFilesToDeleteList": {
            "type": "list",
            "member": { "shape": "SourceCommitFileToDelete" }
        },
        "SourceCommitFilesToPutList": {
            "type": "list",
            "member": { "shape": "SourceCommitFileToPut" }
        },
        "SourceCommitParentSha1List": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "SourceCommitSummary": {
            "type": "structure",
            "members": {
                "title": { "shape": "String" },
                "repositoryId": { "shape": "String" },
                "sha1": { "shape": "String" },
                "treeSha1": { "shape": "String" },
                "parentSha1s": { "shape": "SourceCommitParentSha1List" },
                "message": { "shape": "String" },
                "author": { "shape": "Author" },
                "committer": { "shape": "Author" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "additionalData": { "shape": "String" }
            }
        },
        "SourceDifferenceBlobMetadata": {
            "type": "structure",
            "members": {
                "commitSpecifier": { "shape": "String" },
                "blobSha1": { "shape": "String" },
                "path": { "shape": "String" },
                "mode": { "shape": "String" }
            }
        },
        "SourceDifferenceChangeType": {
            "type": "string",
            "enum": ["A", "M", "D"]
        },
        "SourceDifferenceMetadataList": {
            "type": "list",
            "member": { "shape": "SourceDifferenceMetadataSummary" }
        },
        "SourceDifferenceMetadataSummary": {
            "type": "structure",
            "members": {
                "title": { "shape": "String" },
                "before": { "shape": "SourceDifferenceBlobMetadata" },
                "after": { "shape": "SourceDifferenceBlobMetadata" },
                "changeType": { "shape": "SourceDifferenceChangeType" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "SourceFileMetadataSummary": {
            "type": "structure",
            "members": {
                "absolutePath": { "shape": "String" },
                "relativePath": { "shape": "String" },
                "blobSha1": { "shape": "String" },
                "fileMode": { "shape": "SourceFileMode" }
            }
        },
        "SourceFileMode": {
            "type": "string",
            "enum": ["EXECUTABLE", "NORMAL", "SYMLINK"]
        },
        "SourceFileSummary": {
            "type": "structure",
            "members": {
                "title": { "shape": "String" },
                "commitSha1": { "shape": "String" },
                "blobSha1": { "shape": "String" },
                "filePath": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "fileSizeInBytes": { "shape": "Integer" },
                "fileMode": { "shape": "SourceFileMode" },
                "fileContent": { "shape": "String" }
            }
        },
        "SourceFilesList": {
            "type": "list",
            "member": { "shape": "SourceFileMetadataSummary" }
        },
        "SourceFolderSummary": {
            "type": "structure",
            "members": {
                "title": { "shape": "String" },
                "folderPath": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "commitSha1": { "shape": "String" },
                "treeSha1": { "shape": "String" },
                "files": { "shape": "SourceFilesList" },
                "subFolders": { "shape": "SourceSubFoldersList" },
                "subModules": { "shape": "SourceSubModulesList" },
                "symbolicLinks": { "shape": "SourceSymbolicLinksList" }
            }
        },
        "SourceIpAddress": {
            "type": "structure",
            "members": {
                "v4": { "shape": "String" },
                "v6": { "shape": "String" }
            }
        },
        "SourceMergeOptions": {
            "type": "list",
            "member": { "shape": "MergeOption" }
        },
        "SourceMergeRequirements": {
            "type": "structure",
            "members": {
                "requiredReviewers": { "shape": "SourcePullRequestRequiredReviewers" }
            }
        },
        "SourcePullRequestApprovalStatus": {
            "type": "string",
            "enum": ["APPROVED", "REVOKED"]
        },
        "SourcePullRequestCoAuthors": {
            "type": "list",
            "member": { "shape": "SourcePullRequestContributor" }
        },
        "SourcePullRequestContributor": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" }
            }
        },
        "SourcePullRequestContributorId": { "type": "string" },
        "SourcePullRequestContributorIds": {
            "type": "list",
            "member": { "shape": "SourcePullRequestContributorId" }
        },
        "SourcePullRequestDescription": {
            "type": "string",
            "max": 10000,
            "min": 1
        },
        "SourcePullRequestMergeRequirements": {
            "type": "structure",
            "members": {
                "requiredReviewersApprovalRule": { "shape": "SourcePullRequestRequiredReviewersApprovalRule" }
            }
        },
        "SourcePullRequestNumber": { "type": "string" },
        "SourcePullRequestOptionalReviewers": {
            "type": "list",
            "member": { "shape": "SourcePullRequestContributor" }
        },
        "SourcePullRequestRequiredReviewers": {
            "type": "list",
            "member": { "shape": "SourcePullRequestContributor" }
        },
        "SourcePullRequestRequiredReviewersApprovalRule": {
            "type": "structure",
            "members": {
                "reviewersApproved": { "shape": "SourcePullRequestContributorIds" },
                "reviewersRequired": { "shape": "SourcePullRequestContributorIds" }
            }
        },
        "SourcePullRequestReviewerType": {
            "type": "string",
            "enum": ["OPTIONAL", "REQUIRED"]
        },
        "SourcePullRequestStatus": {
            "type": "string",
            "enum": ["open", "closed", "merged"]
        },
        "SourcePullRequestSummary": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "number": { "shape": "SourcePullRequestNumber" },
                "title": { "shape": "SourcePullRequestTitle" },
                "description": { "shape": "SourcePullRequestDescription" },
                "authorId": { "shape": "String" },
                "coAuthors": { "shape": "SourcePullRequestCoAuthors" },
                "optionalReviewers": { "shape": "SourcePullRequestOptionalReviewers" },
                "mergeRequirements": { "shape": "SourceMergeRequirements" },
                "repositoryId": { "shape": "String" },
                "repositoryName": { "shape": "SourceRepositoryNameString" },
                "projectName": { "shape": "NameString" },
                "sourceBranchReference": { "shape": "SourceRepositoryBranchString" },
                "destinationBranchReference": { "shape": "SourceRepositoryBranchString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "status": { "shape": "SourcePullRequestStatus" }
            }
        },
        "SourcePullRequestSummaryList": {
            "type": "list",
            "member": { "shape": "SourcePullRequestSummary" }
        },
        "SourcePullRequestTitle": {
            "type": "string",
            "max": 150,
            "min": 3
        },
        "SourcePullRequestToJiraIssueLinkSummary": {
            "type": "structure",
            "members": {
                "issueId": { "shape": "String" },
                "linkId": { "shape": "String" }
            }
        },
        "SourcePullRequestToJiraIssueLinks": {
            "type": "list",
            "member": { "shape": "SourcePullRequestToJiraIssueLinkSummary" }
        },
        "SourceReferencePoliciesSummaryList": {
            "type": "list",
            "member": { "shape": "SourceReferencePolicySummary" }
        },
        "SourceReferencePolicySummary": {
            "type": "structure",
            "members": {
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "referenceType": { "shape": "SourceReferencePolicySummaryReferenceTypeString" },
                "prefixPattern": { "shape": "SourceReferencePolicySummaryPrefixPatternString" },
                "deniedActions": { "shape": "DeniedActionsList" },
                "excludedUsers": { "shape": "ExcludedUsersList" }
            }
        },
        "SourceReferencePolicySummaryPrefixPatternString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "SourceReferencePolicySummaryReferenceTypeString": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": ".*[A-Z]{2,128}.*"
        },
        "SourceRepositoryBranchRefString": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "SourceRepositoryBranchString": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "SourceRepositoryBranchStringMigration": {
            "type": "string",
            "max": 100,
            "min": 1
        },
        "SourceRepositoryCommitAuthor": {
            "type": "structure",
            "members": {
                "date": { "shape": "SyntheticTimestamp_date_time" },
                "email": { "shape": "String" },
                "name": { "shape": "String" }
            }
        },
        "SourceRepositoryCommitDiffView": {
            "type": "string",
            "enum": ["inline", "parallel"]
        },
        "SourceRepositoryCommitDifferenceBlob": {
            "type": "structure",
            "members": {
                "blobId": { "shape": "String" },
                "path": { "shape": "String" },
                "mode": { "shape": "String" }
            }
        },
        "SourceRepositoryCommitDifferenceRenderContent": {
            "type": "structure",
            "members": {
                "innerHtml": { "shape": "String" }
            }
        },
        "SourceRepositoryCommitParentIdsList": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "SourceRepositoryDescriptionString": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "SourceRepositoryDescriptionStringMigration": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "SourceRepositoryEndpointSummary": {
            "type": "structure",
            "members": {
                "protocol": { "shape": "String" },
                "url": { "shape": "String" }
            }
        },
        "SourceRepositoryEndpointsList": {
            "type": "list",
            "member": { "shape": "SourceRepositoryEndpointSummary" }
        },
        "SourceRepositoryIdString": {
            "type": "string",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        },
        "SourceRepositoryLinkableSummary": {
            "type": "structure",
            "members": {
                "name": { "shape": "SourceRepositoryNameString" },
                "linkStatus": { "shape": "LinkStatus" },
                "providerCanonicalId": { "shape": "String" },
                "providerCanonicalUrl": { "shape": "String" }
            }
        },
        "SourceRepositoryLinkableSummaryList": {
            "type": "list",
            "member": { "shape": "SourceRepositoryLinkableSummary" }
        },
        "SourceRepositoryMetadataSummaryMigration": {
            "type": "structure",
            "members": {
                "providerCanonicalId": { "shape": "String" },
                "providerCanonicalUrl": { "shape": "String" }
            }
        },
        "SourceRepositoryNameString": {
            "type": "string",
            "max": 100,
            "min": 1,
            "pattern": "(?!.*[.]git$)[\\w\\-.]*"
        },
        "SourceRepositoryNameStringMigration": {
            "type": "string",
            "max": 100,
            "min": 1,
            "pattern": "(?!.*[.]git$)[\\w\\-.]*"
        },
        "SourceRepositorySummaryListMigration": {
            "type": "list",
            "member": { "shape": "SourceRepositorySummaryMigration" }
        },
        "SourceRepositorySummaryMigration": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "SourceRepositoryNameStringMigration" },
                "projectName": { "shape": "NameString" },
                "description": { "shape": "SourceRepositoryDescriptionStringMigration" },
                "defaultBranch": { "shape": "SourceRepositoryBranchStringMigration" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "creationDate": { "shape": "SyntheticTimestamp_date_time" },
                "autoInitialize": { "shape": "SourceAutoInitializeSummaryMigration" },
                "metadata": { "shape": "SourceRepositoryMetadataSummaryMigration" }
            }
        },
        "SourceRevisionSummary": {
            "type": "structure",
            "members": {
                "number": { "shape": "Integer" },
                "sourceCommitId": { "shape": "String" },
                "mergeBaseCommitId": { "shape": "String" },
                "pullRequestId": { "shape": "String" },
                "approvals": { "shape": "StringList" },
                "revokedApprovals": { "shape": "StringList" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "SourceRevisionSummaryList": {
            "type": "list",
            "member": { "shape": "SourceRevisionSummary" }
        },
        "SourceSortParamDirection": {
            "type": "string",
            "enum": ["asc", "desc"]
        },
        "SourceSubFoldersList": {
            "type": "list",
            "member": { "shape": "SourceSubFoldersMetadataSummary" }
        },
        "SourceSubFoldersMetadataSummary": {
            "type": "structure",
            "members": {
                "absolutePath": { "shape": "String" },
                "relativePath": { "shape": "String" },
                "treeSha1": { "shape": "String" }
            }
        },
        "SourceSubModulesList": {
            "type": "list",
            "member": { "shape": "SourceSubModulesMetadataSummary" }
        },
        "SourceSubModulesMetadataSummary": {
            "type": "structure",
            "members": {
                "absolutePath": { "shape": "String" },
                "relativePath": { "shape": "String" },
                "commitSha1": { "shape": "String" }
            }
        },
        "SourceSymbolicLinksList": {
            "type": "list",
            "member": { "shape": "SourceSymbolicLinksMetadataSummary" }
        },
        "SourceSymbolicLinksMetadataSummary": {
            "type": "structure",
            "members": {
                "absolutePath": { "shape": "String" },
                "relativePath": { "shape": "String" },
                "commitSha1": { "shape": "String" }
            }
        },
        "StartDevEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                },
                "ides": { "shape": "IdeConfigurationList" },
                "instanceType": { "shape": "InstanceType" },
                "inactivityTimeoutMinutes": { "shape": "InactivityTimeoutMinutes" }
            }
        },
        "StartDevEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "status"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "Uuid" },
                "status": { "shape": "DevEnvironmentStatus" }
            }
        },
        "StartDevEnvironmentSessionRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "sessionConfiguration"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                },
                "sessionConfiguration": { "shape": "DevEnvironmentSessionConfiguration" }
            }
        },
        "StartDevEnvironmentSessionResponse": {
            "type": "structure",
            "required": ["accessDetails", "organizationName", "projectName", "id"],
            "members": {
                "accessDetails": { "shape": "DevEnvironmentAccessDetails" },
                "sessionId": { "shape": "StartDevEnvironmentSessionResponseSessionIdString" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "Uuid" }
            }
        },
        "StartDevEnvironmentSessionResponseSessionIdString": {
            "type": "string",
            "max": 96,
            "min": 1
        },
        "StartWorkflowRunRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowId"],
            "members": {
                "organizationName": {
                    "shape": "StartWorkflowRunRequestOrganizationNameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "StartWorkflowRunRequestProjectNameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "StartWorkflowRunRequestWorkflowIdString",
                    "location": "uri",
                    "locationName": "workflowId"
                },
                "clientToken": {
                    "shape": "ClientToken",
                    "idempotencyToken": true,
                    "location": "header",
                    "locationName": "Idempotency-Token"
                }
            }
        },
        "StartWorkflowRunRequestOrganizationNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "StartWorkflowRunRequestProjectNameString": {
            "type": "string",
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "StartWorkflowRunRequestWorkflowIdString": {
            "type": "string",
            "min": 1,
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        },
        "StartWorkflowRunResponse": {
            "type": "structure",
            "required": ["id", "workflowId"],
            "members": {
                "id": { "shape": "Uuid" },
                "workflowId": { "shape": "Uuid" }
            }
        },
        "StaticAnalysisDirectoryLevelFinding": {
            "type": "structure",
            "required": ["path", "name", "childDirectories", "directoryStatistics"],
            "members": {
                "path": { "shape": "String" },
                "name": { "shape": "String" },
                "childDirectories": { "shape": "StringList" },
                "directoryStatistics": { "shape": "StaticAnalysisScanStatistics" },
                "parent": { "shape": "String" }
            }
        },
        "StaticAnalysisDirectoryLevelFindings": {
            "type": "list",
            "member": { "shape": "StaticAnalysisDirectoryLevelFinding" }
        },
        "StaticAnalysisFindingListItem": {
            "type": "structure",
            "required": [
                "id",
                "name",
                "lastUpdatedTime",
                "reportSummaryId",
                "repositoryName",
                "branchName",
                "commitId",
                "severity"
            ],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "StaticAnalysisFindingListItemNameString" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "reportSummaryId": { "shape": "StaticAnalysisFindingListItemReportSummaryIdString" },
                "repositoryName": { "shape": "StaticAnalysisFindingListItemRepositoryNameString" },
                "sourceRepository": { "shape": "String" },
                "branchName": { "shape": "StaticAnalysisFindingListItemBranchNameString" },
                "commitId": { "shape": "StaticAnalysisFindingListItemCommitIdString" },
                "score": { "shape": "AnalysisFindingScore" },
                "severity": { "shape": "AnalysisFindingSeverity" },
                "recommendation": { "shape": "AnalysisFindingRecommendation" },
                "location": { "shape": "AnalysisFindingLocation" },
                "relatedLocations": { "shape": "RelatedAnalysisFindingLocations" }
            }
        },
        "StaticAnalysisFindingListItemBranchNameString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "StaticAnalysisFindingListItemCommitIdString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "StaticAnalysisFindingListItemNameString": {
            "type": "string",
            "max": 3000,
            "min": 1
        },
        "StaticAnalysisFindingListItemReportSummaryIdString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "StaticAnalysisFindingListItemRepositoryNameString": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "StaticAnalysisFindingResponseItems": {
            "type": "list",
            "member": { "shape": "StaticAnalysisFindingListItem" }
        },
        "StaticAnalysisReportSourceFiles": {
            "type": "structure",
            "required": ["truncated", "reportFiles"],
            "members": {
                "truncated": { "shape": "Boolean" },
                "reportFiles": { "shape": "TestReportFiles" }
            }
        },
        "StaticAnalysisReportSummaries": {
            "type": "list",
            "member": { "shape": "StaticAnalysisReportSummary" }
        },
        "StaticAnalysisReportSummary": {
            "type": "structure",
            "required": ["id", "name", "scanRunTime", "actionRunId", "repositoryName"],
            "members": {
                "id": { "shape": "String" },
                "name": { "shape": "String" },
                "scanRunTime": { "shape": "SyntheticTimestamp_date_time" },
                "actionRunId": { "shape": "Uuid" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" }
            }
        },
        "StaticAnalysisScanStatistics": {
            "type": "structure",
            "required": ["totalFindings", "categories"],
            "members": {
                "totalPackagesScanned": { "shape": "Integer" },
                "totalFindings": { "shape": "Integer" },
                "categories": { "shape": "Categories" }
            }
        },
        "StaticAnalysisToolDetails": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "String" },
                "vendorName": { "shape": "String" }
            }
        },
        "Status": {
            "type": "string",
            "enum": ["UNPUBLISHED", "PUBLISHED", "PUBLISHING", "PUBLISH_FAILED"]
        },
        "StatusReason": {
            "type": "string",
            "max": 1024,
            "min": 0
        },
        "StopDevEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                }
            }
        },
        "StopDevEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "status"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "id": { "shape": "Uuid" },
                "status": { "shape": "DevEnvironmentStatus" }
            }
        },
        "String": { "type": "string" },
        "StringList": {
            "type": "list",
            "member": { "shape": "String" }
        },
        "StringMap": {
            "type": "map",
            "key": { "shape": "String" },
            "value": { "shape": "String" }
        },
        "SubscriptionTypeString": {
            "type": "string",
            "enum": ["FREE", "STANDARD", "STANDARD_PLUS_WORKSPACES"]
        },
        "SynthesizeBlueprintRequest": {
            "type": "structure",
            "required": ["organizationName", "publisher", "name", "definition"],
            "members": {
                "sessionId": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "publisher": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "versionId": { "shape": "String" },
                "definition": { "shape": "String" }
            }
        },
        "SynthesizeBlueprintResponse": {
            "type": "structure",
            "required": ["synthesisId", "sessionId"],
            "members": {
                "synthesisId": { "shape": "String" },
                "sessionId": { "shape": "String" }
            }
        },
        "SyntheticTimestamp_date_time": {
            "type": "timestamp",
            "timestampFormat": "iso8601"
        },
        "TemplateVariables": {
            "type": "list",
            "member": { "shape": "ReasonTemplateVariable" }
        },
        "TestActionTestCasesRetryMode": {
            "type": "string",
            "enum": ["ALL", "FAILED", "SELECTED"]
        },
        "TestCaseResultCount": {
            "type": "structure",
            "required": ["resultType", "count"],
            "members": {
                "resultType": { "shape": "TestCaseResultType" },
                "count": { "shape": "Integer" }
            }
        },
        "TestCaseResultCounts": {
            "type": "list",
            "member": { "shape": "TestCaseResultCount" }
        },
        "TestCaseResultType": {
            "type": "string",
            "enum": ["SUCCEEDED", "FAILED", "SKIPPED", "ERROR", "UNKNOWN"]
        },
        "TestCasesFilter": {
            "type": "structure",
            "required": ["value", "key"],
            "members": {
                "value": { "shape": "String" },
                "key": { "shape": "TestCasesFilterKey" },
                "comparisonOperator": { "shape": "TestCasesFilterComparisonOperator" }
            }
        },
        "TestCasesFilterComparisonOperator": {
            "type": "string",
            "enum": ["NOT_CONTAINS", "CONTAINS", "NE", "EQ"]
        },
        "TestCasesFilterKey": {
            "type": "string",
            "enum": ["testGroupIds", "durationInNanoseconds", "message", "result", "shortName"]
        },
        "TestCasesFilterOperation": {
            "type": "string",
            "enum": ["OR", "AND"]
        },
        "TestCasesFilters": {
            "type": "structure",
            "members": {
                "filters": { "shape": "TestCasesFiltersList" },
                "operation": { "shape": "TestCasesFilterOperation" }
            }
        },
        "TestCasesFiltersList": {
            "type": "list",
            "member": { "shape": "TestCasesFilter" }
        },
        "TestCasesOrderByDirection": {
            "type": "string",
            "enum": ["DESCENDING", "ASCENDING"]
        },
        "TestCasesOrderByField": {
            "type": "structure",
            "required": ["fieldName", "direction"],
            "members": {
                "fieldName": { "shape": "TestCasesOrderByFieldName" },
                "direction": { "shape": "TestCasesOrderByDirection" }
            }
        },
        "TestCasesOrderByFieldName": {
            "type": "string",
            "enum": ["durationInNanoseconds", "message", "result", "shortName"]
        },
        "TestCasesOrderByFields": {
            "type": "list",
            "member": { "shape": "TestCasesOrderByField" },
            "max": 3,
            "min": 0
        },
        "TestGroup": {
            "type": "structure",
            "required": ["id", "shortName", "groupType"],
            "members": {
                "id": { "shape": "String" },
                "shortName": { "shape": "String" },
                "groupType": { "shape": "String" },
                "durationInNanoseconds": { "shape": "Long" },
                "testCaseCount": { "shape": "Integer" },
                "children": { "shape": "StringList" },
                "testCaseResultCounts": { "shape": "TestCaseResultCounts" }
            }
        },
        "TestGroups": {
            "type": "list",
            "member": { "shape": "TestGroup" }
        },
        "TestReportFileDetails": {
            "type": "structure",
            "required": ["path", "processingStatus"],
            "members": {
                "path": { "shape": "TestReportFileDetailsPathString" },
                "processingStatus": { "shape": "FileProcessingStatus" },
                "errorMessage": { "shape": "String" }
            }
        },
        "TestReportFileDetailsPathString": {
            "type": "string",
            "max": 500,
            "min": 0
        },
        "TestReportFiles": {
            "type": "list",
            "member": { "shape": "TestReportFileDetails" }
        },
        "TestReportStatusPhaseDetails": {
            "type": "structure",
            "required": ["name", "state"],
            "members": {
                "name": { "shape": "ReportStatusPhaseName" },
                "state": { "shape": "ReportStatusPhaseState" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "errorMessage": { "shape": "String" }
            }
        },
        "TestReportStatusPhaseHistory": {
            "type": "list",
            "member": { "shape": "TestReportStatusPhaseDetails" }
        },
        "TestReportStatusSummary": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "name", "actionRunId", "phaseHistory"],
            "members": {
                "id": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "actionRunId": { "shape": "String" },
                "phaseHistory": { "shape": "TestReportStatusPhaseHistory" }
            }
        },
        "TestReportStatuses": {
            "type": "list",
            "member": { "shape": "TestReportStatusSummary" }
        },
        "TestReportSummaries": {
            "type": "list",
            "member": { "shape": "TestReportSummary" }
        },
        "TestReportSummary": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "name",
                "durationInNanoseconds",
                "actionRunId",
                "repositoryName",
                "testRunResult"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "testRunStartTime": { "shape": "SyntheticTimestamp_date_time" },
                "durationInNanoseconds": { "shape": "Long" },
                "actionRunId": { "shape": "String" },
                "repositoryName": { "shape": "String" },
                "sourceRepository": { "shape": "String" },
                "testRunResult": { "shape": "TestRunResult" },
                "successCriteriaResult": { "shape": "TestSuccessCriteriaResult" }
            }
        },
        "TestResultSummaryList": {
            "type": "list",
            "member": { "shape": "TrackingSummaryTestResultSummary" }
        },
        "TestRunResult": {
            "type": "structure",
            "required": ["totalTestCaseCount", "testCaseResultCounts"],
            "members": {
                "totalTestCaseCount": { "shape": "Integer" },
                "testCaseResultCounts": { "shape": "TestCaseResultCounts" }
            }
        },
        "TestSuccessCriteriaResult": {
            "type": "structure",
            "members": {
                "isPassing": { "shape": "Boolean" },
                "passRateCriteria": { "shape": "Percentage" },
                "passRateValue": { "shape": "Percentage" }
            }
        },
        "ThrottlingException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "retryAfterSeconds": {
                    "shape": "Integer",
                    "location": "header",
                    "locationName": "Retry-After"
                }
            },
            "error": {
                "httpStatusCode": 429,
                "senderFault": true
            },
            "exception": true,
            "retryable": { "throttling": false }
        },
        "Timestamp": {
            "type": "timestamp",
            "timestampFormat": "iso8601"
        },
        "TrackingSummary": {
            "type": "structure",
            "required": ["sourceRepositoryCommitId", "workflowRunDetails"],
            "members": {
                "sourceRepositoryCommitId": { "shape": "TrackingSummarySourceRepositoryCommitIdString" },
                "workflowRunDetails": { "shape": "TrackingSummaryWorkflowRunDetailList" }
            }
        },
        "TrackingSummaryCodeCoverageSummary": {
            "type": "structure",
            "required": ["testName", "actionRunId", "linesCoveredCount", "totalLinesCount"],
            "members": {
                "testId": { "shape": "String" },
                "testName": { "shape": "String" },
                "actionRunId": { "shape": "String" },
                "linesCoveredCount": { "shape": "Integer" },
                "totalLinesCount": { "shape": "Integer" },
                "lineCoverageCriteria": { "shape": "TrackingSummaryCodeCoverageSummaryLineCoverageCriteriaFloat" },
                "branchesCoveredCount": { "shape": "Integer" },
                "totalBranchesCount": { "shape": "Integer" },
                "branchCoverageCriteria": { "shape": "TrackingSummaryCodeCoverageSummaryBranchCoverageCriteriaFloat" }
            }
        },
        "TrackingSummaryCodeCoverageSummaryBranchCoverageCriteriaFloat": {
            "type": "float",
            "box": true,
            "max": 100,
            "min": 0
        },
        "TrackingSummaryCodeCoverageSummaryLineCoverageCriteriaFloat": {
            "type": "float",
            "box": true,
            "max": 100,
            "min": 0
        },
        "TrackingSummaryCodeQuality": {
            "type": "structure",
            "members": {
                "codeCoverageSummaries": { "shape": "CodeCoverageSummaryList" },
                "testResultSummaries": { "shape": "TestResultSummaryList" }
            }
        },
        "TrackingSummaryDeployment": {
            "type": "structure",
            "required": ["environment", "deploymentDetails"],
            "members": {
                "environment": { "shape": "TrackingSummaryEnvironment" },
                "deploymentDetails": { "shape": "TrackingSummaryEnvironmentDeploymentDetails" }
            }
        },
        "TrackingSummaryDeploymentList": {
            "type": "list",
            "member": { "shape": "TrackingSummaryDeployment" }
        },
        "TrackingSummaryEnvironment": {
            "type": "structure",
            "required": ["environmentName", "environmentType"],
            "members": {
                "environmentName": { "shape": "String" },
                "environmentType": { "shape": "EnvironmentType" }
            }
        },
        "TrackingSummaryEnvironmentDeploymentDetails": {
            "type": "structure",
            "required": ["deploymentTargetType", "lastUpdatedTime"],
            "members": {
                "deploymentTargetType": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "deploymentStatus": { "shape": "String" },
                "deploymentMessage": { "shape": "String" }
            }
        },
        "TrackingSummarySourceRepositoryCommitIdString": {
            "type": "string",
            "max": 20,
            "min": 0
        },
        "TrackingSummaryTestResultSummary": {
            "type": "structure",
            "required": ["testName", "actionRunId", "testsRunCount", "testsPassedCount"],
            "members": {
                "testId": { "shape": "String" },
                "testName": { "shape": "String" },
                "actionRunId": { "shape": "String" },
                "testsRunCount": { "shape": "Integer" },
                "testsPassedCount": { "shape": "Integer" },
                "testPassRateCriteria": { "shape": "TrackingSummaryTestResultSummaryTestPassRateCriteriaFloat" }
            }
        },
        "TrackingSummaryTestResultSummaryTestPassRateCriteriaFloat": {
            "type": "float",
            "box": true,
            "max": 100,
            "min": 0
        },
        "TrackingSummaryWorkflow": {
            "type": "structure",
            "required": ["workflowId", "workflowName"],
            "members": {
                "workflowId": { "shape": "String" },
                "workflowName": { "shape": "String" }
            }
        },
        "TrackingSummaryWorkflowRun": {
            "type": "structure",
            "required": ["workflowRunId", "workflowVersion", "runStatus", "lastUpdatedTime", "startTime"],
            "members": {
                "workflowRunId": { "shape": "String" },
                "workflowVersion": { "shape": "String" },
                "runStatus": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "TrackingSummaryWorkflowRunDetail": {
            "type": "structure",
            "required": ["workflowRun", "workflow", "deployments"],
            "members": {
                "workflowRun": { "shape": "TrackingSummaryWorkflowRun" },
                "workflow": { "shape": "TrackingSummaryWorkflow" },
                "deployments": { "shape": "TrackingSummaryDeploymentList" },
                "codeQuality": { "shape": "TrackingSummaryCodeQuality" }
            }
        },
        "TrackingSummaryWorkflowRunDetailList": {
            "type": "list",
            "member": { "shape": "TrackingSummaryWorkflowRunDetail" }
        },
        "UnlinkAccountFromEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "environmentName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "UnlinkAccountFromEnvironmentResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "environmentName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "environmentName": { "shape": "NameString" },
                "name": { "shape": "NameString" }
            }
        },
        "UnlinkExtensionIssueScopeInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" }
            }
        },
        "UnlinkExtensionIssueScopeOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "UpdateArtifactPackageOriginConfigurationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "repositoryName", "name", "format", "restrictions"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "restrictions": { "shape": "ArtifactPackageOriginRestrictions" }
            }
        },
        "UpdateArtifactPackageOriginConfigurationOutput": {
            "type": "structure",
            "members": {
                "originConfiguration": { "shape": "ArtifactPackageOriginConfiguration" }
            }
        },
        "UpdateArtifactPackageVersionsStatusInput": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "repositoryName",
                "name",
                "format",
                "versions",
                "targetStatus"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "repositoryName": { "shape": "ArtifactRepositoryNameString" },
                "name": { "shape": "ArtifactPackageNameString" },
                "format": { "shape": "ArtifactPackageFormatString" },
                "versions": { "shape": "ArtifactPackageVersionValuesList" },
                "targetStatus": { "shape": "ArtifactPackageVersionStatusString" },
                "namespace": { "shape": "ArtifactPackageNamespaceString" },
                "expectedStatus": { "shape": "ArtifactPackageVersionStatusString" },
                "versionRevisions": { "shape": "ArtifactPackageVersionRevisionMap" }
            }
        },
        "UpdateArtifactRepositoryInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ArtifactRepositoryNameString" },
                "description": { "shape": "ArtifactRepositoryDescriptionString" },
                "upstreams": { "shape": "UpstreamArtifactRepositoryList" }
            }
        },
        "UpdateArtifactRepositoryOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "UpdateCommentContentForIssueInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueId", "commentId", "content", "contentType"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueId": { "shape": "String" },
                "commentId": { "shape": "String" },
                "content": { "shape": "CommentContentString" },
                "contentType": { "shape": "CommentContentType" }
            }
        },
        "UpdateCommentContentForIssueOutput": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "version": { "shape": "String" }
            }
        },
        "UpdateComputeFleetMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "desiredCapacity": { "shape": "UpdateComputeFleetMigrationInputDesiredCapacityInteger" },
                "overflowBehavior": { "shape": "FleetOverflowBehaviorMigration" }
            }
        },
        "UpdateComputeFleetMigrationInputDesiredCapacityInteger": {
            "type": "integer",
            "box": true,
            "max": 20,
            "min": 0
        },
        "UpdateComputeFleetMigrationOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "UpdateComputeFleetRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "ComputeFleetNameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "baseCapacity": { "shape": "UpdateComputeFleetRequestBaseCapacityInteger" },
                "scalingMode": { "shape": "ComputeFleetScalingMode" }
            }
        },
        "UpdateComputeFleetRequestBaseCapacityInteger": {
            "type": "integer",
            "box": true,
            "max": 20,
            "min": 0
        },
        "UpdateComputeFleetResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "baseCapacity"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "ComputeFleetNameString" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "settings": { "shape": "ComputeFleetSettings" },
                "baseCapacity": { "shape": "Integer" },
                "scalingMode": { "shape": "ComputeFleetScalingMode" },
                "status": { "shape": "ComputeFleetStatus" }
            }
        },
        "UpdateDevEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "id"
                },
                "alias": { "shape": "UpdateDevEnvironmentRequestAliasString" },
                "ides": { "shape": "IdeConfigurationList" },
                "instanceType": { "shape": "InstanceType" },
                "inactivityTimeoutMinutes": { "shape": "InactivityTimeoutMinutes" },
                "clientToken": { "shape": "ClientToken" }
            }
        },
        "UpdateDevEnvironmentRequestAliasString": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "UpdateDevEnvironmentResponse": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName"],
            "members": {
                "id": { "shape": "Uuid" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "alias": { "shape": "UpdateDevEnvironmentResponseAliasString" },
                "ides": { "shape": "IdeConfigurationList" },
                "instanceType": { "shape": "InstanceType" },
                "inactivityTimeoutMinutes": { "shape": "InactivityTimeoutMinutes" },
                "clientToken": { "shape": "ClientToken" }
            }
        },
        "UpdateDevEnvironmentResponseAliasString": {
            "type": "string",
            "max": 128,
            "min": 1,
            "pattern": "[a-zA-Z0-9]+(?:[-_\\.][a-zA-Z0-9]+)*"
        },
        "UpdateDummyDataInput": {
            "type": "structure",
            "required": ["organizationName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                }
            }
        },
        "UpdateDummyDataOutput": {
            "type": "structure",
            "members": {
                "name": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "name"
                },
                "version": {
                    "shape": "String",
                    "location": "header",
                    "locationName": "version"
                }
            }
        },
        "UpdateEnvironmentRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "description": { "shape": "UpdateEnvironmentRequestDescriptionString" },
                "environmentType": { "shape": "EnvironmentType" }
            }
        },
        "UpdateEnvironmentRequestDescriptionString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "UpdateEnvironmentResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "String" },
                "environmentType": { "shape": "EnvironmentType" },
                "description": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "UpdateIssueInput": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "issueStoreName",
                "title",
                "versionId",
                "statusId",
                "description",
                "archived"
            ],
            "members": {
                "id": { "shape": "NameString" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" },
                "title": { "shape": "UpdateIssueInputTitleString" },
                "versionId": { "shape": "Integer" },
                "statusId": { "shape": "String" },
                "description": { "shape": "UpdateIssueInputDescriptionString" },
                "archived": { "shape": "Boolean" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIds" },
                "priority": { "shape": "IssuePriority" },
                "labelIds": { "shape": "IssueLabelIds" },
                "estimate": { "shape": "Estimate" },
                "customFields": { "shape": "UpdateIssueInputCustomFieldsList" }
            }
        },
        "UpdateIssueInputCustomFieldsList": {
            "type": "list",
            "member": { "shape": "IssueCustomField" },
            "max": 50,
            "min": 0
        },
        "UpdateIssueInputDescriptionString": {
            "type": "string",
            "max": 200000,
            "min": 0
        },
        "UpdateIssueInputTitleString": {
            "type": "string",
            "max": 1024,
            "min": 1
        },
        "UpdateIssueOutput": {
            "type": "structure",
            "members": {
                "changeStatus": { "shape": "String" },
                "identifier": { "shape": "String" },
                "shortId": { "shape": "String" }
            }
        },
        "UpdateIssueRequestMigration": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "issueStoreName",
                "title",
                "statusId",
                "description",
                "archived"
            ],
            "members": {
                "id": {
                    "shape": "IssueId",
                    "location": "uri",
                    "locationName": "id"
                },
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "IssueStoreNameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "title": { "shape": "UpdateIssueRequestMigrationTitleString" },
                "statusId": { "shape": "Uuid" },
                "description": { "shape": "UpdateIssueRequestMigrationDescriptionString" },
                "archived": { "shape": "Boolean" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIdListMigration" },
                "priority": { "shape": "IssuePriorityMigration" },
                "labelIds": { "shape": "IssueLabelIdListMigration" },
                "estimate": { "shape": "EstimateMigration" },
                "customFields": { "shape": "IssueCustomFieldsMigration" }
            }
        },
        "UpdateIssueRequestMigrationDescriptionString": {
            "type": "string",
            "max": 32767,
            "min": 0
        },
        "UpdateIssueRequestMigrationTitleString": {
            "type": "string",
            "max": 255,
            "min": 1
        },
        "UpdateIssueResponseMigration": {
            "type": "structure",
            "required": [
                "id",
                "organizationName",
                "projectName",
                "issueStoreName",
                "title",
                "versionId",
                "statusId",
                "description",
                "issueStoreId",
                "archived",
                "createdTime",
                "createdBy",
                "lastUpdatedTime",
                "updatedBy"
            ],
            "members": {
                "id": { "shape": "IssueId" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "IssueStoreNameString" },
                "title": { "shape": "String" },
                "versionId": { "shape": "Integer" },
                "statusId": { "shape": "String" },
                "description": { "shape": "String" },
                "issueStoreId": { "shape": "String" },
                "archived": { "shape": "Boolean" },
                "createdTime": { "shape": "SyntheticTimestamp_date_time" },
                "createdBy": { "shape": "String" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "updatedBy": { "shape": "String" },
                "blocked": { "shape": "Boolean" },
                "assigneeIds": { "shape": "IssueAssigneeIdListMigration" },
                "priority": { "shape": "IssuePriorityMigration" },
                "labelIds": { "shape": "IssueLabelIdListMigration" },
                "estimate": { "shape": "EstimateMigration" },
                "customFields": { "shape": "IssueCustomFieldsMigration" }
            }
        },
        "UpdateIssueStoreInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName", "statuses"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "issueStoreName": { "shape": "NameString" },
                "statuses": { "shape": "IssueStoreStatusList" },
                "estimationType": { "shape": "IssueStoreEstimationType" },
                "labels": { "shape": "Labels" },
                "savedViews": { "shape": "SavedViews" },
                "maxAssigneesPerIssue": { "shape": "MaxAssigneesPerIssue" }
            }
        },
        "UpdateIssueStoreOutput": {
            "type": "structure",
            "members": {
                "identifier": { "shape": "String" }
            }
        },
        "UpdateIssueStoreRequestMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "issueStoreName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "issueStoreName": {
                    "shape": "IssueStoreNameString",
                    "location": "uri",
                    "locationName": "issueStoreName"
                },
                "estimationType": { "shape": "IssueStoreEstimationTypeMigration" },
                "maxAssigneesPerIssue": { "shape": "MaxAssigneesPerIssueMigration" }
            }
        },
        "UpdateIssueStoreResponseMigration": {
            "type": "structure",
            "required": ["id", "organizationName", "projectName", "lastUpdatedTime", "versionId"],
            "members": {
                "id": { "shape": "String" },
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "lastUpdatedTime": { "shape": "Timestamp" },
                "estimationType": { "shape": "IssueStoreEstimationTypeMigration" },
                "maxAssigneesPerIssue": { "shape": "MaxAssigneesPerIssueMigration" },
                "versionId": { "shape": "Integer" }
            }
        },
        "UpdateNotificationChannelRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": {
                    "shape": "String",
                    "location": "uri",
                    "locationName": "id"
                },
                "alias": { "shape": "NameString" }
            }
        },
        "UpdateNotificationChannelResponse": {
            "type": "structure",
            "required": ["organizationName", "projectName", "id", "alias", "type", "details"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "id": { "shape": "String" },
                "alias": { "shape": "NameString" },
                "type": { "shape": "NotificationChannelType" },
                "details": { "shape": "NotificationChannelDetails" }
            }
        },
        "UpdateOnboardingInput": {
            "type": "structure",
            "required": [
                "organizationName",
                "onboardingId",
                "submitted",
                "dismissed",
                "nextQuestion",
                "sections",
                "title"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "onboardingId": { "shape": "String" },
                "submitted": { "shape": "Boolean" },
                "dismissed": { "shape": "Boolean" },
                "nextQuestion": { "shape": "NextQuestionString" },
                "sections": { "shape": "QuestionSection" },
                "title": { "shape": "String" }
            }
        },
        "UpdateOrganizationRequest": {
            "type": "structure",
            "required": ["name", "displayName"],
            "members": {
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "displayName": { "shape": "UpdateOrganizationRequestDisplayNameString" },
                "description": { "shape": "UpdateOrganizationRequestDescriptionString" },
                "versionId": { "shape": "String" }
            }
        },
        "UpdateOrganizationRequestDescriptionString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "UpdateOrganizationRequestDisplayNameString": {
            "type": "string",
            "max": 200,
            "min": 1
        },
        "UpdateOrganizationResponse": {
            "type": "structure",
            "members": {
                "name": { "shape": "NameString" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" },
                "versionId": { "shape": "String" }
            }
        },
        "UpdatePersonInput": {
            "type": "structure",
            "required": ["userName", "id"],
            "members": {
                "userName": { "shape": "String" },
                "id": { "shape": "String" },
                "region": { "shape": "String" }
            }
        },
        "UpdatePersonOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" }
            }
        },
        "UpdatePinnedProjectRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "pinStatus"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "pinStatus": { "shape": "PinnedProjectStatus" }
            }
        },
        "UpdatePinnedProjectResponse": {
            "type": "structure",
            "required": ["organizationName", "name", "pinStatus"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "pinStatus": { "shape": "PinnedProjectStatus" }
            }
        },
        "UpdateProjectRequest": {
            "type": "structure",
            "required": ["organizationName", "name", "displayName"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "name": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "displayName": { "shape": "UpdateProjectRequestDisplayNameString" },
                "description": { "shape": "UpdateProjectRequestDescriptionString" },
                "versionId": { "shape": "String" }
            }
        },
        "UpdateProjectRequestDescriptionString": {
            "type": "string",
            "max": 200,
            "min": 0
        },
        "UpdateProjectRequestDisplayNameString": {
            "type": "string",
            "max": 200,
            "min": 1
        },
        "UpdateProjectResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "displayName": { "shape": "String" },
                "description": { "shape": "String" },
                "versionId": { "shape": "String" }
            }
        },
        "UpdatePullRequestCommentContentInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "pullRequestId", "commentId", "content", "contentType"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "pullRequestId": { "shape": "String" },
                "commentId": { "shape": "String" },
                "content": { "shape": "CommentContentString" },
                "contentType": { "shape": "CommentContentType" }
            }
        },
        "UpdatePullRequestCommentContentOutput": {
            "type": "structure",
            "members": {
                "id": { "shape": "String" },
                "version": { "shape": "String" }
            }
        },
        "UpdateSecretMigrationInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "NameString" },
                "description": { "shape": "String" },
                "secretValue": { "shape": "SecretValueString" }
            }
        },
        "UpdateSecretMigrationOutput": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" },
                "referenceId": { "shape": "String" }
            }
        },
        "UpdateSecretRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "SecretNameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "description": { "shape": "SecretDescription" },
                "value": { "shape": "SecretValueString" },
                "environmentSecretOverrides": { "shape": "UpdateSecretRequestEnvironmentSecretOverridesList" }
            }
        },
        "UpdateSecretRequestEnvironmentSecretOverridesList": {
            "type": "list",
            "member": { "shape": "EnvironmentSecretOverride" },
            "max": 5,
            "min": 0
        },
        "UpdateSecretResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "name": { "shape": "SecretNameString" },
                "description": { "shape": "SecretDescription" },
                "referenceId": { "shape": "String" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "environmentSecretOverridesMetadataList": {
                    "shape": "UpdateSecretResponseEnvironmentSecretOverridesMetadataListList"
                }
            }
        },
        "UpdateSecretResponseEnvironmentSecretOverridesMetadataListList": {
            "type": "list",
            "member": { "shape": "EnvironmentSecretOverrideMetadata" },
            "max": 5,
            "min": 0
        },
        "UpdateSourcePullRequestApprovalStatusInput": {
            "type": "structure",
            "required": [
                "organizationName",
                "projectName",
                "sourcePullRequestNumber",
                "revisionNumber",
                "approvalStatus"
            ],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "revisionNumber": { "shape": "String" },
                "approvalStatus": { "shape": "SourcePullRequestApprovalStatus" }
            }
        },
        "UpdateSourcePullRequestApprovalStatusOutput": {
            "type": "structure",
            "members": {
                "success": { "shape": "Boolean" }
            }
        },
        "UpdateSourcePullRequestInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "status": { "shape": "SourcePullRequestStatus" },
                "title": { "shape": "SourcePullRequestTitle" },
                "description": { "shape": "SourcePullRequestDescription" }
            }
        },
        "UpdateSourcePullRequestOutput": {
            "type": "structure",
            "members": {
                "number": { "shape": "SourcePullRequestNumber" }
            }
        },
        "UpdateSourcePullRequestReviewersInput": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourcePullRequestNumber"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourcePullRequestNumber": { "shape": "String" },
                "additionalRequiredReviewers": { "shape": "ContributorIds" },
                "removedRequiredReviewers": { "shape": "ContributorIds" },
                "additionalOptionalReviewers": { "shape": "ContributorIds" },
                "removedOptionalReviewers": { "shape": "ContributorIds" }
            }
        },
        "UpdateSourcePullRequestReviewersOutput": {
            "type": "structure",
            "members": {
                "success": { "shape": "Boolean" }
            }
        },
        "UpdateSourceReferencePolicyRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName", "referenceType", "prefixPattern"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "sourceRepositoryName": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "sourceRepositoryName"
                },
                "referenceType": { "shape": "UpdateSourceReferencePolicyRequestReferenceTypeString" },
                "prefixPattern": { "shape": "UpdateSourceReferencePolicyRequestPrefixPatternString" },
                "newPrefixPattern": { "shape": "UpdateSourceReferencePolicyRequestNewPrefixPatternString" },
                "newDeniedActions": { "shape": "DeniedActionsList" },
                "newExcludedUsers": { "shape": "ExcludedUsersList" }
            }
        },
        "UpdateSourceReferencePolicyRequestNewPrefixPatternString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "UpdateSourceReferencePolicyRequestPrefixPatternString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "UpdateSourceReferencePolicyRequestReferenceTypeString": {
            "type": "string",
            "max": 128,
            "min": 1
        },
        "UpdateSourceReferencePolicyResponse": {
            "type": "structure",
            "members": {
                "referencePolicy": { "shape": "SourceReferencePolicySummary" }
            }
        },
        "UpdateSourceRepositoryInputMigration": {
            "type": "structure",
            "required": ["organizationName", "projectName", "sourceRepositoryName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameStringMigration" },
                "description": { "shape": "SourceRepositoryDescriptionStringMigration" },
                "autoInitialize": { "shape": "SourceAutoInitializeInputMigration" }
            }
        },
        "UpdateSourceRepositoryOutputMigration": {
            "type": "structure",
            "members": {
                "version": { "shape": "String" },
                "id": { "shape": "String" }
            }
        },
        "UpdateSourceRepositoryRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "name", "description"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "name": {
                    "shape": "SourceRepositoryNameString",
                    "location": "uri",
                    "locationName": "name"
                },
                "description": { "shape": "SourceRepositoryDescriptionString" }
            }
        },
        "UpdateSourceRepositoryResponse": {
            "type": "structure",
            "required": ["name"],
            "members": {
                "name": { "shape": "SourceRepositoryNameString" },
                "description": { "shape": "SourceRepositoryDescriptionString" }
            }
        },
        "UpdateWorkflowRunRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowId", "workflowRunId", "runStatus"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowId"
                },
                "workflowRunId": {
                    "shape": "Uuid",
                    "location": "uri",
                    "locationName": "workflowRunId"
                },
                "runStatus": { "shape": "requestRunStatus" }
            }
        },
        "UpdateWorkflowRunResponse": {
            "type": "structure",
            "members": {
                "organizationName": { "shape": "NameString" },
                "projectName": { "shape": "NameString" },
                "workflowId": { "shape": "Uuid" },
                "workflowRunId": { "shape": "Uuid" },
                "runStatus": { "shape": "requestRunStatus" }
            }
        },
        "UpstreamArtifactRepository": {
            "type": "structure",
            "members": {
                "name": { "shape": "ArtifactRepositoryNameString" }
            }
        },
        "UpstreamArtifactRepositoryList": {
            "type": "list",
            "member": { "shape": "UpstreamArtifactRepository" }
        },
        "Url": {
            "type": "string",
            "pattern": "[0-9a-zA-Z-._~:/?#\\[\\]@!$&'()*+,;=]{4,1024}"
        },
        "UserIdentity": {
            "type": "structure",
            "required": ["userType", "principalId"],
            "members": {
                "userType": { "shape": "UserType" },
                "principalId": { "shape": "String" },
                "userName": { "shape": "String" },
                "awsAccountId": { "shape": "String" }
            }
        },
        "UserNotificationSettingsItem": {
            "type": "structure",
            "required": ["status", "resourceType"],
            "members": {
                "status": { "shape": "UserNotificationSettingsStatus" },
                "resourceType": { "shape": "NameString" }
            }
        },
        "UserNotificationSettingsItemList": {
            "type": "list",
            "member": { "shape": "UserNotificationSettingsItem" }
        },
        "UserNotificationSettingsStatus": {
            "type": "string",
            "enum": ["ENABLED", "DISABLED"]
        },
        "UserType": {
            "type": "string",
            "enum": ["USER", "AWS_ACCOUNT", "UNKNOWN"]
        },
        "Uuid": {
            "type": "string",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        },
        "ValidateOrganizationNameRequest": {
            "type": "structure",
            "required": ["displayName"],
            "members": {
                "displayName": { "shape": "ValidateOrganizationNameRequestDisplayNameString" },
                "name": { "shape": "NameString" }
            }
        },
        "ValidateOrganizationNameRequestDisplayNameString": {
            "type": "string",
            "min": 1
        },
        "ValidateOrganizationNameResponse": {
            "type": "structure",
            "required": ["suggestedName", "isNameValid"],
            "members": {
                "suggestedName": { "shape": "String" },
                "isNameValid": { "shape": "Boolean" },
                "isNameTaken": { "shape": "Boolean" },
                "message": { "shape": "String" }
            }
        },
        "ValidateProjectNameRequest": {
            "type": "structure",
            "required": ["organizationName", "displayName"],
            "members": {
                "organizationName": { "shape": "NameString" },
                "displayName": { "shape": "String" },
                "name": { "shape": "NameString" }
            }
        },
        "ValidateProjectNameResponse": {
            "type": "structure",
            "required": ["suggestedName", "isNameValid"],
            "members": {
                "suggestedName": { "shape": "String" },
                "isNameValid": { "shape": "Boolean" },
                "isNameTaken": { "shape": "Boolean" },
                "message": { "shape": "String" }
            }
        },
        "ValidateWorkflowDraftRequest": {
            "type": "structure",
            "required": ["organizationName", "projectName", "workflowDraft"],
            "members": {
                "organizationName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "organizationName"
                },
                "projectName": {
                    "shape": "NameString",
                    "location": "uri",
                    "locationName": "projectName"
                },
                "workflowDraft": { "shape": "ValidateWorkflowDraftRequestWorkflowDraftString" }
            }
        },
        "ValidateWorkflowDraftRequestWorkflowDraftString": {
            "type": "string",
            "min": 1
        },
        "ValidateWorkflowDraftResponse": {
            "type": "structure",
            "members": {
                "reasons": { "shape": "WorkflowStatusReasons" }
            }
        },
        "ValidationErrorItem": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "location": { "shape": "String" }
            }
        },
        "ValidationErrorItemList": {
            "type": "list",
            "member": { "shape": "ValidationErrorItem" }
        },
        "ValidationException": {
            "type": "structure",
            "required": ["message"],
            "members": {
                "message": { "shape": "String" },
                "reason": { "shape": "ValidationExceptionReason" },
                "errors": { "shape": "ValidationErrorItemList" }
            },
            "error": {
                "httpStatusCode": 400,
                "senderFault": true
            },
            "exception": true
        },
        "ValidationExceptionReason": {
            "type": "string",
            "enum": ["unknownOperation", "cannotParse", "fieldValidationFailed", "unsatisfiedRequirement"]
        },
        "VerifySessionResponse": {
            "type": "structure",
            "members": {
                "identity": { "shape": "VerifySessionResponseIdentityString" },
                "self": { "shape": "String" }
            }
        },
        "VerifySessionResponseIdentityString": {
            "type": "string",
            "max": 256,
            "min": 1
        },
        "WorkflowActionState": {
            "type": "structure",
            "members": {
                "name": { "shape": "String" },
                "actionRunId": { "shape": "String" },
                "workflowRunId": { "shape": "String" },
                "runSummary": { "shape": "String" },
                "status": { "shape": "String" },
                "lastStatusChange": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" }
            }
        },
        "WorkflowActionStates": {
            "type": "list",
            "member": { "shape": "WorkflowActionState" }
        },
        "WorkflowDefinition": {
            "type": "structure",
            "required": ["format", "path", "definition"],
            "members": {
                "format": { "shape": "String" },
                "path": { "shape": "String" },
                "definition": { "shape": "String" }
            }
        },
        "WorkflowDefinitionSummary": {
            "type": "structure",
            "required": ["format", "path"],
            "members": {
                "format": { "shape": "String" },
                "path": { "shape": "String" }
            }
        },
        "WorkflowFilter": {
            "type": "structure",
            "required": ["name", "value", "condition"],
            "members": {
                "name": { "shape": "WorkflowFilterKey" },
                "value": { "shape": "WorkflowFilterValueString" },
                "condition": { "shape": "WorkflowFilterComparator" }
            }
        },
        "WorkflowFilterComparator": {
            "type": "string",
            "enum": ["EQUALS", "NOT_EQUALS", "BEGINS_WITH"]
        },
        "WorkflowFilterKey": {
            "type": "string",
            "enum": ["name", "sourceRepositoryName", "sourceBranchName", "status"]
        },
        "WorkflowFilterValueString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "WorkflowFilters": {
            "type": "list",
            "member": { "shape": "WorkflowFilter" },
            "max": 5,
            "min": 0
        },
        "WorkflowOrdering": {
            "type": "structure",
            "required": ["key"],
            "members": {
                "key": { "shape": "WorkflowOrderingKey" },
                "direction": { "shape": "WorkflowOrderingDirection" }
            }
        },
        "WorkflowOrderingDirection": {
            "type": "string",
            "enum": ["ASC", "DESC"]
        },
        "WorkflowOrderingKey": {
            "type": "string",
            "enum": ["lastUpdatedTime", "creationTime"]
        },
        "WorkflowOrderingList": {
            "type": "list",
            "member": { "shape": "WorkflowOrdering" },
            "max": 1,
            "min": 0
        },
        "WorkflowRunFilter": {
            "type": "structure",
            "required": ["name", "value", "condition"],
            "members": {
                "name": { "shape": "WorkflowRunFilterKey" },
                "value": { "shape": "WorkflowRunFilterValueString" },
                "condition": { "shape": "WorkflowRunFilterComparator" }
            }
        },
        "WorkflowRunFilterComparator": {
            "type": "string",
            "enum": ["EQUALS", "NOT_EQUALS", "LTE", "GTE", "BEGINS_WITH"]
        },
        "WorkflowRunFilterKey": {
            "type": "string",
            "enum": ["status", "triggerEventId", "lastUpdatedTime"]
        },
        "WorkflowRunFilterValueString": {
            "type": "string",
            "max": 100,
            "min": 0
        },
        "WorkflowRunFilters": {
            "type": "list",
            "member": { "shape": "WorkflowRunFilter" },
            "max": 5,
            "min": 0
        },
        "WorkflowRunMetadata": {
            "type": "map",
            "key": { "shape": "String" },
            "value": { "shape": "String" }
        },
        "WorkflowRunMode": {
            "type": "string",
            "enum": ["QUEUED", "PARALLEL", "SUPERSEDED"]
        },
        "WorkflowRunOrdering": {
            "type": "structure",
            "required": ["key"],
            "members": {
                "key": { "shape": "WorkflowRunOrderingKey" },
                "direction": { "shape": "WorkflowRunOrderingDirection" }
            }
        },
        "WorkflowRunOrderingDirection": {
            "type": "string",
            "enum": ["ASC", "DESC"]
        },
        "WorkflowRunOrderingKey": {
            "type": "string",
            "enum": ["startTime", "endTime", "lastUpdatedTime"]
        },
        "WorkflowRunOrderingList": {
            "type": "list",
            "member": { "shape": "WorkflowRunOrdering" },
            "max": 1,
            "min": 0
        },
        "WorkflowRunStatusReason": {
            "type": "structure",
            "required": ["statusCode"],
            "members": {
                "statusCode": { "shape": "String" },
                "statusMessage": { "shape": "String" }
            }
        },
        "WorkflowRunStatusReasons": {
            "type": "list",
            "member": { "shape": "WorkflowRunStatusReason" }
        },
        "WorkflowRunSummaries": {
            "type": "list",
            "member": { "shape": "WorkflowRunSummary" }
        },
        "WorkflowRunSummary": {
            "type": "structure",
            "required": [
                "id",
                "workflowId",
                "workflowVersion",
                "_triggerEventId",
                "_triggerEventType",
                "status",
                "startTime",
                "lastUpdatedTime"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "workflowId": { "shape": "Uuid" },
                "workflowVersion": { "shape": "Integer" },
                "_triggerEventId": { "shape": "String" },
                "_triggerEventType": { "shape": "String" },
                "_triggerEventActor": { "shape": "String" },
                "status": { "shape": "String" },
                "statusReasons": { "shape": "WorkflowRunStatusReasons" },
                "startTime": { "shape": "SyntheticTimestamp_date_time" },
                "endTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "_metadata": { "shape": "WorkflowRunMetadata" }
            }
        },
        "WorkflowStatus": {
            "type": "string",
            "enum": ["INVALID", "ACTIVE"]
        },
        "WorkflowStatusReason": {
            "type": "structure",
            "required": ["statusCode"],
            "members": {
                "statusCode": { "shape": "String" },
                "statusMessage": { "shape": "String" },
                "templateVariables": { "shape": "TemplateVariables" },
                "startMark": { "shape": "WorkflowStatusReasonMark" },
                "endMark": { "shape": "WorkflowStatusReasonMark" }
            }
        },
        "WorkflowStatusReasonMark": {
            "type": "structure",
            "required": ["lineNumber", "columnNumber"],
            "members": {
                "lineNumber": { "shape": "Integer" },
                "columnNumber": { "shape": "Integer" }
            }
        },
        "WorkflowStatusReasons": {
            "type": "list",
            "member": { "shape": "WorkflowStatusReason" }
        },
        "WorkflowSummaries": {
            "type": "list",
            "member": { "shape": "WorkflowSummary" }
        },
        "WorkflowSummary": {
            "type": "structure",
            "required": [
                "id",
                "version",
                "name",
                "sourceRepositoryName",
                "sourceBranchName",
                "definition",
                "creationTime",
                "lastUpdatedTime",
                "runMode",
                "status"
            ],
            "members": {
                "id": { "shape": "Uuid" },
                "version": { "shape": "Integer" },
                "name": { "shape": "String" },
                "sourceRepositoryName": { "shape": "SourceRepositoryNameString" },
                "sourceBranchName": { "shape": "SourceRepositoryBranchString" },
                "definition": { "shape": "WorkflowDefinitionSummary" },
                "creationTime": { "shape": "SyntheticTimestamp_date_time" },
                "lastUpdatedTime": { "shape": "SyntheticTimestamp_date_time" },
                "runMode": { "shape": "WorkflowRunMode" },
                "status": { "shape": "WorkflowStatus" },
                "_statusReasons": { "shape": "WorkflowStatusReasons" }
            }
        },
        "actionRunSummaryList": {
            "type": "list",
            "member": { "shape": "ActionRunSummary" }
        },
        "requestRunStatus": {
            "type": "string",
            "enum": ["STOPPING", "IN_PROGRESS"]
        }
    }
}
